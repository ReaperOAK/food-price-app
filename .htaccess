<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /

  # Handle build artifacts first (map /build/static/ to /static/)
  RewriteCond %{REQUEST_URI} !^/static/
  RewriteRule ^(build/)?static/(css|js)/(.+)\.(css|js|chunk\.js|chunk\.css)(\.gz)?$ /static/$2/$3.$4$5 [L]

  # Static files handler
  RewriteRule ^static/(css|js)/[^/]+\.(css|js|chunk\.js|chunk\.css)(\.gz)?$ static.php [L]
  # Force HTTPS
  RewriteCond %{HTTPS} off
  RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301,QSA]
  
  # Remove www
  RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
  RewriteRule ^(.*)$ https://%1/$1 [R=301,L,QSA]
  
  # Serve prerendered pages to search engines for better SERP title adoption
  RewriteCond %{HTTP_USER_AGENT} "bot|crawl|slurp|spider|mediapartners|facebookexternalhit|twitterbot|whatsapp" [NC]
  RewriteCond %{REQUEST_METHOD} GET
  RewriteCond %{DOCUMENT_ROOT}/prerendered%{REQUEST_URI}/index.html -f
  RewriteRule ^(.*)$ /prerendered%{REQUEST_URI}/index.html [L]
  
  # Fallback for search engines - serve prerendered homepage if specific page not found
  RewriteCond %{HTTP_USER_AGENT} "bot|crawl|slurp|spider|mediapartners|facebookexternalhit|twitterbot|whatsapp" [NC]
  RewriteCond %{REQUEST_METHOD} GET
  RewriteCond %{DOCUMENT_ROOT}/prerendered/index.html -f
  RewriteRule ^(.*)$ /prerendered/index.html [L]
  # Handle /webstories route specially
  # If request is exactly /webstories (no trailing slash), serve React app
  RewriteRule ^webstories$ /index.html [L]
  
  # If request is /webstories/ (with trailing slash), check if it's a directory request
  # If no specific file is requested in webstories/, serve React app
  RewriteCond %{REQUEST_URI} ^/webstories/$
  RewriteRule ^webstories/$ /index.html [L]
  
  # Remove trailing slashes for all other routes
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule ^(.*)/$ /$1 [L,R=301,QSA]
  
  # Handle 3XX redirects
  RewriteCond %{HTTP_HOST} ^blogold\.todayeggrates\.com$ [NC]
  RewriteRule ^(.*)$ https://todayeggrates.com/blog/$1 [R=301,L,QSA]
  
  # React Router handling (after static files)
  RewriteRule ^index\.html$ - [L]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule . /index.html [L]
</IfModule>

# Set MIME types
<IfModule mod_mime.c>
  RemoveType .css .js
  AddType text/css .css
  AddType application/javascript .js
</IfModule>

# Set proper headers for static files
<IfModule mod_headers.c>
  # SEO and Search Engine Optimization Headers
  Header always set X-Robots-Tag "index, follow, max-image-preview:large"
  
  # Better caching for dynamic content to help search engines
  <FilesMatch "\.(html|htm)$">
    Header set Cache-Control "public, max-age=1800, must-revalidate"
    Header set X-Content-Type-Options "nosniff"
    Header set X-Frame-Options "SAMEORIGIN"
    # Help search engines understand dynamic content freshness
    Header set Last-Modified "expr=%{TIME_YEAR}-%{TIME_MON}-%{TIME_DAY} %{TIME_HOUR}:%{TIME_MIN}:%{TIME_SEC} GMT"
    Header set Expires "expr=%{REQUEST_TIME} + 1800"
  </FilesMatch>
  
  # Help search engines understand dynamic content
  Header always set X-Content-Type-Options "nosniff"
  Header always set X-Frame-Options "SAMEORIGIN"
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  
  # Force re-crawl for title updates
  Header always set Vary "User-Agent"
  <FilesMatch "\.(css)$">
    Header set Content-Type "text/css; charset=utf-8"
    Header set X-Content-Type-Options "nosniff"
  </FilesMatch>
  
  <FilesMatch "\.(js)$">
    Header set Content-Type "application/javascript; charset=utf-8"
    Header set X-Content-Type-Options "nosniff"
  </FilesMatch>
</IfModule>

# Add CORS headers for assets
<FilesMatch "\.(css|js|webp|ico|json|webmanifest|gz)$">
  Header set Access-Control-Allow-Origin "*"
  Header set X-Content-Type-Options "nosniff"
  Header set Vary "Accept-Encoding"
</FilesMatch>

# Enable compression
<IfModule mod_deflate.c>
  # Force compression for text files
  SetOutputFilter DEFLATE
  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/x-javascript application/json
  
  # Level of compression (0-9)
  DeflateCompressionLevel 9
  
  # Don't compress images
  SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png|webp)$ no-gzip dont-vary
</IfModule>

# Browser caching
<IfModule mod_expires.c>
  ExpiresActive On
  ExpiresByType image/webp "access plus 1 year"
  ExpiresByType image/jpeg "access plus 1 year"
  ExpiresByType image/png "access plus 1 year"
  ExpiresByType text/css "access plus 1 month"
  ExpiresByType application/javascript "access plus 1 month"
  ExpiresByType text/html "access plus 0 seconds"
  ExpiresByType text/xml "access plus 0 seconds"
</IfModule>

# Security headers
<IfModule mod_headers.c>
  Header set X-Content-Type-Options "nosniff"
  Header set X-XSS-Protection "1; mode=block"
  Header set X-Frame-Options "SAMEORIGIN"
  Header set Strict-Transport-Security "max-age=31536000; includeSubDomains"
  Header set Referrer-Policy "strict-origin-when-cross-origin"
</IfModule>

# SEO Optimization for Better SERP Title Adoption
<IfModule mod_headers.c>
  # Add specific headers for SEO meta tag endpoints
  <FilesMatch "generate_meta_tags\.php$">
    Header set Content-Type "application/json; charset=utf-8"
    Header set Cache-Control "public, max-age=3600"
    Header set X-Robots-Tag "noindex"
  </FilesMatch>
  
  # Add canonical link hints
  Header add Link "</php/seo/generate_meta_tags.php>; rel=\"preload\"; as=\"fetch\"; crossorigin"
  
  # Additional SEO signals for better title adoption
  <FilesMatch "\.html$">
    Header set X-Title-Source "server-optimized"
    Header set X-SEO-Optimized "true"
  </FilesMatch>
</IfModule>

# Handle specific SEO routes
<IfModule mod_rewrite.c>
  # SEO optimization endpoint
  RewriteRule ^seo-test/?$ /seo-optimized.html [L]
  
  # Meta tag generator with proper content type
  RewriteRule ^api/meta/?$ /php/seo/generate_meta_tags.php [L,QSA]
</IfModule>
