{"version":3,"file":"static/js/575.179da49f.chunk.js","mappings":"8KAGA,MA8EA,EA9EkBA,KAChB,MAAQC,MAAOC,IAAeC,EAAAA,EAAAA,MACvBC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAG7BL,EAAQC,EAAWS,QAAQ,YAAa,IAiB9C,OAfAC,EAAAA,EAAAA,YAAU,KACRC,MAAM,oCAADC,OAAqCb,IACvCc,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,GAAeD,EAAKd,cAAgB,IAAIgB,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEE,MAAQ,IAAID,KAAKF,EAAEG,QAC3FnB,EAAgBc,GAChBX,GAAW,EAAM,IAElBiB,OAAMhB,IACLiB,QAAQjB,MAAM,gCAAiCA,GAC/CC,EAASD,GACTD,GAAW,EAAM,GACjB,GACH,CAACP,IAEAM,GAEAoB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DC,SAAA,EACvEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,qBAAmB5B,MACrF6B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAC,kBAK/BpB,GAEAkB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DC,SAAA,EACvEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,qBAAmB5B,MACrF0B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,CAAC,uBAAqBpB,EAAMsB,eAMzEJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DC,SAAA,EACvEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,qBAAmB5B,MACrF6B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,oCAAmCC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAIK,MAAO,CAAEC,gBAAiB,WAAYJ,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,UACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,uBAGzDC,EAAAA,EAAAA,KAAA,SAAAD,SACGzB,EAAa8B,OAAS,EACrB9B,EAAa+B,KAAI,CAACC,EAAMC,KACtBV,EAAAA,EAAAA,MAAA,MAEEC,UAAS,2BAAAd,OAA6BuB,EAAQ,IAAM,EAAI,eAAiB,eAAc,uBAAsBR,SAAA,EAE7GC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6BAA4BC,SAAEO,EAAKZ,QACjDM,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6BAA4BC,SACvCO,EAAKE,YAAW,SAAAxB,OAAOyB,WAAWH,EAAKE,aAAaE,QAAQ,IAAO,UACjE,GAAA1B,OANGsB,EAAKZ,KAAI,KAAAV,OAAIuB,OAUzBP,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAyCa,QAAQ,IAAGZ,SAAC,iCAMzE,C","sources":["components/StatePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst StatePage = () => {\n  const { state: stateParam } = useParams();\n  const [averageRates, setAverageRates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Extract the state from the URL parameter\n  const state = stateParam.replace('-egg-rate', '');\n\n  useEffect(() => {\n    fetch(`/php/get_average_rates.php?state=${state}`)\n      .then(response => response.json())\n      .then(data => {\n        const sortedRates = (data.averageRates || []).sort((a, b) => new Date(b.date) - new Date(a.date));\n        setAverageRates(sortedRates);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching average rates:', error);\n        setError(error);\n        setLoading(false);\n      });\n  }, [state]);\n\n  if (loading) {\n    return (\n      <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n        <div className=\"text-center\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n        <div className=\"text-center text-red-500\">Error loading data: {error.message}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full border border-gray-300\">\n          <thead>\n            <tr style={{ backgroundColor: '#F9BE0C' }}>\n              <th className=\"border border-gray-300 p-4 text-left\">Date</th>\n              <th className=\"border border-gray-300 p-4 text-left\">Average Rate</th>\n            </tr>\n          </thead>\n          <tbody>\n            {averageRates.length > 0 ? (\n              averageRates.map((rate, index) => (\n                <tr\n                  key={`${rate.date}-${index}`}\n                  className={`transition duration-150 ${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n                >\n                  <td className=\"border border-gray-300 p-4\">{rate.date}</td>\n                  <td className=\"border border-gray-300 p-4\">\n                    {rate.averageRate ? `â‚¹${parseFloat(rate.averageRate).toFixed(2)}` : 'N/A'}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td className=\"border border-gray-300 p-4 text-center\" colSpan=\"2\">No data available</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default StatePage;"],"names":["StatePage","state","stateParam","useParams","averageRates","setAverageRates","useState","loading","setLoading","error","setError","replace","useEffect","fetch","concat","then","response","json","data","sortedRates","sort","a","b","Date","date","catch","console","_jsxs","className","children","_jsx","message","style","backgroundColor","length","map","rate","index","averageRate","parseFloat","toFixed","colSpan"],"sourceRoot":""}