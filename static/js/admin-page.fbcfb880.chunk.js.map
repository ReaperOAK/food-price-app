{"version":3,"file":"static/js/admin-page.fbcfb880.chunk.js","mappings":"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","sources":["components/admin/RateForm.js","components/rates/EggRatesTable.js","components/layout/AdminNavbar.js","components/common/StateSelect.js","components/common/CitySelect.js","components/admin/AddStateForm.js","components/admin/AddCityForm.js","pages/AdminPage.js"],"sourcesContent":["import React from 'react';\n\nconst RateForm = ({\n  eggRate,\n  setEggRate,\n  handleSubmit,\n  handleSelectAll,\n  handleCopyPreviousRates,\n}) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-6 grid grid-cols-1 gap-4\">\n      <button\n        type=\"button\"\n        onClick={handleSelectAll}\n        className=\"bg-green-600 text-white p-3 rounded w-full hover:bg-green-700 transition\"\n      >\n        Select All Cities\n      </button>\n      <input\n        type=\"date\"\n        value={eggRate.date}\n        onChange={(e) => setEggRate({ ...eggRate, date: e.target.value })}\n        className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n        required\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Rate\"\n        value={eggRate.rate}\n        onChange={(e) => setEggRate({ ...eggRate, rate: e.target.value })}\n        className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n        required\n      />\n      <button\n        type=\"submit\"\n        className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n      >\n        Update Rates\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleCopyPreviousRates}\n        className=\"bg-yellow-600 text-white p-3 rounded w-full hover:bg-yellow-700 transition\"\n      >\n        Copy Previous Rates\n      </button>\n    </form>\n  );\n};\n\nexport default RateForm;","import React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { registerables } from 'chart.js';\nimport { Bar, Line } from 'react-chartjs-2';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ...registerables);\n\nconst EggRatesTable = ({ mode = 'default', selectedCity, selectedState, eggRates = [], handleSort, setEggRate, handleDelete, handleEditRate }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({ key: 'city', direction: 'ascending' });\n  \n  const requestSort = (key) => {\n    setSortConfig({\n      key,\n      direction: sortConfig.key === key && sortConfig.direction === 'ascending' ? 'descending' : 'ascending',\n    });\n  };\n  const [editingRate, setEditingRate] = useState(null);\n  const [editedRate, setEditedRate] = useState({});\n  const [specialRates, setSpecialRates] = useState([]);\n  const itemsPerPage = 10;\n\n  useEffect(() => {\n    if (mode === 'special') {\n      fetch('/php/api/rates/get_special_rates.php')\n        .then(response => response.json())\n        .then(data => setSpecialRates(data))\n        .catch(error => console.error('Error fetching special rates:', error));\n    }\n  }, [mode]);\n\n  // Common table pagination logic\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(eggRates.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  const sortedEggRates = [...eggRates].sort((a, b) => {\n    if (!sortConfig.key) return 0;\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? -1 : 1;\n    }\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? 1 : -1;\n    }\n    return 0;\n  });\n\n  const currentItems = mode === 'special' ? specialRates : sortedEggRates.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Chart data preparation for rate view\n  const chartData = {\n    labels: currentItems.map(rate => rate.city || rate.date),\n    datasets: [\n      {\n        label: 'Egg Rates',\n        data: currentItems.map(rate => rate.rate),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n        tension: 0.3,\n        fill: mode === 'rate',\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: mode === 'rate' ? 'Rate Trends' : 'Egg Rates Comparison',\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => `₹${context.raw.toFixed(2)}`\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        ticks: {\n          callback: (value) => `₹${value.toFixed(2)}`\n        }\n      }\n    }\n  };\n\n  // Handle edit functionality for admin mode\n  const handleEditClick = (rate) => {\n    setEditingRate(rate);\n    setEditedRate(rate);\n  };\n\n  const handleSaveClick = () => {\n    handleEditRate(editedRate);\n    setEditingRate(null);\n  };\n\n  const handleChange = (e) => {\n    setEditedRate({\n      ...editedRate,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Render table based on mode\n  const renderTable = () => {\n    switch (mode) {\n      case 'special':\n        return (\n          <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg\">\n            <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Special Rates</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead style={{ backgroundColor: '#f9be0c' }}>\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Market</th>\n                    <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Piece</th>\n                    <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Tray</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {currentItems.length > 0 ? (\n                    currentItems.map((rate, index) => (\n                      <tr\n                        key={index}\n                        className={`transition duration-150 ease-in-out ${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n                      >\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">{rate.city}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">₹{parseFloat(rate.rate).toFixed(2)}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">₹{parseFloat((rate.rate) * 30).toFixed(2)}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan=\"3\" className=\"px-6 py-4 text-center text-sm text-gray-500\">No special rates available</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        );\n\n      case 'rate':\n        return (\n          <div className=\"mt-6\">\n            <div style={{ height: '400px' }}>\n              <Line data={chartData} options={chartOptions} />\n            </div>\n            <div className=\"mt-6 overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rate</th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tray Price</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {currentItems.map((rate, index) => (\n                    <tr key={index}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rate.date}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">₹{rate.rate.toFixed(2)}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">₹{(rate.rate * 30).toFixed(2)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        );\n\n      case 'admin':\n        return (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    <button onClick={() => requestSort('city')}>City</button>\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    <button onClick={() => handleSort('state')}>State</button>\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    <button onClick={() => handleSort('rate')}>Rate</button>\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {currentItems.map((rate, index) => (\n                  <tr key={index}>\n                    {editingRate === rate ? (\n                      <>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"text\"\n                            name=\"city\"\n                            value={editedRate.city}\n                            onChange={handleChange}\n                            className=\"border rounded px-2 py-1\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"text\"\n                            name=\"state\"\n                            value={editedRate.state}\n                            onChange={handleChange}\n                            className=\"border rounded px-2 py-1\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"number\"\n                            name=\"rate\"\n                            value={editedRate.rate}\n                            onChange={handleChange}\n                            className=\"border rounded px-2 py-1\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <button\n                            onClick={handleSaveClick}\n                            className=\"text-green-600 hover:text-green-900 mr-2\"\n                          >\n                            Save\n                          </button>\n                          <button\n                            onClick={() => setEditingRate(null)}\n                            className=\"text-gray-600 hover:text-gray-900\"\n                          >\n                            Cancel\n                          </button>\n                        </td>\n                      </>\n                    ) : (\n                      <>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rate.city}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rate.state}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">₹{rate.rate.toFixed(2)}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                          <button\n                            onClick={() => handleEditClick(rate)}\n                            className=\"text-indigo-600 hover:text-indigo-900 mr-2\"\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={() => handleDelete(rate)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            Delete\n                          </button>\n                        </td>\n                      </>\n                    )}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        );\n\n      default: // default table view\n        return (\n          <div>\n            <div style={{ height: '400px' }}>\n              <Bar data={chartData} options={chartOptions} />\n            </div>\n            <div className=\"mt-6 overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">City</th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">State</th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rate</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {currentItems.map((rate, index) => (\n                    <tr key={index}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rate.city}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rate.state}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">₹{rate.rate.toFixed(2)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      {renderTable()}\n      {mode !== 'special' && currentItems.length > itemsPerPage && (\n        <div className=\"flex justify-center mt-4 space-x-2\">\n          {pages.map((number) => (\n            <button\n              key={number}\n              onClick={() => setCurrentPage(number)}\n              className={`px-3 py-1 rounded ${\n                currentPage === number\n                  ? 'bg-blue-500 text-white'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              {number}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EggRatesTable;","import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst AdminNavbar = ({setIsAuthenticated}) => {\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  return (\n    <nav className=\"bg-gray-800 p-4 shadow-lg\">\n      <div className=\"container mx-auto flex justify-between items-center\">\n        <div>\n          <Link to=\"/admin\" className=\"text-white text-2xl font-bold\">Admin Dashboard</Link>\n        </div>\n        <div className=\"flex space-x-4\">\n          <button \n            onClick={handleLogout} \n            className=\"text-white bg-red-600 hover:bg-red-700 px-4 py-2 rounded transition duration-150 ease-in-out\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default AdminNavbar;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst StateSelect = ({ states, selectedState, handleStateChange }) => (\n  <Select\n    options={states}\n    value={selectedState}\n    onChange={handleStateChange}\n    className=\"w-full mb-4\"\n    placeholder=\"Select State\"\n  />\n);\n\nexport default StateSelect;","import React from 'react';\nimport Select from 'react-select';\n\nconst CitySelect = ({ options, selectedOptions, setSelectedOptions }) => {\n  // Remove duplicate cities from options\n  const uniqueOptions = Array.from(new Set(options.map(option => option.value)))\n    .map(value => options.find(option => option.value === value));\n\n  return (\n    <Select\n      isMulti\n      options={uniqueOptions}\n      value={selectedOptions}\n      onChange={setSelectedOptions}\n      className=\"w-full\"\n      styles={{\n        control: (base) => ({\n          ...base,\n          backgroundColor: 'white',\n          borderColor: 'transparent',\n          boxShadow: 'none',\n          '&:hover': {\n            borderColor: 'transparent',\n          },\n          padding: '0.5rem', // Add padding for better touch target\n          borderRadius: '0.375rem', // Tailwind rounded\n        }),\n        menu: (base) => ({\n          ...base,\n          zIndex: 9999,\n        }),\n        placeholder: (base) => ({\n          ...base,\n          color: '#A0AEC0', // Placeholder color for better contrast\n        }),\n      }}\n      placeholder=\"Select Cities, States\"\n    />\n  );\n};\n\nexport default CitySelect;","import React from 'react';\n\nconst AddStateForm = ({ newState, setNewState, handleAddState }) => (\n  <form onSubmit={handleAddState} className=\"mb-6 grid grid-cols-1 gap-4\">\n    <input\n      type=\"text\"\n      placeholder=\"New State\"\n      value={newState}\n      onChange={(e) => setNewState(e.target.value)}\n      className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n      required\n    />\n    <button\n      type=\"submit\"\n      className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n    >\n      Add State\n    </button>\n  </form>\n);\n\nexport default AddStateForm;","import React from 'react';\nimport Select from 'react-select';\n\nconst AddCityForm = ({\n  states,\n  newCity,\n  setNewCity,\n  newCityState,\n  setNewCityState,\n  handleAddCity,\n}) => (\n  <form onSubmit={handleAddCity} className=\"mb-6 grid grid-cols-1 gap-4\">\n    <Select\n      options={states}\n      value={newCityState}\n      onChange={setNewCityState}\n      className=\"w-full mb-4\"\n      placeholder=\"Select State for New City\"\n    />\n    <input\n      type=\"text\"\n      placeholder=\"New City\"\n      value={newCity}\n      onChange={(e) => setNewCity(e.target.value)}\n      className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n      required\n    />\n    <button\n      type=\"submit\"\n      className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n    >\n      Add City\n    </button>\n  </form>\n);\n\nexport default AddCityForm;","import React, { useState, useEffect, useCallback } from 'react';\nimport Select from 'react-select';\nimport AdminNavbar from '../components/layout/AdminNavbar';\nimport StateSelect from '../components/common/StateSelect';\nimport CitySelect from '../components/common/CitySelect';\nimport RateForm from '../components/admin/RateForm';\nimport AddStateForm from '../components/admin/AddStateForm';\nimport AddCityForm from '../components/admin/AddCityForm';\nimport EggRatesTable from '../components/rates/EggRatesTable';\n\nconst AdminPage = ({ setIsAuthenticated }) => {\n  const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n  const [eggRate, setEggRate] = useState({ date: today, rate: '' });\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [eggRates, setEggRates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortConfig, setSortConfig] = useState({ key: 'city', direction: 'ascending' });\n  const [states, setStates] = useState([]);\n  const [selectedState, setSelectedState] = useState(null);\n  const [newState, setNewState] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newCityState, setNewCityState] = useState(null);\n  const [removeState, setRemoveState] = useState('');\n  const [removeCity, setRemoveCity] = useState(null);\n  const [removeCityState, setRemoveCityState] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(today);\n  \n  // Define fetchEggRates function to get egg rates data\n  const fetchEggRates = useCallback(() => {\n    setLoading(true);\n    fetch(`/php/api/rates/get_all_rates.php?date=${selectedDate}`)\n      .then(res => res.json())\n      .then(data => {\n        setEggRates(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching rates:', error);\n        setError(error);\n        setLoading(false);\n      });\n  }, [selectedDate]);\n  \n  // Define fetchCitiesAndStates function to get location data\n  const fetchCitiesAndStates = useCallback(() => {\n    fetch('/php/api/location/get_states_and_cities.php')\n      .then(res => res.json())\n      .then(data => {\n        const combinedOptions = [];\n        const stateOptions = [];\n        for (const state in data) {\n          stateOptions.push({ value: state, label: state });\n          combinedOptions.push({\n            value: state,\n            label: state,\n            type: 'state',\n          });\n          data[state].forEach(city => {\n            combinedOptions.push({\n              value: `${city}-${state}`, // Ensure unique value\n              label: `${city}, ${state}`,\n              type: 'city',\n            });\n          });\n        }\n        setOptions(combinedOptions);\n        setStates(stateOptions);\n      })\n      .catch(error => console.error('Error fetching states and cities:', error));\n  }, []);\n\n  // Use fetchEggRates in useEffect instead of duplicate code\n  useEffect(() => {\n    fetchEggRates();\n  }, [fetchEggRates]);\n\n  // Use fetchCitiesAndStates in useEffect\n  useEffect(() => {\n    fetchCitiesAndStates();\n  }, [fetchCitiesAndStates]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const payload = selectedOptions.map(option => {\n      const [cityName, state] = option.type === 'city' ? option.label.split(', ') : [null, option.value];\n      return {\n        city: cityName,\n        state: state || '', // Ensure state is not null\n        date: eggRate.date,\n        rate: eggRate.rate,\n        type: option.type,\n      };\n    });\n\n    fetch('/php/api/rates/update_multiple_rates.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload),\n    })\n      .then(res => res.json())\n      .then(response => {\n        fetchEggRates(); // Refresh the list of egg rates\n        resetForm(); // Reset form\n      })\n      .catch(error => console.error(\"Error submitting data:\", error));\n  };\n\n  const handleDelete = (rate) => {\n    fetch('/php/api/rates/delete_rate.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: rate.id }), // Send ID for deletion\n    })\n      .then(res => res.json())\n      .then(response => {\n        fetchEggRates(); // Refresh the list of egg rates\n      })\n      .catch(error => console.error(\"Error deleting item:\", error));\n  };\n\n  const handleSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedEggRates = React.useMemo(() => {\n    let sortableRates = [...eggRates];\n    sortableRates.sort((a, b) => {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? -1 : 1;\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n    return sortableRates;\n  }, [eggRates, sortConfig]);\n\n  const handleStateChange = (selectedState) => {\n    setSelectedState(selectedState);\n    setSelectedOptions([]); // Reset selected options\n    const stateOptions = options.filter(option => option.type === 'city' && option.label.includes(selectedState.value));\n    setSelectedOptions(stateOptions);\n  };\n\n  const handleSelectAll = () => {\n    const allCities = options.filter(option => option.type === 'city');\n    setSelectedOptions(allCities);\n  };\n\n  const handleCopyPreviousRates = () => {\n    if (selectedOptions.length === 0) {\n      alert('Please select at least one city.');\n      return;\n    }\n  \n    const fetchLatestRates = async (cities) => {\n      console.log('Fetching latest rates for cities:', cities);\n      const response = await fetch('/php/api/rates/get_latest_rates.php', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(cities),\n      });\n      const data = await response.json();\n      console.log('Fetched latest rates:', data);\n      return data;\n    };\n  \n    const updateRates = async () => {\n      const cities = selectedOptions\n        .filter(option => option.type === 'city') // Ensure only cities are selected\n        .map(option => {\n          const [cityName, state] = option.label.split(', ');\n          return { city: cityName, state: state };\n        });\n  \n      console.log('Selected cities for updating rates:', cities);\n  \n      const latestRates = await fetchLatestRates(cities);\n  \n      const payload = latestRates.map(rate => ({\n        city: rate.city,\n        state: rate.state,\n        date: eggRate.date,\n        rate: rate.rate || eggRate.rate,\n        type: 'city',\n      }));\n  \n      console.log('Payload for updating rates:', payload);\n  \n      fetch('/php/api/rates/update_multiple_rates.php', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n      })\n        .then(res => res.json())\n        .then(response => {\n          console.log('Response from updating rates:', response);\n          fetchEggRates(); // Refresh the list of egg rates\n          resetForm(); // Reset form\n        })\n        .catch(error => console.error(\"Error submitting data:\", error));\n    };\n  \n    updateRates();\n  };\n\n  const handleAddState = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/add_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'state', name: newState }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setNewState(''); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error adding state:\", error));\n  };\n\n  const handleAddCity = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/add_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'city', name: newCity, state: newCityState.value }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setNewCity(''); // Reset form\n          setNewCityState(null); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error adding city:\", error));\n  };\n\n  const handleRemoveState = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/remove_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'state', name: removeState }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setRemoveState(''); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error removing state:\", error));\n  };\n\n  const handleRemoveCity = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/remove_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'city', name: removeCity.label.split(', ')[0], state: removeCityState.value }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setRemoveCity(null); // Reset form\n          setRemoveCityState(null); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error removing city:\", error));\n  };\n\n  const handleEditRate = (rate) => {\n    const updatedRates = eggRates.map(r => r.id === rate.id ? rate : r);\n    setEggRates(updatedRates);\n  \n    // Send the updated rate to the backend\n    fetch('/php/api/rates/update_rate.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(rate),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchEggRates(); // Refresh the list of egg rates\n        } else {\n          console.error(\"Error updating rate:\", response.error);\n        }\n      })\n      .catch(error => console.error(\"Error updating rate:\", error));\n  };\n\n  const resetForm = () => {\n    setEggRate({ date: today, rate: '' });\n    setSelectedOptions([]);\n    setSelectedState(null);\n    setRemoveState('');\n    setRemoveCity(null);\n    setRemoveCityState(null);\n    setNewState('');\n    setNewCity('');\n    setNewCityState(null);\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error loading data: {error.message}</div>;\n\n  return (\n    <>\n      <AdminNavbar setIsAuthenticated={setIsAuthenticated} />\n      <div className=\"p-6 bg-gray-100 min-h-screen\">\n        <div className=\"max-w-4xl mx-auto bg-white p-8 rounded-lg shadow-md\">\n          <h1 className=\"text-3xl font-bold mb-6 text-center text-blue-600\">Admin Egg Rate Management</h1>\n          <div className=\"mb-6\">\n            <StateSelect\n              states={states}\n              selectedState={selectedState}\n              handleStateChange={handleStateChange}\n            />\n            <CitySelect\n              options={options}\n              selectedOptions={selectedOptions}\n              setSelectedOptions={setSelectedOptions}\n            />\n            <RateForm\n              eggRate={eggRate}\n              setEggRate={setEggRate}\n              handleSubmit={handleSubmit}\n              handleSelectAll={handleSelectAll}\n              handleCopyPreviousRates={handleCopyPreviousRates}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Add New State</h2>\n            <AddStateForm\n              newState={newState}\n              setNewState={setNewState}\n              handleAddState={handleAddState}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Add New City</h2>\n            <AddCityForm\n              states={states}\n              newCity={newCity}\n              setNewCity={setNewCity}\n              newCityState={newCityState}\n              setNewCityState={setNewCityState}\n              handleAddCity={handleAddCity}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Remove State</h2>\n            <form onSubmit={handleRemoveState} className=\"mb-6 grid grid-cols-1 gap-4\">\n              <Select\n                options={states}\n                value={states.find(state => state.value === removeState)}\n                onChange={(selectedOption) => setRemoveState(selectedOption.value)}\n                className=\"w-full mb-4\"\n                placeholder=\"Select State to Remove\"\n              />\n              <button type=\"submit\" className=\"bg-red-600 text-white p-3 rounded w-full hover:bg-red-700 transition\">\n                Remove State\n              </button>\n            </form>\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Remove City</h2>\n            <form onSubmit={handleRemoveCity} className=\"mb-6 grid grid-cols-1 gap-4\">\n              <Select\n                options={states}\n                value={states.find(state => state.value === removeCityState?.value)}\n                onChange={setRemoveCityState}\n                className=\"w-full mb-4\"\n                placeholder=\"Select State for City to Remove\"\n              />\n              <Select\n                options={options.filter(option => option.type === 'city' && option.label.includes(removeCityState?.value))}\n                value={removeCity}\n                onChange={setRemoveCity}\n                className=\"w-full mb-4\"\n                placeholder=\"Select City to Remove\"\n              />\n              <button type=\"submit\" className=\"bg-red-600 text-white p-3 rounded w-full hover:bg-red-700 transition\">\n                Remove City\n              </button>\n            </form>\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Current Egg Rates</h2>\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"date\">\n              Select Date\n            </label>\n            <input\n              type=\"date\"\n              id=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n            />\n          </div>\n          <EggRatesTable\n            sortedEggRates={sortedEggRates}\n            handleSort={handleSort}\n            setEggRate={setEggRate}\n            handleDelete={handleDelete}\n            handleEditRate={handleEditRate}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdminPage;"],"names":["_ref","eggRate","setEggRate","handleSubmit","handleSelectAll","handleCopyPreviousRates","_jsxs","onSubmit","className","children","_jsx","type","onClick","value","date","onChange","e","_objectSpread","target","required","placeholder","rate","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","registerables","mode","selectedCity","selectedState","eggRates","handleSort","handleDelete","handleEditRate","currentPage","setCurrentPage","useState","sortConfig","setSortConfig","key","direction","editingRate","setEditingRate","editedRate","setEditedRate","specialRates","setSpecialRates","useEffect","fetch","then","response","json","data","catch","error","console","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","sortedEggRates","sort","a","b","currentItems","slice","chartData","labels","map","city","datasets","label","backgroundColor","borderColor","borderWidth","tension","fill","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","tooltip","callbacks","context","concat","raw","toFixed","scales","y","beginAtZero","ticks","callback","handleSaveClick","handleChange","name","renderTable","style","index","parseFloat","colSpan","height","Line","options","_Fragment","state","handleEditClick","Bar","number","setIsAuthenticated","navigate","useNavigate","Link","to","handleLogout","states","handleStateChange","Select","selectedOptions","setSelectedOptions","uniqueOptions","Array","from","Set","option","find","isMulti","styles","control","base","boxShadow","padding","borderRadius","menu","zIndex","color","newState","setNewState","handleAddState","newCity","setNewCity","newCityState","setNewCityState","handleAddCity","today","Date","toISOString","split","setOptions","setEggRates","loading","setLoading","setError","setStates","setSelectedState","removeState","setRemoveState","removeCity","setRemoveCity","removeCityState","setRemoveCityState","selectedDate","setSelectedDate","fetchEggRates","useCallback","res","fetchCitiesAndStates","combinedOptions","stateOptions","forEach","React","sortableRates","resetForm","message","AdminNavbar","StateSelect","filter","includes","CitySelect","RateForm","preventDefault","payload","cityName","method","headers","body","JSON","stringify","allCities","alert","async","cities","log","latestRates","fetchLatestRates","updateRates","AddStateForm","success","AddCityForm","selectedOption","htmlFor","id","EggRatesTable","updatedRates","r"],"sourceRoot":""}