{"version":3,"file":"static/js/529.84bd5fb1.chunk.js","mappings":"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","sources":["components/layout/AdminNavbar.js","components/common/StateSelect.js","components/common/CitySelect.js","components/admin/RateForm.js","components/admin/AddStateForm.js","components/admin/AddCityForm.js","components/rates/EggRatesTable.js","pages/AdminPage.js"],"sourcesContent":["import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst AdminNavbar = ({setIsAuthenticated}) => {\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  return (\n    <nav className=\"bg-gray-800 p-4 shadow-lg\">\n      <div className=\"container mx-auto flex justify-between items-center\">\n        <div>\n          <Link to=\"/admin\" className=\"text-white text-2xl font-bold\">Admin Dashboard</Link>\n        </div>\n        <div className=\"flex space-x-4\">\n          <button \n            onClick={handleLogout} \n            className=\"text-white bg-red-600 hover:bg-red-700 px-4 py-2 rounded transition duration-150 ease-in-out\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default AdminNavbar;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst StateSelect = ({ states, selectedState, handleStateChange }) => (\n  <Select\n    options={states}\n    value={selectedState}\n    onChange={handleStateChange}\n    className=\"w-full mb-4\"\n    placeholder=\"Select State\"\n  />\n);\n\nexport default StateSelect;","import React from 'react';\nimport Select from 'react-select';\n\nconst CitySelect = ({ options, selectedOptions, setSelectedOptions }) => {\n  // Remove duplicate cities from options\n  const uniqueOptions = Array.from(new Set(options.map(option => option.value)))\n    .map(value => options.find(option => option.value === value));\n\n  return (\n    <Select\n      isMulti\n      options={uniqueOptions}\n      value={selectedOptions}\n      onChange={setSelectedOptions}\n      className=\"w-full\"\n      styles={{\n        control: (base) => ({\n          ...base,\n          backgroundColor: 'white',\n          borderColor: 'transparent',\n          boxShadow: 'none',\n          '&:hover': {\n            borderColor: 'transparent',\n          },\n          padding: '0.5rem', // Add padding for better touch target\n          borderRadius: '0.375rem', // Tailwind rounded\n        }),\n        menu: (base) => ({\n          ...base,\n          zIndex: 9999,\n        }),\n        placeholder: (base) => ({\n          ...base,\n          color: '#A0AEC0', // Placeholder color for better contrast\n        }),\n      }}\n      placeholder=\"Select Cities, States\"\n    />\n  );\n};\n\nexport default CitySelect;","import React from 'react';\n\nconst RateForm = ({\n  eggRate,\n  setEggRate,\n  handleSubmit,\n  handleSelectAll,\n  handleCopyPreviousRates,\n}) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-6 grid grid-cols-1 gap-4\">\n      <button\n        type=\"button\"\n        onClick={handleSelectAll}\n        className=\"bg-green-600 text-white p-3 rounded w-full hover:bg-green-700 transition\"\n      >\n        Select All Cities\n      </button>\n      <input\n        type=\"date\"\n        value={eggRate.date}\n        onChange={(e) => setEggRate({ ...eggRate, date: e.target.value })}\n        className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n        required\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Rate\"\n        value={eggRate.rate}\n        onChange={(e) => setEggRate({ ...eggRate, rate: e.target.value })}\n        className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n        required\n      />\n      <button\n        type=\"submit\"\n        className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n      >\n        Update Rates\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleCopyPreviousRates}\n        className=\"bg-yellow-600 text-white p-3 rounded w-full hover:bg-yellow-700 transition\"\n      >\n        Copy Previous Rates\n      </button>\n    </form>\n  );\n};\n\nexport default RateForm;","import React from 'react';\n\nconst AddStateForm = ({ newState, setNewState, handleAddState }) => (\n  <form onSubmit={handleAddState} className=\"mb-6 grid grid-cols-1 gap-4\">\n    <input\n      type=\"text\"\n      placeholder=\"New State\"\n      value={newState}\n      onChange={(e) => setNewState(e.target.value)}\n      className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n      required\n    />\n    <button\n      type=\"submit\"\n      className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n    >\n      Add State\n    </button>\n  </form>\n);\n\nexport default AddStateForm;","import React from 'react';\nimport Select from 'react-select';\n\nconst AddCityForm = ({\n  states,\n  newCity,\n  setNewCity,\n  newCityState,\n  setNewCityState,\n  handleAddCity,\n}) => (\n  <form onSubmit={handleAddCity} className=\"mb-6 grid grid-cols-1 gap-4\">\n    <Select\n      options={states}\n      value={newCityState}\n      onChange={setNewCityState}\n      className=\"w-full mb-4\"\n      placeholder=\"Select State for New City\"\n    />\n    <input\n      type=\"text\"\n      placeholder=\"New City\"\n      value={newCity}\n      onChange={(e) => setNewCity(e.target.value)}\n      className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n      required\n    />\n    <button\n      type=\"submit\"\n      className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n    >\n      Add City\n    </button>\n  </form>\n);\n\nexport default AddCityForm;","import React, { useState } from 'react';\n\nconst EggRatesTable = ({ sortedEggRates, handleSort, setEggRate, handleDelete, handleEditRate }) => {\n  const [editingRate, setEditingRate] = useState(null);\n  const [editedRate, setEditedRate] = useState({});\n\n  const handleEditClick = (rate) => {\n    setEditingRate(rate.id);\n    setEditedRate(rate);\n  };\n\n  const handleSaveClick = () => {\n    handleEditRate(editedRate);\n    setEditingRate(null);\n  };\n\n  const handleCancelClick = () => {\n    setEditingRate(null);\n    setEditedRate({});\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setEditedRate((prevRate) => ({\n      ...prevRate,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full bg-white border border-gray-300\">\n        <thead>\n          <tr className=\"bg-gray-200\">\n            <th\n              className=\"border border-gray-300 p-3 text-left cursor-pointer\"\n              onClick={() => handleSort('city')}\n            >\n              City\n            </th>\n            <th\n              className=\"border border-gray-300 p-3 text-left cursor-pointer\"\n              onClick={() => handleSort('state')}\n            >\n              State\n            </th>\n            <th\n              className=\"border border-gray-300 p-3 text-left cursor-pointer\"\n              onClick={() => handleSort('date')}\n            >\n              Date\n            </th>\n            <th\n              className=\"border border-gray-300 p-3 text-left cursor-pointer\"\n              onClick={() => handleSort('rate')}\n            >\n              Rate\n            </th>\n            <th className=\"border border-gray-300 p-3 text-left\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedEggRates.map((rate) => (\n            <tr key={`${rate.city}-${rate.state}-${rate.date}`} className=\"hover:bg-gray-100\">\n              <td className=\"border border-gray-300 p-3\">{rate.city}</td>\n              <td className=\"border border-gray-300 p-3\">{rate.state}</td>\n              <td className=\"border border-gray-300 p-3\">\n                {editingRate === rate.id ? (\n                  <input\n                    type=\"date\"\n                    name=\"date\"\n                    value={editedRate.date}\n                    onChange={handleChange}\n                    className=\"border border-gray-300 p-2 rounded w-full\"\n                  />\n                ) : (\n                  rate.date\n                )}\n              </td>\n              <td className=\"border border-gray-300 p-3\">\n                {editingRate === rate.id ? (\n                  <input\n                    type=\"number\"\n                    name=\"rate\"\n                    value={editedRate.rate}\n                    onChange={handleChange}\n                    className=\"border border-gray-300 p-2 rounded w-full\"\n                  />\n                ) : (\n                  `$${rate.rate}`\n                )}\n              </td>\n              <td className=\"border border-gray-300 p-3 flex space-x-2\">\n                {editingRate === rate.id ? (\n                  <>\n                    <button\n                      onClick={handleSaveClick}\n                      className=\"bg-green-500 text-white p-2 rounded hover:bg-green-600 transition\"\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={handleCancelClick}\n                      className=\"bg-gray-500 text-white p-2 rounded hover:bg-gray-600 transition\"\n                    >\n                      Cancel\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <button\n                      onClick={() => handleEditClick(rate)}\n                      className=\"bg-yellow-500 text-white p-2 rounded hover:bg-yellow-600 transition\"\n                    >\n                      Edit\n                    </button>\n                    <button\n                      onClick={() => handleDelete(rate)}\n                      className=\"bg-red-500 text-white p-2 rounded hover:bg-red-600 transition\"\n                    >\n                      Delete\n                    </button>\n                  </>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default EggRatesTable;","import React, { useState, useEffect, useCallback } from 'react';\nimport Select from 'react-select';\nimport AdminNavbar from '../components/layout/AdminNavbar';\nimport StateSelect from '../components/common/StateSelect';\nimport CitySelect from '../components/common/CitySelect';\nimport RateForm from '../components/admin/RateForm';\nimport AddStateForm from '../components/admin/AddStateForm';\nimport AddCityForm from '../components/admin/AddCityForm';\nimport EggRatesTable from '../components/rates/EggRatesTable';\n\nconst AdminPage = ({ setIsAuthenticated }) => {\n  const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n  const [eggRate, setEggRate] = useState({ date: today, rate: '' });\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [eggRates, setEggRates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortConfig, setSortConfig] = useState({ key: 'city', direction: 'ascending' });\n  const [states, setStates] = useState([]);\n  const [selectedState, setSelectedState] = useState(null);\n  const [newState, setNewState] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newCityState, setNewCityState] = useState(null);\n  const [removeState, setRemoveState] = useState('');\n  const [removeCity, setRemoveCity] = useState(null);\n  const [removeCityState, setRemoveCityState] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(today);\n  \n  // Define fetchEggRates function to get egg rates data\n  const fetchEggRates = useCallback(() => {\n    setLoading(true);\n    fetch(`/php/api/rates/get_all_rates.php?date=${selectedDate}`)\n      .then(res => res.json())\n      .then(data => {\n        setEggRates(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching rates:', error);\n        setError(error);\n        setLoading(false);\n      });\n  }, [selectedDate]);\n  \n  // Define fetchCitiesAndStates function to get location data\n  const fetchCitiesAndStates = useCallback(() => {\n    fetch('/php/api/location/get_states_and_cities.php')\n      .then(res => res.json())\n      .then(data => {\n        const combinedOptions = [];\n        const stateOptions = [];\n        for (const state in data) {\n          stateOptions.push({ value: state, label: state });\n          combinedOptions.push({\n            value: state,\n            label: state,\n            type: 'state',\n          });\n          data[state].forEach(city => {\n            combinedOptions.push({\n              value: `${city}-${state}`, // Ensure unique value\n              label: `${city}, ${state}`,\n              type: 'city',\n            });\n          });\n        }\n        setOptions(combinedOptions);\n        setStates(stateOptions);\n      })\n      .catch(error => console.error('Error fetching states and cities:', error));\n  }, []);\n\n  // Use fetchEggRates in useEffect instead of duplicate code\n  useEffect(() => {\n    fetchEggRates();\n  }, [fetchEggRates]);\n\n  // Use fetchCitiesAndStates in useEffect\n  useEffect(() => {\n    fetchCitiesAndStates();\n  }, [fetchCitiesAndStates]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const payload = selectedOptions.map(option => {\n      const [cityName, state] = option.type === 'city' ? option.label.split(', ') : [null, option.value];\n      return {\n        city: cityName,\n        state: state || '', // Ensure state is not null\n        date: eggRate.date,\n        rate: eggRate.rate,\n        type: option.type,\n      };\n    });\n\n    fetch('/php/api/rates/update_multiple_rates.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload),\n    })\n      .then(res => res.json())\n      .then(response => {\n        fetchEggRates(); // Refresh the list of egg rates\n        resetForm(); // Reset form\n      })\n      .catch(error => console.error(\"Error submitting data:\", error));\n  };\n\n  const handleDelete = (rate) => {\n    fetch('/php/api/rates/delete_rate.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: rate.id }), // Send ID for deletion\n    })\n      .then(res => res.json())\n      .then(response => {\n        fetchEggRates(); // Refresh the list of egg rates\n      })\n      .catch(error => console.error(\"Error deleting item:\", error));\n  };\n\n  const handleSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedEggRates = React.useMemo(() => {\n    let sortableRates = [...eggRates];\n    sortableRates.sort((a, b) => {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? -1 : 1;\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n    return sortableRates;\n  }, [eggRates, sortConfig]);\n\n  const handleStateChange = (selectedState) => {\n    setSelectedState(selectedState);\n    setSelectedOptions([]); // Reset selected options\n    const stateOptions = options.filter(option => option.type === 'city' && option.label.includes(selectedState.value));\n    setSelectedOptions(stateOptions);\n  };\n\n  const handleSelectAll = () => {\n    const allCities = options.filter(option => option.type === 'city');\n    setSelectedOptions(allCities);\n  };\n\n  const handleCopyPreviousRates = () => {\n    if (selectedOptions.length === 0) {\n      alert('Please select at least one city.');\n      return;\n    }\n  \n    const fetchLatestRates = async (cities) => {\n      console.log('Fetching latest rates for cities:', cities);\n      const response = await fetch('/php/api/rates/get_latest_rates.php', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(cities),\n      });\n      const data = await response.json();\n      console.log('Fetched latest rates:', data);\n      return data;\n    };\n  \n    const updateRates = async () => {\n      const cities = selectedOptions\n        .filter(option => option.type === 'city') // Ensure only cities are selected\n        .map(option => {\n          const [cityName, state] = option.label.split(', ');\n          return { city: cityName, state: state };\n        });\n  \n      console.log('Selected cities for updating rates:', cities);\n  \n      const latestRates = await fetchLatestRates(cities);\n  \n      const payload = latestRates.map(rate => ({\n        city: rate.city,\n        state: rate.state,\n        date: eggRate.date,\n        rate: rate.rate || eggRate.rate,\n        type: 'city',\n      }));\n  \n      console.log('Payload for updating rates:', payload);\n  \n      fetch('/php/api/rates/update_multiple_rates.php', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n      })\n        .then(res => res.json())\n        .then(response => {\n          console.log('Response from updating rates:', response);\n          fetchEggRates(); // Refresh the list of egg rates\n          resetForm(); // Reset form\n        })\n        .catch(error => console.error(\"Error submitting data:\", error));\n    };\n  \n    updateRates();\n  };\n\n  const handleAddState = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/add_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'state', name: newState }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setNewState(''); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error adding state:\", error));\n  };\n\n  const handleAddCity = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/add_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'city', name: newCity, state: newCityState.value }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setNewCity(''); // Reset form\n          setNewCityState(null); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error adding city:\", error));\n  };\n\n  const handleRemoveState = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/remove_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'state', name: removeState }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setRemoveState(''); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error removing state:\", error));\n  };\n\n  const handleRemoveCity = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/remove_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'city', name: removeCity.label.split(', ')[0], state: removeCityState.value }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setRemoveCity(null); // Reset form\n          setRemoveCityState(null); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error removing city:\", error));\n  };\n\n  const handleEditRate = (rate) => {\n    const updatedRates = eggRates.map(r => r.id === rate.id ? rate : r);\n    setEggRates(updatedRates);\n  \n    // Send the updated rate to the backend\n    fetch('/php/api/rates/update_rate.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(rate),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchEggRates(); // Refresh the list of egg rates\n        } else {\n          console.error(\"Error updating rate:\", response.error);\n        }\n      })\n      .catch(error => console.error(\"Error updating rate:\", error));\n  };\n\n  const resetForm = () => {\n    setEggRate({ date: today, rate: '' });\n    setSelectedOptions([]);\n    setSelectedState(null);\n    setRemoveState('');\n    setRemoveCity(null);\n    setRemoveCityState(null);\n    setNewState('');\n    setNewCity('');\n    setNewCityState(null);\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error loading data: {error.message}</div>;\n\n  return (\n    <>\n      <AdminNavbar setIsAuthenticated={setIsAuthenticated} />\n      <div className=\"p-6 bg-gray-100 min-h-screen\">\n        <div className=\"max-w-4xl mx-auto bg-white p-8 rounded-lg shadow-md\">\n          <h1 className=\"text-3xl font-bold mb-6 text-center text-blue-600\">Admin Egg Rate Management</h1>\n          <div className=\"mb-6\">\n            <StateSelect\n              states={states}\n              selectedState={selectedState}\n              handleStateChange={handleStateChange}\n            />\n            <CitySelect\n              options={options}\n              selectedOptions={selectedOptions}\n              setSelectedOptions={setSelectedOptions}\n            />\n            <RateForm\n              eggRate={eggRate}\n              setEggRate={setEggRate}\n              handleSubmit={handleSubmit}\n              handleSelectAll={handleSelectAll}\n              handleCopyPreviousRates={handleCopyPreviousRates}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Add New State</h2>\n            <AddStateForm\n              newState={newState}\n              setNewState={setNewState}\n              handleAddState={handleAddState}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Add New City</h2>\n            <AddCityForm\n              states={states}\n              newCity={newCity}\n              setNewCity={setNewCity}\n              newCityState={newCityState}\n              setNewCityState={setNewCityState}\n              handleAddCity={handleAddCity}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Remove State</h2>\n            <form onSubmit={handleRemoveState} className=\"mb-6 grid grid-cols-1 gap-4\">\n              <Select\n                options={states}\n                value={states.find(state => state.value === removeState)}\n                onChange={(selectedOption) => setRemoveState(selectedOption.value)}\n                className=\"w-full mb-4\"\n                placeholder=\"Select State to Remove\"\n              />\n              <button type=\"submit\" className=\"bg-red-600 text-white p-3 rounded w-full hover:bg-red-700 transition\">\n                Remove State\n              </button>\n            </form>\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Remove City</h2>\n            <form onSubmit={handleRemoveCity} className=\"mb-6 grid grid-cols-1 gap-4\">\n              <Select\n                options={states}\n                value={states.find(state => state.value === removeCityState?.value)}\n                onChange={setRemoveCityState}\n                className=\"w-full mb-4\"\n                placeholder=\"Select State for City to Remove\"\n              />\n              <Select\n                options={options.filter(option => option.type === 'city' && option.label.includes(removeCityState?.value))}\n                value={removeCity}\n                onChange={setRemoveCity}\n                className=\"w-full mb-4\"\n                placeholder=\"Select City to Remove\"\n              />\n              <button type=\"submit\" className=\"bg-red-600 text-white p-3 rounded w-full hover:bg-red-700 transition\">\n                Remove City\n              </button>\n            </form>\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Current Egg Rates</h2>\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"date\">\n              Select Date\n            </label>\n            <input\n              type=\"date\"\n              id=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n            />\n          </div>\n          <EggRatesTable\n            sortedEggRates={sortedEggRates}\n            handleSort={handleSort}\n            setEggRate={setEggRate}\n            handleDelete={handleDelete}\n            handleEditRate={handleEditRate}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdminPage;"],"names":["_ref","setIsAuthenticated","navigate","useNavigate","_jsx","className","_div","Link","to","onClick","handleLogout","states","selectedState","handleStateChange","Select","options","value","onChange","placeholder","selectedOptions","setSelectedOptions","uniqueOptions","Array","from","Set","map","option","find","isMulti","styles","control","base","_objectSpread","backgroundColor","borderColor","boxShadow","padding","borderRadius","menu","zIndex","color","eggRate","setEggRate","handleSubmit","handleSelectAll","handleCopyPreviousRates","onSubmit","type","date","e","target","required","rate","_button","newState","setNewState","handleAddState","newCity","setNewCity","newCityState","setNewCityState","handleAddCity","_Fragment","sortedEggRates","handleSort","handleDelete","handleEditRate","editingRate","setEditingRate","useState","editedRate","setEditedRate","handleSaveClick","handleCancelClick","handleChange","name","prevRate","_th","concat","city","state","id","_jsxs","_Fragment2","children","handleEditClick","today","Date","toISOString","split","setOptions","eggRates","setEggRates","loading","setLoading","error","setError","sortConfig","setSortConfig","key","direction","setStates","setSelectedState","removeState","setRemoveState","removeCity","setRemoveCity","removeCityState","setRemoveCityState","selectedDate","setSelectedDate","fetchEggRates","useCallback","fetch","then","res","json","data","catch","console","fetchCitiesAndStates","combinedOptions","stateOptions","push","label","forEach","useEffect","React","sortableRates","sort","a","b","resetForm","message","AdminNavbar","_h","StateSelect","filter","includes","CitySelect","RateForm","preventDefault","payload","cityName","method","headers","body","JSON","stringify","response","allCities","length","alert","async","cities","log","latestRates","fetchLatestRates","updateRates","_h2","AddStateForm","success","_h3","AddCityForm","_h4","selectedOption","_h5","_button2","_h6","_label","htmlFor","EggRatesTable","updatedRates","r"],"sourceRoot":""}