{"version":3,"file":"static/js/main-page.02120afc.chunk.js","mappings":"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","sources":["components/blog/BlogList.js","components/common/OptimizedImage.js","components/layout/Breadcrumb.js","components/layout/Footer.js","components/layout/Navbar.js","components/rates/DefaultTable.js","components/rates/RateChart.js","components/rates/RateTable.js","components/rates/StateList.js","components/rates/BodyOne.js","components/rates/BodyTwo.js","components/rates/BodyThree.js","components/rates/StatePage.js","components/rates/SpecialRatesTable.js","components/common/FAQ.js","pages/MainPage.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nconst BlogList = ({ blogs, selectedCity, selectedState }) => {\n  // Sort blogs by upload date (newest first)\n  const sortedBlogs = [...blogs].sort((a, b) => \n    new Date(b.uploadDate) - new Date(a.uploadDate)\n  );\n\n  // Create keyword-rich heading based on the current page context\n  const getContextHeading = () => {\n    if (selectedCity) {\n      return `Egg Rate Articles & Insights for ${selectedCity}`;\n    } else if (selectedState) {\n      return `Egg Market Articles & Updates for ${selectedState}`;\n    } else {\n      return 'Latest Egg Rate Articles & Market Insights';\n    }\n  };\n\n  return (\n    <div className=\"mt-10 bg-white shadow-lg rounded-lg p-6\">\n      {/* Add schema.org structured data for blog listings */}\n      <Helmet>\n        <script type=\"application/ld+json\">{`\n          {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"ItemList\",\n            \"itemListElement\": [\n              ${sortedBlogs.map((blog, index) => `\n              {\n                \"@type\": \"ListItem\",\n                \"position\": ${index + 1},\n                \"url\": \"https://todayeggrates.com/blog/${blog.link}\",\n                \"name\": \"${blog.title}\"\n              }\n              `).join(',')}\n            ]\n          }\n        `}</script>\n      </Helmet>\n      \n      <h2 className=\"text-2xl font-bold mb-6 text-gray-800 text-center\">\n        {getContextHeading()}\n      </h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {sortedBlogs.map((blog, index) => (\n          <div key={index} className=\"bg-gray-50 rounded-lg overflow-hidden shadow transition-transform hover:scale-105\">\n            <Link to={`/blog/${blog.link}`} className=\"block\">\n              <img \n                src={blog.image} \n                alt={blog.title} \n                className=\"w-full h-48 object-cover\"                loading={index < 3 ? \"eager\" : \"lazy\"}\n                width={400}\n                height={300}\n              />\n              <div className=\"p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">{blog.title}</h3>\n                <p className=\"text-gray-600 text-sm mb-3\">{blog.description}</p>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-blue-600 font-medium text-sm\">Read more</span>\n                  <time dateTime={blog.uploadDate} className=\"text-gray-500 text-sm\">\n                    {new Date(blog.uploadDate).toLocaleDateString('en-US', {\n                      year: 'numeric',\n                      month: 'short',\n                      day: 'numeric'\n                    })}\n                  </time>\n                </div>\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n      \n      {/* Add contextual internal linking section */}\n      {(selectedCity || selectedState) && (\n        <div className=\"mt-8 p-4 bg-blue-50 rounded-lg\">\n          <h3 className=\"text-lg font-semibold text-blue-800 mb-2\">Related Egg Rate Resources</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <h4 className=\"font-medium text-blue-700 mb-1\">Popular Cities</h4>\n              <ul className=\"list-disc pl-5 text-blue-600\">\n                <li><Link to=\"/mumbai-egg-rate\" className=\"hover:underline\">Mumbai Egg Rate</Link></li>\n                <li><Link to=\"/delhi-egg-rate\" className=\"hover:underline\">Delhi Egg Rate</Link></li>\n                <li><Link to=\"/hyderabad-egg-rate\" className=\"hover:underline\">Hyderabad Egg Rate</Link></li>\n                <li><Link to=\"/barwala-egg-rate\" className=\"hover:underline\">Barwala Egg Rate</Link></li>\n                <li><Link to=\"/bengaluru-egg-rate\" className=\"hover:underline\">Bengaluru Egg Rate</Link></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-blue-700 mb-1\">Market Resources</h4>\n              <ul className=\"list-disc pl-5 text-blue-600\">\n                <li><Link to=\"/webstories\" className=\"hover:underline\">Egg Rate Web Stories</Link></li>\n                <li><Link to=\"/blog/egg-rate-barwala\" className=\"hover:underline\">Barwala Market Analysis</Link></li>\n                <li><Link to=\"/blog/blog-1\" className=\"hover:underline\">Understanding Today's Egg Rates</Link></li>\n                <li><Link to=\"/blog/blog-2\" className=\"hover:underline\">Egg Rate Trends in India</Link></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlogList;","import React, { useState, useEffect, useRef } from 'react';\n\nconst OptimizedImage = ({ src, alt, className = '', width, height }) => {\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const imgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ \n    width: width || 0, \n    height: height || 0 \n  });\n\n  // Early load image dimensions if not provided\n  useEffect(() => {\n    if (!width || !height) {\n      const img = new Image();\n      img.src = src;\n      \n      // Use native browser lazy loading hint\n      if ('loading' in HTMLImageElement.prototype) {\n        img.loading = 'lazy';\n      }\n      \n      img.onload = () => {\n        setDimensions({ \n          width: img.naturalWidth, \n          height: img.naturalHeight \n        });\n        setImageLoaded(true);\n        setLoaded(true);\n      };\n      \n      img.onerror = () => {\n        setError(true);\n      };\n    } else {\n      setDimensions({ width, height });\n      setImageLoaded(true);\n    }\n  }, [src, width, height]);\n\n  // Extract Tailwind dimensions\n  const hasTailwindDimensions = /w-\\d+|h-\\d+/.test(className);\n  const aspectRatio = imageLoaded ? (dimensions.height / dimensions.width) * 100 : 56.25;\n\n  // Calculate sizes attribute based on responsive classes\n  const getSizes = () => {\n    if (className.includes('w-full')) return '100vw';\n    if (className.match(/w-(\\d+)\\/(\\d+)/)) {\n      const [, num, den] = className.match(/w-(\\d+)\\/(\\d+)/);\n      return `${(num / den) * 100}vw`;\n    }\n    return '100vw';\n  };\n\n  return (\n    <div \n      className={`relative overflow-hidden ${hasTailwindDimensions ? '' : 'w-full'}`}\n      style={{ \n        width: width ? `${width}px` : '100%',\n        aspectRatio: dimensions.width && dimensions.height ? \n          `${dimensions.width}/${dimensions.height}` : '16/9',\n        contain: 'layout paint style'\n      }}\n    >\n      <div\n        style={{ \n          paddingTop: `${aspectRatio}%`,\n          contain: 'strict'\n        }}\n        className={`${error ? 'bg-gray-200' : 'bg-gray-100'}`}\n        aria-hidden=\"true\"\n      />\n      {!error && imageLoaded && (\n        <img\n          ref={imgRef}\n          src={src}\n          alt={alt}\n          width={dimensions.width || undefined}\n          height={dimensions.height || undefined}\n          className={`absolute top-0 left-0 w-full h-full object-cover ${className} ${\n            !loaded ? 'opacity-0' : 'opacity-100'\n          } transition-opacity duration-300 will-change-transform`}\n          loading=\"lazy\"\n          decoding=\"async\"\n          sizes={getSizes()}\n          fetchpriority={/hero|logo|banner/.test(className.toLowerCase()) ? 'high' : 'auto'}\n          onLoad={() => {\n            setLoaded(true);\n            // Force layout recalculation\n            if (imgRef.current) {\n              imgRef.current.style.transform = 'translateZ(0)';\n            }\n          }}\n          onError={(e) => {\n            setError(true);\n            e.target.onerror = null;\n            e.target.src = '/tee.webp';\n          }}\n          style={{\n            contain: 'layout paint style',\n            willChange: 'transform',\n            transform: 'translateZ(0)'\n          }}\n        />\n      )}\n      {error && (\n        <div className=\"absolute top-0 left-0 w-full h-full flex items-center justify-center text-gray-500\">\n          <span>Image not available</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OptimizedImage;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nconst Breadcrumb = () => {\n  const location = useLocation();\n  const pathSegments = location.pathname.split('/').filter(segment => segment !== '');\n  \n  // Skip rendering if we're on the homepage\n  if (pathSegments.length === 0) {\n    return null;\n  }\n  \n  // Generate breadcrumb items\n  const breadcrumbItems = [\n    {\n      name: 'Home',\n      path: '/',\n      position: 1\n    }\n  ];\n  \n  // Build the breadcrumb path segments\n  let currentPath = '';\n  pathSegments.forEach((segment, index) => {\n    currentPath += `/${segment}`;\n    \n    // Format the segment name to be more readable\n    let name = segment;\n    \n    // Handle special cases\n    if (segment.includes('-egg-rate')) {\n      name = segment.replace('-egg-rate', '');\n      name = name.charAt(0).toUpperCase() + name.slice(1) + ' Egg Rate';\n    } else if (segment === 'blog' && index === 0) {\n      name = 'Blog';\n    } else if (segment === 'state' && index === 0) {\n      name = 'States';\n    } else if (segment === 'webstories') {\n      name = 'Web Stories';\n    } else {\n      // Capitalize and replace hyphens with spaces for other segments\n      name = segment\n        .split('-')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n    }\n    \n    breadcrumbItems.push({\n      name,\n      path: currentPath,\n      position: index + 2\n    });\n  });\n  \n  // Create schema for breadcrumbs\n  const breadcrumbSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": breadcrumbItems.map(item => ({\n      \"@type\": \"ListItem\",\n      \"position\": item.position,\n      \"name\": item.name,\n      \"item\": `https://todayeggrates.com${item.path}`\n    }))\n  };\n  \n  return (\n    <>\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(breadcrumbSchema)}\n        </script>\n      </Helmet>\n      \n      <nav className=\"flex mb-5 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\n          {breadcrumbItems.map((item, index) => (\n            <li key={index} className=\"inline-flex items-center\">\n              {index > 0 && (\n                <span className=\"mx-2 text-gray-500\">/</span>\n              )}\n              \n              {index === breadcrumbItems.length - 1 ? (\n                <span className=\"text-gray-700 font-medium\" aria-current=\"page\">\n                  {item.name}\n                </span>\n              ) : (\n                <Link \n                  to={item.path} \n                  className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                >\n                  {item.name}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ol>\n      </nav>\n    </>\n  );\n};\n\nexport default Breadcrumb;","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"bg-[#422C18] text-white p-6 mt-8\">\n      <div className=\"container mx-auto flex flex-col md:flex-row justify-between items-center\">\n        <div className=\"mb-4 md:mb-0\">\n          <p className=\"text-center md:text-left\">\n            © {new Date().getFullYear()} todayEggRates. All Rights Reserved.\n          </p>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:space-x-6\">\n        <a\n            href=\"/disclaimer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Disclaimer\n          </a>\n          <a\n            href=\"/privacy\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300 mb-2 md:mb-0\"\n          >\n            Privacy Policy\n          </a>\n          <a\n            href=\"/terms\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Terms of Service\n          </a>\n        </div>\n      </div>\n      <div className=\"mt-6 text-center\">\n        <p className=\"text-[#C4A484] text-sm\">\n          Follow us on{\" \"}\n          <a\n            href=\"https://www.facebook.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Facebook\n          </a>\n          ,{\" \"}\n          <a\n            href=\"https://www.twitter.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Twitter\n          </a>\n          ,{\" \"}\n          <a\n            href=\"https://www.instagram.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Instagram\n          </a>\n          .\n        </p>\n        <br/>\n        <p>Made with &#10084; by <a href=\"https://www.instagram.com/being._owais/profilecard/?igsh=MWo5Nm45cjFuNzVobA==\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:underline\">Owais Khan</a></p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport Select from 'react-select';\nimport { FaBars, FaTimes } from 'react-icons/fa';\nimport OptimizedImage from '../common/OptimizedImage';\n\nconst Navbar = ({ setSelectedCity, setSelectedState, selectedCity, selectedState }) => {\n  const [options, setOptions] = useState([]);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Track navigation lock to prevent redundant navigations\n  const navigationLock = React.useRef(false);\n\n  useEffect(() => {\n    fetch('/php/api/location/get_states_and_cities.php')\n      .then(response => response.json())\n      .then(data => {\n        const combinedOptions = [];\n        const stateSet = new Set();\n        const citySet = new Set();\n        \n        for (const state in data) {\n          if (!stateSet.has(state)) {\n            combinedOptions.push({\n              value: state,\n              label: state,\n              type: 'state',\n            });\n            stateSet.add(state);\n          }\n          \n          data[state].forEach(city => {\n            // Standardize city names\n            let cityName = city;\n            // Case-insensitive check for bengaluru/bangalore variants\n            if (cityName.toLowerCase() === 'bangalore' || \n                cityName.toLowerCase() === 'bangalore (cc)' || \n                cityName.toLowerCase() === 'bengaluru (cc)' ||\n                cityName.toLowerCase() === 'bengaluru') {\n              cityName = 'Bengaluru'; // Always use this capitalization\n            }\n            \n            const cityLabel = `${cityName}, ${state}`;\n            if (!citySet.has(cityLabel)) {\n              combinedOptions.push({\n                value: cityName,\n                label: cityLabel,\n                type: 'city',\n              });\n              citySet.add(cityLabel);\n            }\n          });\n        }\n        setOptions(combinedOptions);\n      })\n      .catch(error => console.error('Error fetching states and cities:', error));\n  }, []);\n\n  const handleChange = (selectedOption) => {\n    if (!selectedOption || navigationLock.current) return;\n    \n    navigationLock.current = true;\n    const { type, label } = selectedOption;\n    \n    if (type === 'city') {\n      const [city, state] = label.split(', ');\n      let selectedCityName = city;\n      \n      // Case-insensitive check for bengaluru/bangalore variants\n      if (selectedCityName.toLowerCase() === 'bangalore' || \n          selectedCityName.toLowerCase() === 'bangalore (cc)' || \n          selectedCityName.toLowerCase() === 'bengaluru (cc)' ||\n          selectedCityName.toLowerCase() === 'bengaluru') {\n        selectedCityName = 'Bengaluru'; // Always use this capitalization\n      }\n      \n      // Update states first\n      setSelectedCity(selectedCityName);\n      setSelectedState(state);\n      \n      // Then navigate with a slight delay\n      setTimeout(() => {\n        const path = `/${selectedCityName.toLowerCase()}-egg-rate`;\n        \n        // Only navigate if we're not already on this path\n        if (location.pathname !== path) {\n          navigate(path, { replace: true });\n        }\n        \n        navigationLock.current = false;\n      }, 5);\n      \n    } else if (type === 'state') {\n      // Update states first\n      setSelectedCity('');\n      setSelectedState(label);\n      \n      // Then navigate with a slight delay\n      setTimeout(() => {\n        const path = `/state/${label.toLowerCase()}-egg-rate`;\n        \n        // Only navigate if we're not already on this path\n        if (location.pathname !== path) {\n          navigate(path, { replace: true });\n        }\n        \n        navigationLock.current = false;\n      }, 5);\n    }\n  };\n\n  const handleHomeClick = (e) => {\n    if (navigationLock.current) {\n      e.preventDefault();\n      return;\n    }\n    \n    navigationLock.current = true;\n    setSelectedCity('');\n    setSelectedState('');\n    \n    // Only navigate if we're not already on home\n    if (location.pathname !== '/') {\n      navigate('/');\n    }\n    \n    // Release lock after a short delay\n    setTimeout(() => {\n      navigationLock.current = false;\n    }, 5);\n  };\n\n  const handleCityClick = (city, e) => {\n    if (navigationLock.current) {\n      e?.preventDefault();\n      return;\n    }\n    \n    navigationLock.current = true;\n    // Update state first\n    setSelectedCity(city);\n    setSelectedState('');\n    \n    // Then navigate with a slight delay\n    setTimeout(() => {\n      const path = `/${city.toLowerCase()}-egg-rate`;\n      \n      // Only navigate if we're not already on this path\n      if (location.pathname !== path) {\n        navigate(path, { replace: true });\n      }\n      \n      navigationLock.current = false;\n    }, 5);\n  };\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  const handleLogoError = (e) => {\n    console.error('Error loading logo:', e.nativeEvent);\n    console.error('Error target:', e.target);\n    e.target.src = '/tee.avif'; // Fallback image\n  };\n\n  return (\n    <nav className=\"bg-white p-4 shadow-lg\">\n      <div className=\"container mx-auto flex flex-col md:flex-row justify-between items-center\">\n        <div className=\"flex justify-between items-center w-full md:w-auto\">          <Link to=\"/\" onClick={handleHomeClick} className=\"mb-4 md:mb-0\">\n            <OptimizedImage\n              src=\"/tee.webp\"\n              alt=\"Today Egg Rates Logo\"\n              className=\"h-10\"\n              width={200}\n              height={40}\n              onError={handleLogoError}\n            />\n          </Link>\n          <button\n            className=\"md:hidden text-gray-800 focus:outline-none\"\n            onClick={toggleMenu}\n          >\n            {menuOpen ? <FaTimes size={24} /> : <FaBars size={24} />}\n          </button>\n        </div>\n        <div\n          className={`${\n            menuOpen ? 'block' : 'hidden'\n          } md:flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-4 mb-4 md:mb-0 w-full md:w-auto`}\n        >\n          <div className=\"flex flex-col space-y-2 md:space-y-0 md:flex-row md:space-x-4\">\n            <Link\n              to=\"/\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={handleHomeClick}\n            >\n              Home\n            </Link>\n            <Link\n              to=\"/mumbai-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Mumbai', e)}\n            >\n              Mumbai\n            </Link>\n            <Link\n              to=\"/kolkata-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Kolkata', e)}\n            >\n              Kolkata\n            </Link>\n            <Link\n              to=\"/lucknow-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Lucknow', e)}\n            >\n              Lucknow\n            </Link>\n            <Link\n              to=\"/barwala-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Barwala', e)}\n            >\n              Barwala\n            </Link>\n            <Link\n              to=\"/hyderabad-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Hyderabad', e)}\n            >\n              Hyderabad\n            </Link>\n            <Link\n              to=\"/chennai-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Chennai', e)}\n            >\n              Chennai\n            </Link>\n            <Link\n              to=\"/webstories\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n            >\n              Web Stories\n            </Link>\n          </div>\n        </div>\n        <div className=\"w-full md:w-64\">\n          <Select\n            value={options.find(option => option.value === (selectedCity || selectedState))}\n            onChange={handleChange}\n            options={options}\n            className=\"w-full\"\n            styles={{\n              control: (base) => ({\n                ...base,\n                backgroundColor: 'white',\n                borderColor: 'transparent',\n                boxShadow: 'none',\n                '&:hover': {\n                  borderColor: 'transparent',\n                },\n                padding: '0.5rem', // Add padding for better touch target\n                borderRadius: '0.375rem', // Tailwind rounded\n              }),\n              menu: (base) => ({\n                ...base,\n                zIndex: 9999,\n              }),\n              placeholder: (base) => ({\n                ...base,\n                color: '#A0AEC0', // Placeholder color for better contrast\n              }),\n            }}\n            placeholder=\"Select City, State\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport RateTable from './RateTable';\n\nconst DefaultTable = ({ eggRates = [] }) => {  return <RateTable rates={eggRates} showPriceColumns={true} showChart={true} chartType=\"bar\" />;\n};\n\nexport default DefaultTable;","import React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, LineElement, PointElement } from 'chart.js';\nimport { Bar, Line } from 'react-chartjs-2';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, LineElement, PointElement);\n\nconst RateChart = ({ data = [], title = 'Egg Rates', chartType = 'bar', xAxisKey = 'city', yAxisKey = 'rate', showLine = false }) => {\n  if (!data || data.length === 0) {\n    return null;\n  }\n\n  const chartData = {\n    labels: data.map(item => item[xAxisKey]),\n    datasets: [\n      {\n        label: title,\n        data: data.map(item => item[yAxisKey]),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n        fill: showLine ? false : undefined,\n        tension: showLine ? 0.3 : undefined,\n        pointRadius: showLine ? 4 : undefined,\n        pointHoverRadius: showLine ? 6 : undefined,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: title,\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            return `₹${context.raw.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        ticks: {\n          callback: function(value) {\n            return '₹' + value.toFixed(2);\n          }\n        }\n      }\n    }\n  };\n\n  const ChartComponent = chartType === 'line' ? Line : Bar;\n\n  return (\n    <div className=\"mt-8\" style={{ position: 'relative', height: '400px', width: '100%' }}>\n      <ChartComponent data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default RateChart;\n","import React, { useState } from 'react';\nimport RateChart from './RateChart';\nimport { Helmet } from 'react-helmet';\n\nconst RateTable = ({ \n  rates = [], \n  showChart = true, \n  itemsPerPage = 10, \n  showAdmin = false,\n  showSpecialRates = false,\n  chartType = 'bar',\n  onDelete,\n  onEdit,\n  handleSort: externalHandleSort,\n  showState = false,\n  showDate = false,\n  showPriceColumns = true,\n  selectedCity = '',\n  selectedState = ''\n}) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({ key: 'city', direction: 'ascending' });\n  const [editingRate, setEditingRate] = useState(null);\n  const [editedRate, setEditedRate] = useState({});\n\n  if (!rates || rates.length === 0) {\n    return (\n      <div className=\"p-6 mt-6 bg-gray-100 rounded-lg shadow-lg text-center\">\n        {showSpecialRates ? 'No special rates available' : 'No rates available at the moment.'}\n      </div>\n    );\n  }\n\n  // Sort rates by date (newest first)\n  const sortedRates = externalHandleSort ? rates : [...rates].sort((a, b) => {\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? -1 : 1;\n    }\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? 1 : -1;\n    }\n    return 0;\n  });\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = sortedRates.slice(indexOfFirstItem, indexOfLastItem);\n\n  const handleClick = (event) => {\n    setCurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(rates.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const handleLocalSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const requestSort = (key) => {\n    if (externalHandleSort) {\n      externalHandleSort(key);\n    } else {\n      handleLocalSort(key);\n    }\n  };\n\n  const handleEditClick = (rate) => {\n    setEditingRate(rate.id);\n    setEditedRate(rate);\n  };\n\n  const handleSaveClick = () => {\n    if (onEdit) {\n      onEdit(editedRate);\n    }\n    setEditingRate(null);\n  };\n\n  const handleCancelClick = () => {\n    setEditingRate(null);\n    setEditedRate({});\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setEditedRate((prevRate) => ({\n      ...prevRate,\n      [name]: value,\n    }));\n  };\n\n  // Format dates for chart and calculate changes\n  const latestRate = sortedRates[0]?.rate || 0;\n  const previousRate = sortedRates[1]?.rate || latestRate;\n  const rateChange = latestRate - previousRate;\n  const percentageChange = previousRate ? (rateChange / previousRate) * 100 : 0;\n  const trayPrice = latestRate * 30;\n  const latestRateDate = sortedRates[0]?.date ? new Date(sortedRates[0].date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }) : new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n\n  // Schema data\n  const localBusinessSchema = selectedCity ? {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"LocalBusiness\",\n    \"name\": `Egg Market ${selectedCity}`,\n    \"description\": `Find today's egg rates in ${selectedCity}, ${selectedState}. Updated daily NECC egg prices and wholesale egg rates.`,\n    \"address\": {\n      \"@type\": \"PostalAddress\",\n      \"addressLocality\": selectedCity,\n      \"addressRegion\": selectedState,\n      \"addressCountry\": \"IN\"\n    },\n    \"image\": \"https://todayeggrates.com/eggpic.webp\",\n    \"priceRange\": \"₹₹\",\n    \"telephone\": \"+91-XXXXXXXXXX\",\n    \"url\": `https://todayeggrates.com/${selectedCity.toLowerCase()}-egg-rate`,\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.8\",\n      \"ratingCount\": \"254\"\n    },\n    \"openingHoursSpecification\": [\n      {\n        \"@type\": \"OpeningHoursSpecification\",\n        \"dayOfWeek\": [\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n          \"Sunday\"\n        ],\n        \"opens\": \"06:00\",\n        \"closes\": \"21:00\"\n      }\n    ],\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"itemOffered\": {\n        \"@type\": \"Product\",\n        \"name\": \"Eggs\",\n        \"description\": `Fresh eggs in ${selectedCity}, ${selectedState}`,\n        \"offers\": {\n          \"@type\": \"Offer\",\n          \"price\": latestRate,\n          \"priceCurrency\": \"INR\",\n          \"availability\": \"https://schema.org/InStock\",\n          \"priceValidUntil\": new Date(new Date().setDate(new Date().getDate() + 1)).toISOString().split('T')[0]\n        }\n      }\n    }\n  } : null;\n  \n  const productSchema = selectedCity ? {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Product\",\n    \"name\": `Eggs in ${selectedCity}, ${selectedState}`,\n    \"description\": `Fresh eggs available in ${selectedCity}, ${selectedState}. Check today's egg price.`,\n    \"image\": \"https://todayeggrates.com/eggpic.webp\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"url\": `https://todayeggrates.com/${selectedCity.toLowerCase()}-egg-rate`,\n      \"priceCurrency\": \"INR\",\n      \"price\": latestRate,\n      \"priceValidUntil\": new Date(new Date().setDate(new Date().getDate() + 1)).toISOString().split('T')[0],\n      \"availability\": \"https://schema.org/InStock\",\n      \"itemCondition\": \"https://schema.org/NewCondition\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.8\",\n      \"reviewCount\": \"254\"\n    }\n  } : null;\n\n  return (\n    <>\n      {selectedCity && (\n        <Helmet>\n          {localBusinessSchema && (\n            <script type=\"application/ld+json\">\n              {JSON.stringify(localBusinessSchema)}\n            </script>\n          )}\n          {productSchema && (\n            <script type=\"application/ld+json\">\n              {JSON.stringify(productSchema)}\n            </script>\n          )}\n        </Helmet>\n      )}\n      \n      <div className={showSpecialRates ? \"p-6 mt-6 bg-white rounded-lg shadow-lg\" : \"dynamic-body p-4\"}>\n        {showSpecialRates && <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Special Rates</h2>}\n        {selectedCity && (\n          <div className=\"p-6 bg-gray-50 rounded-lg shadow-md mb-6\">\n            <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\n              Today's Egg Rate in {selectedCity}, {selectedState}\n            </h2>\n            \n            <div className=\"flex flex-wrap justify-between mb-8\">\n              <div className=\"w-full md:w-1/2 p-4\">\n                <div className=\"bg-white p-6 rounded-lg shadow-sm\">\n                  <h3 className=\"text-xl font-medium text-gray-700\">Latest Price Details</h3>\n                  <div className=\"mt-4 space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">Current Rate:</span>\n                      <span className=\"font-bold text-2xl text-red-600\">₹{latestRate} per egg</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">Tray Price (30 eggs):</span>\n                      <span className=\"font-semibold text-xl text-blue-600\">₹{trayPrice.toFixed(2)}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">Updated on:</span>\n                      <span className=\"text-gray-800\">{latestRateDate}</span>\n                    </div>\n                    {rateChange !== 0 && (\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-600\">Price Change:</span>\n                        <span className={rateChange > 0 ? 'text-green-600' : rateChange < 0 ? 'text-red-600' : 'text-gray-600'}>\n                          {rateChange > 0 ? '+' : ''}{rateChange.toFixed(2)} ({percentageChange > 0 ? '+' : ''}{percentageChange.toFixed(2)}%)\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full border border-gray-300 mt-4\">\n            <thead>\n              <tr style={{ backgroundColor: '#F9BE0C' }}>\n                <th\n                  className=\"border border-gray-300 p-2 cursor-pointer\"\n                  onClick={() => requestSort('city')}\n                >\n                  Market\n                </th>\n                {showState && (\n                  <th\n                    className=\"border border-gray-300 p-2 cursor-pointer\"\n                    onClick={() => requestSort('state')}\n                  >\n                    State\n                  </th>\n                )}\n                {showDate && (\n                  <th\n                    className=\"border border-gray-300 p-2 cursor-pointer\"\n                    onClick={() => requestSort('date')}\n                  >\n                    Date\n                  </th>\n                )}\n                <th\n                  className=\"border border-gray-300 p-2 cursor-pointer\"\n                  onClick={() => requestSort('rate')}\n                >\n                  Piece\n                </th>\n                {showPriceColumns && (\n                  <>\n                    <th className=\"border border-gray-300 p-2\">Tray</th>\n                    <th className=\"border border-gray-300 p-2\">100 Pcs</th>\n                    <th className=\"border border-gray-300 p-2\">Peti</th>\n                  </>\n                )}\n                {showAdmin && (\n                  <th className=\"border border-gray-300 p-2\">Actions</th>\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {currentItems.map((rate, index) => (\n                <tr\n                  key={`${rate.city}-${rate.date}-${index}`}\n                  className={`${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n                >\n                  <td className=\"border border-gray-300 p-2\">\n                    {rate.city ? (\n                      <a href={`/${rate.city.toLowerCase()}-egg-rate`}>{rate.city}</a>\n                    ) : (\n                      'N/A'\n                    )}\n                  </td>\n                  {showState && (\n                    <td className=\"border border-gray-300 p-2\">{rate.state}</td>\n                  )}\n                  {showDate && (\n                    <td className=\"border border-gray-300 p-2\">\n                      {editingRate === rate.id ? (\n                        <input\n                          type=\"date\"\n                          name=\"date\"\n                          value={editedRate.date}\n                          onChange={handleChange}\n                          className=\"border border-gray-300 p-2 rounded w-full\"\n                        />\n                      ) : (\n                        rate.date\n                      )}\n                    </td>\n                  )}\n                  <td className=\"border border-gray-300 p-2\">\n                    {editingRate === rate.id ? (\n                      <input\n                        type=\"number\"\n                        name=\"rate\"\n                        value={editedRate.rate}\n                        onChange={handleChange}\n                        className=\"border border-gray-300 p-2 rounded w-full\"\n                      />\n                    ) : (\n                      `₹${parseFloat(rate.rate).toFixed(2)}`\n                    )}\n                  </td>\n                  {showPriceColumns && (\n                    <>\n                      <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 30).toFixed(2)}</td>\n                      <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 100).toFixed(2)}</td>\n                      <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 210).toFixed(2)}</td>\n                    </>\n                  )}\n                  {showAdmin && (\n                    <td className=\"border border-gray-300 p-2 space-x-2\">\n                      {editingRate === rate.id ? (\n                        <>\n                          <button\n                            onClick={handleSaveClick}\n                            className=\"bg-green-500 text-white p-2 rounded hover:bg-green-600 transition\"\n                          >\n                            Save\n                          </button>\n                          <button\n                            onClick={handleCancelClick}\n                            className=\"bg-gray-500 text-white p-2 rounded hover:bg-gray-600 transition\"\n                          >\n                            Cancel\n                          </button>\n                        </>\n                      ) : (\n                        <>\n                          <button\n                            onClick={() => handleEditClick(rate)}\n                            className=\"bg-yellow-500 text-white p-2 rounded hover:bg-yellow-600 transition\"\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={() => onDelete && onDelete(rate)}\n                            className=\"bg-red-500 text-white p-2 rounded hover:bg-red-600 transition\"\n                          >\n                            Delete\n                          </button>\n                        </>\n                      )}\n                    </td>\n                  )}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        \n        <div className=\"pagination mt-4 flex flex-wrap justify-center\">\n          {pages.map(number => (\n            <button\n              key={number}\n              id={number}\n              onClick={handleClick}\n              className={`px-4 py-2 mx-1 mb-2 border rounded ${currentPage === number ? 'bg-blue-500 text-white' : 'bg-white text-blue-500 hover:bg-blue-100'}`}\n            >\n              {number}\n            </button>\n          ))}\n        </div>\n\n        {showChart && <RateChart data={currentItems} chartType={chartType} />}\n\n        {selectedCity && (\n          <div className=\"mt-8 bg-blue-50 p-4 rounded-lg\">\n            <h3 className=\"text-lg font-medium text-blue-800 mb-2\">About {selectedCity} Egg Market</h3>\n            <p className=\"text-gray-700 mb-3\">\n              The egg market in {selectedCity}, {selectedState} follows the general poultry market trends in the region.\n              Prices are influenced by factors such as feed costs, seasonal demand, transportation expenses, and overall market conditions.\n            </p>\n            <p className=\"text-gray-700\">\n              {selectedCity}'s egg rates are typically updated daily based on the National Egg Coordination Committee (NECC) publications\n              and local market surveys. Our website provides the most current prices to help consumers and traders make informed decisions.\n            </p>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default RateTable;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst StateList = ({ states, cities }) => {\n  // Define popular city and state lists for SEO enhancements\n  const popularCities = ['Mumbai', 'Chennai', 'Bangalore', 'Kolkata', 'Barwala', 'Siliguri', 'Hyderabad', 'Durgapur'];\n  const popularStates = ['Maharashtra', 'Tamil Nadu', 'Karnataka', 'West Bengal', 'Haryana', 'Kerala', 'Punjab', 'Telangana'];\n  \n  const renderStateTableRows = () => {\n    const rows = [];\n    for (let i = 0; i < states.length; i += 3) {\n      rows.push(\n        <tr key={i} className=\"bg-white border-b hover:bg-gray-50\">\n          {states.slice(i, i + 3).map(state => (\n            <td key={state} className=\"px-6 py-4 text-center\">\n              <Link\n                to={`/state/${state.toLowerCase()}-egg-rate`}\n                className=\"text-green-600 font-bold hover:underline transition duration-200\"\n                title={`Today's Egg Rate in ${state} - NECC Egg Price`}\n              >\n                {state} Egg Rate\n              </Link>\n            </td>\n          ))}\n        </tr>\n      );\n    }\n    return rows;\n  };\n\n  const renderCityTableRows = () => {\n    const rows = [];\n    for (let i = 0; i < cities.length; i += 3) {\n      rows.push(\n        <tr key={i} className=\"bg-white border-b hover:bg-gray-50\">\n          {cities.slice(i, i + 3).map(city => (\n            <td key={city} className=\"px-6 py-4 text-center\">\n              <Link\n                to={`/${city.toLowerCase()}-egg-rate`}\n                className=\"text-blue-600 font-bold hover:underline transition duration-200\"\n                title={`Today's Egg Rate in ${city} - Latest NECC Egg Price`}\n              >\n                {city} Egg Rate\n              </Link>\n            </td>\n          ))}\n        </tr>\n      );\n    }\n    return rows;\n  };\n\n  // Render popular cities section for SEO benefit\n  const renderPopularCities = () => {\n    return (\n      <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n        <h3 className=\"text-lg font-semibold mb-3 text-gray-700\">Popular City Egg Rates</h3>\n        <div className=\"flex flex-wrap gap-2\">\n          {popularCities.map(city => (\n            <Link \n              key={city}\n              to={`/${city.toLowerCase()}-egg-rate`}\n              className=\"px-3 py-1 bg-white border border-blue-200 rounded-full text-sm text-blue-600 hover:bg-blue-100 transition duration-200\"\n              title={`Check today's egg rate in ${city}`}\n            >\n              {city} Egg Rate Today\n            </Link>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  // Render popular states section for SEO benefit\n  const renderPopularStates = () => {\n    return (\n      <div className=\"mt-4 p-4 bg-green-50 rounded-lg\">\n        <h3 className=\"text-lg font-semibold mb-3 text-gray-700\">Popular State Egg Rates</h3>\n        <div className=\"flex flex-wrap gap-2\">\n          {popularStates.map(state => (\n            <Link \n              key={state}\n              to={`/state/${state.toLowerCase()}-egg-rate`}\n              className=\"px-3 py-1 bg-white border border-green-200 rounded-full text-sm text-green-600 hover:bg-green-100 transition duration-200\"\n              title={`Check today's egg rates in ${state}`}\n            >\n              {state} Egg Rate\n            </Link>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"p-6 mt-6 bg-gray-100 rounded-lg shadow-lg max-w-4xl mx-auto\">\n      <h2 className=\"text-center bg-gray-200 rounded-lg w-full p-4 mt-4 text-xl font-semibold\">\n        Daily Egg Price in Mandi, National Wholesale Market Rate\n      </h2>\n      \n      {/* Popular Cities Section */}\n      {renderPopularCities()}\n      \n      {/* Popular States Section */}\n      {renderPopularStates()}\n      \n      <h2 className=\"text-2xl font-bold mb-4 mt-6 text-center\">State-wise Egg Rates</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {states.length > 0 ? renderStateTableRows() : (\n              <tr>\n                <td className=\"px-6 py-4 text-center\" colSpan=\"3\">Loading...</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      {cities.length > 0 && (\n        <>\n          <h2 className=\"text-2xl font-bold mt-8 mb-4 text-center\">City-wise Egg Rates</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {renderCityTableRows()}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n      \n      <div className=\"mt-6 text-sm text-gray-600\">\n        <p>Egg rates updated daily. Last updated: {new Date().toLocaleDateString('en-US', {day: 'numeric', month: 'long', year: 'numeric'})}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StateList;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BodyOne = ({ selectedCity, selectedState }) => {\n  const displayName = selectedCity ? selectedCity : selectedState ? selectedState : 'India';\n  const today = new Date().toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n  \n  const [featuredWebStories, setFeaturedWebStories] = useState([]);\n  const [showWebStories, setShowWebStories] = useState(false);\n  \n  useEffect(() => {\n    // Fetch web stories and randomly select 3\n    fetch('/php/get_web_stories.php')\n      .then(response => response.json())\n      .then(data => {\n        // Shuffle array and take first 3\n        const shuffled = [...data].sort(() => 0.5 - Math.random());\n        setFeaturedWebStories(shuffled.slice(0, 3));\n      })\n      .catch(error => console.error('Error fetching web stories:', error));\n  }, []);\n\n  const getUniqueH1 = () => {\n    if (selectedCity) {\n      return `Egg Rate in ${selectedCity}, ${selectedState} (${today})`;\n    } else if (selectedState) {\n      return `${selectedState} Egg Rate: Latest NECC Prices (${today})`;\n    } else {\n      return `Today's Egg Rate in India: NECC Price List (${today})`;\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto mb-8\">\n      {/* Hero Section with Unique H1 and Display Name */}\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-800 text-center mb-4\">\n          {getUniqueH1()}\n        </h1>\n        <p className=\"text-center text-lg font-semibold text-gray-700 mb-2\">\n          Current Rates for {displayName}\n        </p>\n        <p className=\"text-center text-gray-600 mb-4\">\n          {selectedCity \n            ? `Get the latest egg rates for ${selectedCity}. Updated daily with wholesale and retail prices.`\n            : selectedState\n              ? `Check current egg prices across ${selectedState}. Compare rates from different cities.`\n              : 'Track egg prices across India with our daily updated NECC rates from major cities.'\n          }\n        </p>\n      </div>\n\n      {/* Web Stories Section */}\n      <div className=\"mt-6 text-center\">\n        <button\n          onClick={() => setShowWebStories(!showWebStories)}\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n        >\n          {showWebStories ? 'Hide Web Stories' : 'Show Web Stories'}\n        </button>\n      </div>\n\n      {showWebStories && featuredWebStories.length > 0 && (\n        <div className=\"mt-6\">\n          <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Latest Updates</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {featuredWebStories.map(story => (\n              <Link\n                key={story.id}\n                to={`/webstories/${story.slug}`}\n                className=\"block bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\"\n              >\n                <div className=\"aspect-w-9 aspect-h-16 mb-2\">\n                  <img \n                    src={story.thumbnail} \n                    alt={`Egg Rate in ${story.city}, ${story.state}`} \n                    className=\"object-cover w-full h-48 rounded-lg\"\n                    loading=\"lazy\"\n                  />\n                </div>\n                <h3 className=\"font-bold text-lg mb-1\">{story.title}</h3>\n                <p className=\"text-red-600 font-bold mb-1\">₹{story.rate} per egg</p>\n                <p className=\"text-gray-600 text-sm\">{story.date}</p>\n              </Link>\n            ))}\n          </div>          \n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BodyOne;","import React from \"react\";\nimport OptimizedImage from \"../common/OptimizedImage\";\n\nconst BodyTwo = ({ selectedCity, selectedState }) => {\n  return (\n    <div className=\"p-6 mt-6 bg-cover bg-center rounded-lg shadow-lg\">\n      <h1 className=\"text-center bg-gray-200 bg-opacity-75 rounded-lg w-full p-4 mt-4 text-2xl font-bold text-gray-800\">\n        Egg Daily and Monthly Prices\n      </h1>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        Our platform Today Egg rates provides the daily and monthly prices of egg throughout the different cities, states and areas of India. This Egg rate indicator is beneficial for both consumers and sellers in the Indian egg market. The daily or today’s egg rate refers to the current price rates of the eggs. Users can scroll up to the previous day's price rates as well, limited to the current month. The egg rates depend on several factors such as production cost, transportation, egg quality, etc.\n      </p>\n\n      <h1 className=\"text-center bg-gray-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n        Wholesale Egg Prices Today\n      </h1>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        The wholesale egg prices represent the rates that retailers and distributors pay when purchasing eggs in bulk quantities. In India, these prices have been experiencing a notable upward trend in recent years, influenced by a variety of factors.\n      </p>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        One of the primary contributors to this increase is the rise in chicken feeding costs. Corn and soybeans, which are the main ingredients in chicken feed, have seen substantial price hikes. This surge in feed prices has a direct impact on the overall costs incurred by egg producers or poultry farms, as feed constitutes a significant portion of their operational expenses.\n      </p>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        Additionally, other factors such as fluctuations in demand and supply, changes in production levels, and economic conditions can also play a role in influencing wholesale egg prices. For instance, periods of high demand—such as during festivals or holidays—can lead to further increases in prices, while production challenges, such as disease outbreaks among poultry, can also restrict supply and drive prices higher.\n      </p>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        The egg market is a dynamic landscape that is ever-evolving, making it essential for consumers to remain well-informed about current egg prices and wholesale egg rates. This knowledge empowers them to make thoughtful and informed purchasing choices. For farmers and egg producers, staying attuned to daily and monthly fluctuations in egg prices is equally vital. By closely monitoring these trends, they can optimize their production strategies and pricing decisions, ensuring sustainability and profitability in their operations. In this intricate dance of supply and demand, awareness becomes a key advantage for all stakeholders involved.\n      </p>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        At TodayEggRates.com, we offer a comprehensive overview of daily and monthly NECC egg rates throughout the different areas/cities and states of India, allowing you to effortlessly compare rates and make informed decisions. Whether you’re a farmer eager to sell your eggs or a consumer searching for the best prices, our platform serves as your trusted resource for the latest egg rate information. Discover today’s price for a tray of eggs or explore the current cost of a peti of eggs. Stay updated with live NECC rates through our detailed pricing data, ensuring you always have access to the most accurate market insights.\n      </p>\n\n      <h1 className=\"text bg-green-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n        NECC-National Egg Coordination Committee\n      </h1>\n      <div className=\"grid lg:grid-cols-2 gap-5\"> \n          <OptimizedImage src=\"/eggrate2.webp\" className=\"col-span-1 object-contain shadow rounded border-none\" alt=\"egg rate\" width={600} height={400} />\n          <div>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n              Eggs are a fantastic addition to any meal, whether it's breakfast, lunch, or dinner! You can enjoy them scrambled or boiled, and they work wonderfully in dishes like Anda Bhurji or even Anda Ka Halwa. Just like us Indians, eggs can fit into a variety of recipes while keeping their special charm. If you're curious about egg prices in India, they change daily, as shared by the NECC (National Egg Coordination Committee). We make it easy for you to stay updated with the latest egg rates so you can continue enjoying your favorite egg dishes!\n            </p> \n          </div>\n      </div>      <h2 className=\"text bg-green-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n        Today's NECC Egg Rate Analysis\n      </h2>\n      <div className=\"grid lg:grid-cols-2 gap-5\"> \n        <div>\n          <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n          The National Egg Coordination Committee (NECC) considers purchasing trends and the efforts of egg farmers when recommending current egg prices. This organization provides price suggestions for over 50 cities and states across the country. By disseminating today’s egg prices, we ensure that users remain informed about NECC’s recommendations, thereby enabling them to make more informed purchasing decisions.\n          </p> \n        </div>\n        <OptimizedImage src=\"/desiegg.webp\" className=\"col-span-1 object-contain shadow rounded border-none\" alt=\"egg rate in india\" width={600} height={400} />\n      </div>      <h2 className=\"text bg-green-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n        Egg Consumption in India\n      </h2>\n      <div className=\"grid lg:grid-cols-2 gap-5\"> \n          <OptimizedImage src=\"/eggrate3.webp\" className=\"col-span-1 object-contain shadow rounded border-none\" alt=\"egg rate in mumbai\" width={600} height={400} />\n          <div>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n            India is a major player in the global egg production industry, generating approximately 129.6 billion eggs each year. This production figure is experiencing a steady growth rate of 7% annually, reflecting the increasing demand for eggs among the population. According to data published by Agrospectrum, the average egg consumption per person in India is estimated to be 95 eggs per year. This indicates not only a high level of consumption but also a cultural acceptance of eggs as a staple food source. Furthermore, India holds the position of third largest egg producer globally, trailing only behind China and the United States. This prominent ranking underscores the significant role eggs play in the Indian diet, as well as the growing awareness among consumers regarding the nutritional benefits of eggs, including their high protein content and essential vitamins.\n            </p> \n          </div>\n      </div>\n      <h1 className=\"text bg-green-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n      Factors Affecting Egg Prices in India\n      </h1>\n      <div className=\"grid lg:grid-cols-2 gap-5\"> \n        <div>\n          <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n          Egg prices in India are influenced by a multitude of factors that can fluctuate over time. One of the primary determinants is the balance between demand and supply; when demand for eggs rises, prices tend to increase, whereas a surplus can lead to lower prices. The cost of production plays a crucial role as well, particularly the price of essential inputs such as bird feed, which can vary based on agricultural conditions and market trends.\nDisease outbreaks, especially recurring incidents of bird flu, can have a profound effect on the egg market. Such outbreaks often lead to a decrease in egg production and concerns about food safety, causing prices to spike. Furthermore, the impact of seasonal changes should not be overlooked; egg production typically sees a slight increase during the warmer months of summer due to improved laying conditions, while it often diminishes in the colder winter months when laying can be less consistent. These dynamics create a complex landscape that shapes the pricing of eggs across the country.\n          </p> \n        </div>\n        <OptimizedImage src=\"/eggchicken.webp\" className=\"col-span-1 object-contain shadow rounded border-none\" alt=\"egg rate barwala\" width={600} height={400} />\n      </div>\n      <h1 className=\"text bg-green-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n      How NECC Sets Egg Prices\n      </h1>\n      <div className=\"grid lg:grid-cols-2 gap-5\"> \n          <img src=\"/eggrate3.webp\" className=\"col-span-1 object-contain shadow rounded border-none\" alt=\"egg rate namakkal\" />\n          <div>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n            NECC (National Egg Coordination Committee) does not set egg prices directly. Instead, it provides a platform for stakeholders to work together and share information. Prices are determined daily by NECC after careful consideration and are updated every day at midnight. Key players in setting these prices include market forces, traders, distributors, and sometimes retailers.\n            </p>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n              <b>Market Forces: </b>\n              Egg prices are influenced by several factors, including demand and supply, inflation, and weather. Seasonal events, like festivals, can also affect egg prices.\n              </p>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n            <b>Traders and Distributors: </b>\n              Traders and distributors play a major role in deciding egg prices in India. They have control over pricing and can negotiate prices, which they then suggest to NECC. They act as middlemen between consumers and egg farmers.\n              </p>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n            <b>Consumers and Consumer Behavior: </b>\n              Consumers do not directly affect prices, but their preferences can have a significant impact. Demand can change due to dietary choices, cultural habits, seasonal factors, and economic conditions. Tracking daily egg prices can be unpredictable, requiring careful attention to get the best results.\n            </p> \n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BodyTwo;","import React from 'react';\n\nconst BodyThree = ({ selectedCity, selectedState, eggRates }) => {\n  const location = selectedCity || selectedState || 'your area';\n  const todayRate = eggRates.length > 0 ? eggRates[0].rate : 'N/A';\n  const rate7DaysAgo = eggRates.length > 7 ? eggRates[6].rate : 'N/A';\n  const weeklyChange = eggRates.length > 7 ? (eggRates[0].rate - eggRates[6].rate).toFixed(2) : 'N/A';\n  const weeklyChangePercent = eggRates.length > 7 ? ((eggRates[0].rate - eggRates[6].rate) / eggRates[6].rate * 100).toFixed(2) : 'N/A';\n  const averagePrice = eggRates.length > 0 ? (eggRates.reduce((sum, rate) => sum + rate.rate, 0) / eggRates.length).toFixed(2) : 'N/A';\n\n  const formatPrice = (price) => {\n    return typeof price === 'number' ? price.toFixed(2) : price;\n  };\n\n  return (\n    <div className=\"p-6 mt-6 bg-white shadow-lg rounded-lg\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Egg Price Trends in {location}</h2>\n      \n      <section className=\"mb-8\">\n        <h3 className=\"text-2xl font-semibold text-gray-700 mb-4\">{location}</h3>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          As per the latest report, the egg rate in {location} has reached ₹{formatPrice(todayRate)} per piece. But this is not the highest price for eggs in the city in the last one year. The price of eggs has been on the rise in the city for the last few months. The rise in the price of eggs is due to the increase in the cost of chicken feed. The cost of chicken feed has gone up by 10% in the last few months. This has led to an increase in the price of eggs in {location}.\n        </p>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          Egg prices in {location} have been on the rise in recent months, due to a variety of factors. The cost of feed, transportation, and labor have all increased, leading to higher prices at the farm gate. Consumers are now paying more for eggs, with the average price of a tray of eggs now exceeding ₹{formatPrice(todayRate * 30)}. This is a significant increase from just a few years ago, when a tray of eggs could be purchased for as little as ₹{formatPrice(todayRate * 30 - 20)}. The higher prices are having an impact on egg consumption in {location}, as many families are cutting back on their consumption of this staple food. While the current situation is difficult for consumers, it is important to remember that egg prices are still relatively low compared to other staples such as rice and wheat.\n        </p>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          The current egg price situation in {location} is not likely to change in the near future, as the cost of production is still high. However, as the industry adjusts to the new reality of higher prices, egg production is likely to increase, which could help to bring prices down over time. In the meantime, consumers will need to continue to pay more for their eggs.\n        </p>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          Poultry farmers in {location} said they are incurring losses as the cost of chicken feed accounts for around 60 percent of the total cost of production.\n        </p>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          <b>Note:</b> This is not NECC official website. We collect the prices from the NECC site to present the prices in a simple and graphical manner for the convenience of the user. The suggested prices are published solely for the reference and information of the trade and industry. NECC and EggRate.in does not by itself or through any person enforce compliance or adherence with such suggested egg prices in any manner whatsoever.\n        </p>\n      </section>\n\n      <section className=\"mb-8\">\n        <h3 className=\"text-2xl font-semibold text-gray-700 mb-4\">Today's Egg Rate in {location}</h3>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          Today’s date is {new Date().toDateString()} and we can see that the egg rate in {location} today is ₹{formatPrice(todayRate)}. But if we compare today’s date with yesterday’s date, we can see that yesterday the price of eggs in {location} was ₹{formatPrice(todayRate)}.\n        </p>\n        <table className=\"min-w-full bg-white divide-y divide-gray-200 mb-4\">\n          <thead>\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Egg rate details</th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Data</th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Today's Egg rate</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(todayRate)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Egg rate 7 days ago</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(rate7DaysAgo)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Weekly Change in Egg rate (₹)</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">{formatPrice(weeklyChange)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">% Weekly Change in Egg Rate</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">{formatPrice(weeklyChangePercent)}%</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">NECC Egg Price (₹)</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(todayRate)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Wholesale Price (₹)</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(todayRate)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Retail Price (₹)</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(todayRate + 0.35)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Supermarket Price (₹)</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(todayRate + 0.45)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Average Price till today</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(averagePrice)}</td>\n            </tr>\n          </tbody>\n        </table>\n      </section>\n\n      <section className=\"mb-8\">\n        <h3 className=\"text-2xl font-semibold text-gray-700 mb-4\">Egg Rate of a Tray in {location}</h3>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          If you are looking to buy eggs in bulk then you can consider buying an egg tray. The egg tray which usually holds 30 eggs in a tray costs ₹{formatPrice(todayRate * 30)}. Looking at the graph above you can see how the egg rate has fluctuated on a daily basis. In the above graph you can also see the weekly change of egg prices. There has been a change in the price of eggs by {formatPrice(weeklyChange)} compared to last week. The weekly percentage change in the price of eggs is {formatPrice(weeklyChangePercent)}%.\n        </p>\n      </section>\n    </div>\n  );\n};\n\nexport default BodyThree;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst StatePage = () => {\n  const { state: stateParam } = useParams();\n  const [averageRates, setAverageRates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Extract the state from the URL parameter\n  const state = stateParam.replace('-egg-rate', '');\n\n  useEffect(() => {\n    fetch(`/php/api/rates/get_average_rates_by_state.php?state=${state}`)\n      .then(response => response.json())\n      .then(data => {\n        const sortedRates = (data.averageRates || []).sort((a, b) => new Date(b.date) - new Date(a.date));\n        setAverageRates(sortedRates);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching average rates:', error);\n        setError(error);\n        setLoading(false);\n      });\n  }, [state]);\n\n  if (loading) {\n    return (\n      <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n        <div className=\"text-center\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n        <div className=\"text-center text-red-500\">Error loading data: {error.message}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full border border-gray-300\">\n          <thead>\n            <tr style={{ backgroundColor: '#F9BE0C' }}>\n              <th className=\"border border-gray-300 p-4 text-left\">Date</th>\n              <th className=\"border border-gray-300 p-4 text-left\">Average Rate</th>\n            </tr>\n          </thead>\n          <tbody>\n            {averageRates.length > 0 ? (\n              averageRates.map((rate, index) => (\n                <tr\n                  key={`${rate.date}-${index}`}\n                  className={`transition duration-150 ${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n                >\n                  <td className=\"border border-gray-300 p-4\">{rate.date}</td>\n                  <td className=\"border border-gray-300 p-4\">\n                    {rate.averageRate ? `₹${parseFloat(rate.averageRate).toFixed(2)}` : 'N/A'}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td className=\"border border-gray-300 p-4 text-center\" colSpan=\"2\">No data available</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default StatePage;","import React, { useEffect, useState } from 'react';\nimport RateTable from './RateTable';\n\nconst SpecialRatesTable = () => {\n  const [specialRates, setSpecialRates] = useState([]);\n\n  useEffect(() => {\n    fetch('/php/api/rates/get_special_rates.php')\n      .then(response => response.json())\n      .then(data => {\n        setSpecialRates(data);\n      })\n      .catch(error => console.error('Error fetching special rates:', error));\n  }, []);\n\n  return (\n    <RateTable \n      rates={specialRates}\n      showSpecialRates={true}\n      showPriceColumns={false}\n      showChart={false}\n    />\n  );\n};\n\nexport default SpecialRatesTable;\n","import React, { useState } from 'react';\n\n// Function to generate FAQ schema (separate from component rendering)\nexport const generateFaqSchema = (selectedCity, selectedState, eggRates) => {\n  // We only need currentRate and trayPrice for the FAQ schema\n  const currentRate = eggRates?.length > 0 ? eggRates[0].rate : 'N/A';\n  const trayPrice = currentRate !== 'N/A' ? (currentRate * 30).toFixed(2) : 'N/A';\n  \n  // Format date for display\n  const formattedDate = new Date().toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n  \n  // Generate FAQ items based on data\n  const faqItems = generateFaqList(selectedCity, selectedState, currentRate, trayPrice, formattedDate);\n  \n  // Return the structured data object\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": faqItems.map(faq => ({\n      \"@type\": \"Question\",\n      \"name\": faq.question,\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": faq.answer\n      }\n    }))\n  };\n};\n\n// Function to generate the FAQ list (used by both schema and component)\nexport const generateFaqList = (selectedCity, selectedState, currentRate, trayPrice, formattedDate) => {\n  // Default FAQs that appear on all pages\n  const defaultFAQs = [\n    {\n      question: `What is today's egg rate in India?`,\n      answer: `Today's egg rates in India vary by location. The national average egg rate today is updated daily from NECC (National Egg Coordination Committee) sources. Visit our homepage for the latest egg rates across all major cities.`\n    },\n    {\n      question: `What is NECC egg rate today?`,\n      answer: `The official NECC (National Egg Coordination Committee) egg rate today is updated on our website daily. NECC announces egg prices for different zones including Namakkal, Chennai, Delhi, Mumbai, Kolkata and other major markets.`\n    },\n    {\n      question: `How are egg rates determined in India?`,\n      answer: `Egg rates in India are determined by the National Egg Coordination Committee (NECC) based on factors like production costs, demand-supply dynamics, seasonal variations, and regional differences. These rates are announced daily and serve as a benchmark for wholesale egg prices across the country.`\n    },\n    {\n      question: `What is a peti of eggs and how much does it cost today?`,\n      answer: `A \"peti\" (box) of eggs typically contains 30 eggs (one tray). The price of 1 peti egg varies by location. Based on today's rates, a peti of eggs costs approximately ₹150-₹200 depending on your city. Check our city-specific pages for exact prices in your area.`\n    },\n    {\n      question: `Why do egg prices fluctuate?`,\n      answer: `Egg prices fluctuate due to factors like seasonal demand, feed costs, production levels, transportation costs, festivals, weather conditions, and disease outbreaks affecting poultry. The National Egg Coordination Committee (NECC) monitors these factors when setting daily egg rates.`\n    },\n    {\n      question: `What is the difference between farm eggs and market eggs?`,\n      answer: `Farm eggs come directly from producers without passing through the formal market system, while market eggs are distributed through the organized channels regulated by bodies like NECC. Market egg rates are standardized while farm egg prices may vary based on local factors.`\n    },\n    {\n      question: `How much does a tray of 30 eggs cost today?`,\n      answer: `The cost of a tray of 30 eggs (commonly referred to as 1 peti) varies by location. In major cities, the current price ranges from ₹150 to ₹200. Our website provides daily updated city-specific egg rates across India.`\n    },\n    {\n      question: `What are the factors that affect egg rates?`,\n      answer: `Egg rates are affected by multiple factors including: production costs (feed, labor, maintenance), seasonal demand fluctuations, transportation costs, regional supply-demand balance, weather conditions, disease outbreaks in poultry, and government policies regarding the poultry industry.`\n    }\n  ];\n\n  // Location-specific FAQs\n  const locationSpecificFAQs = selectedCity ? [\n    {\n      question: `What is today's egg rate in ${selectedCity}?`,\n      answer: `Today's egg rate in ${selectedCity}, ${selectedState || ''} is ₹${currentRate} per egg (as of ${formattedDate}).`\n    },\n    {\n      question: `What is the price of 30 eggs (1 tray) in ${selectedCity} today?`,\n      answer: `The price of 30 eggs (1 tray) in ${selectedCity} today is ₹${trayPrice} (as of ${formattedDate}).`\n    },\n    {\n      question: `What is the NECC egg rate in ${selectedCity} today?`,\n      answer: `The NECC egg rate in ${selectedCity} today is ₹${currentRate} per egg. NECC (National Egg Coordination Committee) updates egg prices daily based on market conditions.`\n    },\n    {\n      question: `How do egg prices in ${selectedCity} compare to national average?`,\n      answer: `Egg prices in ${selectedCity} may differ from the national average based on local factors like transportation costs, regional demand, and distribution network efficiency. You can compare ${selectedCity}'s egg rates with other cities on our main rates page.`\n    }\n  ] : selectedState ? [\n    {\n      question: `What is the average egg rate in ${selectedState}?`,\n      answer: `The average egg rate in ${selectedState} varies across different cities. We calculate the state average based on NECC rates from major cities in ${selectedState}. This information is updated daily on our website.`\n    },\n    {\n      question: `How do egg prices in ${selectedState} compare to other states?`,\n      answer: `Egg prices in ${selectedState} may be higher or lower than other states depending on factors like local production capacity, transportation networks, and consumer demand. You can compare rates across different states on our website.`\n    },\n    {\n      question: `Which city in ${selectedState} has the lowest egg prices?`,\n      answer: `Egg prices can vary within ${selectedState}. Cities closer to major production centers typically have lower prices. Check our state page for ${selectedState} to see a comparison of egg rates across different cities in the state.`\n    }\n  ] : [];\n\n  // Combine and return all FAQs\n  return [...locationSpecificFAQs, ...defaultFAQs];\n};\n\nconst FAQ = ({ selectedCity, selectedState, eggRates }) => {\n  const [openFAQ, setOpenFAQ] = useState(null);\n  const currentRate = eggRates.length > 0 ? eggRates[0].rate : 'N/A';\n  const trayPrice = currentRate !== 'N/A' ? (currentRate * 30).toFixed(2) : 'N/A';\n  \n  // Format date for display\n  const formattedDate = new Date().toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n  // Get the list of FAQs using the shared function\n  const faqList = generateFaqList(selectedCity, selectedState, currentRate, trayPrice, formattedDate);\n\n  const toggleFAQ = (index) => {\n    if (openFAQ === index) {\n      setOpenFAQ(null);\n    } else {\n      setOpenFAQ(index);\n    }\n  };\n  return (\n    <div className=\"p-6 mt-6 mx-auto bg-white shadow-lg rounded-lg\" id=\"faq-section\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Frequently Asked Questions</h2>\n      \n      {/* Note: FAQ Schema is now centralized and rendered only in MainPage.js */}\n      \n      <div className=\"divide-y divide-gray-200\">\n        {faqList.map((faq, index) => (\n          <div key={index} className=\"py-4\">\n            <button\n              className=\"flex justify-between items-center w-full text-left font-semibold text-gray-800 hover:text-blue-600 transition p-2 rounded-lg\"\n              onClick={() => toggleFAQ(index)}\n              aria-expanded={openFAQ === index}\n              aria-controls={`faq-answer-${index}`}\n            >\n              <span className=\"pr-8\">{faq.question}</span>\n              <svg\n                className={`w-5 h-5 transform transition-transform ${openFAQ === index ? \"rotate-180 text-blue-500\" : \"text-gray-500\"}`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n              </svg>\n            </button>\n            <div \n              id={`faq-answer-${index}`} \n              className={`mt-2 text-gray-700 px-2 overflow-hidden transition-all duration-300 ${openFAQ === index ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'}`}\n            >\n              <p className=\"pb-4\">{faq.answer}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FAQ;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, useLocation, matchPath } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport Navbar from '../components/layout/Navbar';\nimport RateTable from '../components/rates/RateTable';\nimport DefaultTable from '../components/rates/DefaultTable';\nimport Footer from '../components/layout/Footer';\nimport BodyOne from '../components/rates/BodyOne';\nimport BodyTwo from '../components/rates/BodyTwo';\nimport BodyThree from '../components/rates/BodyThree';\nimport StatePage from '../components/rates/StatePage';\nimport StateList from '../components/rates/StateList';\nimport SpecialRatesTable from '../components/rates/SpecialRatesTable';\nimport BlogList from '../components/blog/BlogList';\nimport FAQ, { generateFaqSchema } from '../components/common/FAQ';\nimport Breadcrumb from '../components/layout/Breadcrumb';\nimport blogs from '../data/blogs';\n\nconst MainPage = () => {\n  const { city: cityParam, state: stateParam } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedState, setSelectedState] = useState(stateParam ? stateParam.replace('-egg-rate', '') : '');\n  const [selectedCity, setSelectedCity] = useState(cityParam ? cityParam.replace('-egg-rate', '') : '');\n  const [eggRates, setEggRates] = useState([]);\n  const displayName = selectedCity ? selectedCity : selectedState ? selectedState : 'India';\n  \n  // Fetch states on mount\n  useEffect(() => {\n    fetch('/php/api/location/get_states.php')\n      .then(res => res.json())\n      .then(data => setStates(data))\n      .catch(error => console.error('Error fetching states:', error));\n  }, []);\n\n  // Fetch cities when a state is selected or when the URL changes\n  useEffect(() => {\n    if (selectedState) {\n      fetch(`/php/api/location/get_cities.php?state=${selectedState}`)\n        .then(res => res.json())\n        .then(data => setCities(data))\n        .catch(error => console.error('Error fetching cities:', error));\n    }\n  }, [selectedState]);\n\n  // Fetch state for the city from the URL\n  useEffect(() => {\n    if (cityParam) {\n      // Normalize city name for display (e.g., convert 'bengaluru' to 'Bengaluru')\n      const normalizedCity = cityParam.replace('-egg-rate', '');\n      let displayCity = normalizedCity.charAt(0).toUpperCase() + normalizedCity.slice(1);\n      \n      // Special handling for Bengaluru\n      if (displayCity.toLowerCase() === 'bengaluru') {\n        displayCity = 'Bengaluru';\n      }\n      \n      setSelectedCity(displayCity);\n      \n      fetch(`/php/api/location/get_state_for_city.php?city=${displayCity}`)\n        .then(res => res.json())\n        .then(data => {\n          if (data.state) {\n            setSelectedState(data.state);\n          }\n        })\n        .catch(error => console.error('Error fetching state for city:', error));\n    }\n  }, [cityParam]);\n\n  // Define handleFetchRates function\n  const handleFetchRates = useCallback(() => {\n    if (selectedCity && selectedState) {\n      // Fetch rates for selected city and state\n      fetch(`/php/api/rates/get_rates.php?city=${selectedCity}&state=${selectedState}`)\n        .then(res => res.json())\n        .then(data => {\n          const convertedData = data.map(item => ({\n            ...item,\n            rate: parseFloat(item.rate), // Convert rate to a number\n          }));\n          setEggRates(convertedData);\n        })\n        .catch(error => console.error('Error fetching rates:', error));\n    } else {\n      // Fetch latest rates when no city/state is selected\n      fetch(`/php/api/rates/get_latest_rates.php`)\n        .then(res => res.json())\n        .then(data => {\n          const convertedData = data.map(item => ({\n            ...item,\n            rate: parseFloat(item.rate), // Convert rate to a number\n          }));\n          setEggRates(convertedData);\n        })\n        .catch(error => console.error('Error fetching latest rates:', error));\n    }\n  }, [selectedCity, selectedState]);\n\n  // Fetch rates when component mounts or when city/state changes\n  useEffect(() => {\n    handleFetchRates();\n    // Disabling exhaustive deps warning as we only want to run this when these specific props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedState, selectedCity]);\n\n  // Check if the current URL matches /state/:state\n  const stateMatch = matchPath(\n    { path: '/state/:state' },\n    location.pathname\n  );\n\n  // This memoized function will be used to update URLs based on state changes\n  // but with navigation safeguards to prevent history errors\n  const updateURL = useCallback(() => {\n    // Current path without trailing slash for consistent comparison\n    const currentPath = location.pathname.endsWith('/') \n      ? location.pathname.slice(0, -1) \n      : location.pathname;\n    \n    // Only update URL when necessary to avoid redundant history entries\n    if (selectedCity && !currentPath.includes(`-egg-rate`)) {\n      const newPath = `/${selectedCity.toLowerCase()}-egg-rate`;\n      if (currentPath !== newPath) {\n        // Using replace: true to avoid stacking history entries\n        navigate(newPath, { replace: true });\n      }\n    } else if (selectedState && !selectedCity && !currentPath.includes(`-egg-rate`)) {\n      const newPath = `/state/${selectedState.toLowerCase()}-egg-rate`;\n      if (currentPath !== newPath) {\n        navigate(newPath, { replace: true });\n      }\n    }\n  }, [selectedCity, selectedState, navigate, location.pathname]);\n  \n  // Use a ref to track if we're currently processing a URL update\n  // to prevent competing updates\n  const isUpdatingRef = React.useRef(false);\n  \n  // Update URL with proper debouncing to prevent rapid changes\n  useEffect(() => {\n    // Skip if we're already processing an update\n    if (isUpdatingRef.current) return;\n    \n    isUpdatingRef.current = true;\n    const timeoutId = setTimeout(() => {\n      updateURL();\n      isUpdatingRef.current = false;\n    }, 50); // Slightly longer timeout for better batching\n    \n    return () => {\n      clearTimeout(timeoutId);\n      isUpdatingRef.current = false;\n    };\n  }, [updateURL]);\n\n  // Update selectedState and selectedCity when URL parameters change\n  useEffect(() => {\n    if (stateParam) {\n      const newState = stateParam.replace('-egg-rate', '');\n      if (selectedState !== newState) {\n        setSelectedState(newState);\n        setSelectedCity('');\n      }\n    }\n    if (cityParam) {\n      const newCity = cityParam.replace('-egg-rate', '');\n      if (selectedCity !== newCity) {\n        setSelectedCity(newCity);\n      }\n    }\n    if (!stateParam && !cityParam && (selectedState || selectedCity)) {\n      setSelectedCity('');\n      setSelectedState('');\n    }\n  }, [stateParam, cityParam, selectedState, selectedCity]);\n  \n  // Get formatted date for SEO\n  const formattedDate = new Date().toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n  \n  // Get current rate and tray price\n  const currentRate = eggRates.length > 0 ? eggRates[0].rate : 'N/A';\n  const trayPrice = currentRate !== 'N/A' ? (currentRate * 30).toFixed(2) : 'N/A';\n  \n  // Prepare structured data for search engines\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Product\",\n    \"name\": `Eggs in ${displayName}`,\n    \"description\": `Latest egg rates in ${displayName}. Check today's egg prices updated on ${formattedDate}. Single egg price: ₹${currentRate}, Tray (30 eggs) price: ₹${trayPrice}`,\n    \"offers\": {\n      \"@type\": \"AggregateOffer\",\n      \"priceCurrency\": \"INR\",\n      \"lowPrice\": currentRate,\n      \"highPrice\": trayPrice,\n      \"priceValidUntil\": new Date(new Date().setDate(new Date().getDate() + 1)).toISOString().split('T')[0],\n      \"availability\": \"https://schema.org/InStock\"\n    }\n  };\n    // We'll get FAQ data from the FAQ component instead of duplicating it here\n  \n  // Create SEO title and description based on location  \n  const getSeoTitle = () => {\n    if (selectedCity) {\n      return `${selectedCity} Egg Rate Today - ₹${currentRate} (${formattedDate}) | NECC Egg Price`;\n    } else if (selectedState) {\n      return `${selectedState} Egg Rates Today: State-wide NECC Price List (${formattedDate})`;\n    } else {\n      return `Today's Egg Rate: Check NECC Egg Prices Across India (${formattedDate})`;\n    }\n  };\n\n  const getSeoDescription = () => {\n    if (selectedCity) {\n      const trayPrice = currentRate !== 'N/A' ? (currentRate * 30).toFixed(2) : 'N/A';\n      return `Current egg rate in ${selectedCity}, ${selectedState}: ₹${currentRate}/egg, ₹${trayPrice}/tray (30 eggs). Check latest NECC egg price in ${selectedCity} updated on ${formattedDate}. Live updates and market analysis.`;\n    } else if (selectedState) {\n      return `Today's egg rate in ${selectedState}: Get latest NECC egg prices and daily market updates from all major cities in ${selectedState}. Compare wholesale and retail egg rates updated on ${formattedDate}.`;\n    } else {\n      return `Check today's egg rates across India. Daily updated NECC egg prices from Mumbai, Chennai, Bangalore, Kolkata, Barwala & 100+ cities. Compare wholesale & retail egg prices (${formattedDate}).`;\n    }\n  };\n\n  const getSeoKeywords = () => {\n    if (selectedCity) {\n      return `${selectedCity.toLowerCase()} egg rate today, ${selectedState.toLowerCase()} egg price, egg rate in ${selectedCity.toLowerCase()}, ${selectedCity.toLowerCase()} egg price today, necc egg rate in ${selectedCity.toLowerCase()}`;\n    } else if (selectedState) {\n      return `${selectedState.toLowerCase()} egg rate, egg price in ${selectedState.toLowerCase()}, today egg rate in ${selectedState.toLowerCase()}, ${selectedState.toLowerCase()} egg price today, necc egg rate in ${selectedState.toLowerCase()}`;\n    } else {\n      return 'egg rate today, necc egg rate today, today egg rate, egg rate, national egg rate, all india egg rate, today egg rate in mumbai, today egg rate in chennai, today egg rate kolkata, barwala egg rate today';\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{getSeoTitle()}</title>\n        <meta name=\"description\" content={getSeoDescription()} />\n        <meta name=\"keywords\" content={getSeoKeywords()} />\n        \n        {/* Canonical URL with proper handling */}\n        <link \n          rel=\"canonical\" \n          href={`https://todayeggrates.com${\n            location.pathname === '/' \n              ? '' \n              : location.pathname.endsWith('/') \n                ? location.pathname.slice(0, -1) \n                : location.pathname\n          }`} \n        />\n        \n        {/* Add structured data for rich snippets */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(structuredData)}\n        </script>\n          {/* Add FAQ structured data */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(generateFaqSchema(selectedCity, selectedState, eggRates))}\n        </script>\n        \n        {/* Add lastmod date for search engines */}\n        <meta property=\"article:modified_time\" content={new Date().toISOString()} />\n        \n        {/* Open Graph tags */}\n        <meta property=\"og:title\" content={getSeoTitle()} />\n        <meta property=\"og:description\" content={getSeoDescription()} />\n        <meta property=\"og:url\" content={`https://todayeggrates.com${location.pathname}`} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:image\" content=\"https://todayeggrates.com/eggpic.webp\" />\n        \n        {/* Twitter Card */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={getSeoTitle()} />\n        <meta name=\"twitter:description\" content={getSeoDescription()} />\n        <meta name=\"twitter:image\" content=\"https://todayeggrates.com/eggpic.webp\" />\n      </Helmet>\n      <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n        <Navbar\n          selectedState={selectedState}\n          setSelectedState={setSelectedState}\n          setSelectedCity={setSelectedCity}\n          selectedCity={selectedCity}\n          states={states}\n          cities={cities}\n        />\n        <div className=\"flex-grow p-4 md:p-8 lg:p-12\">\n          {/* Breadcrumb component */}\n          <div className=\"max-w-4xl mx-auto mb-4\">\n            <Breadcrumb />\n          </div>\n          \n          <BodyOne selectedCity={selectedCity} selectedState={selectedState} />\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            {stateMatch ? (\n              <StatePage />\n            ) : (\n              <>\n                {selectedCity && selectedState ? (\n                  <RateTable\n                    key={`${selectedCity}-${selectedState}`}\n                    selectedCity={selectedCity}\n                    selectedState={selectedState}\n                    eggRates={eggRates}\n                  />\n                ) : (\n                  <DefaultTable key=\"default-table\" eggRates={eggRates} />\n                )}\n              </>\n            )}\n            <StateList states={states} cities={cities} />\n            <SpecialRatesTable />\n          </div>\n          <BodyTwo selectedCity={selectedCity} selectedState={selectedState} />\n          <BlogList blogs={blogs} selectedCity={selectedCity} selectedState={selectedState} />\n          <BodyThree selectedCity={selectedCity} selectedState={selectedState} eggRates={eggRates} />\n          <FAQ selectedCity={selectedCity} selectedState={selectedState} eggRates={eggRates} />\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;"],"names":["_ref","blogs","selectedCity","selectedState","sortedBlogs","sort","a","b","Date","uploadDate","_jsxs","className","children","_jsx","Helmet","type","concat","map","blog","index","link","title","join","Link","to","src","image","alt","loading","width","height","description","dateTime","toLocaleDateString","year","month","day","loaded","setLoaded","useState","error","setError","imageLoaded","setImageLoaded","imgRef","useRef","dimensions","setDimensions","useEffect","img","Image","HTMLImageElement","prototype","onload","naturalWidth","naturalHeight","onerror","hasTailwindDimensions","test","aspectRatio","style","contain","paddingTop","ref","undefined","decoding","sizes","getSizes","includes","match","num","den","fetchpriority","toLowerCase","onLoad","current","transform","onError","e","target","willChange","Breadcrumb","pathSegments","useLocation","pathname","split","filter","segment","length","breadcrumbItems","name","path","position","currentPath","forEach","replace","charAt","toUpperCase","slice","word","push","breadcrumbSchema","item","_Fragment","JSON","stringify","Footer","getFullYear","href","rel","setSelectedCity","setSelectedState","options","setOptions","menuOpen","setMenuOpen","navigate","useNavigate","location","navigationLock","React","fetch","then","response","json","data","combinedOptions","stateSet","Set","citySet","state","has","value","label","add","city","cityName","cityLabel","catch","console","handleHomeClick","preventDefault","setTimeout","handleCityClick","onClick","OptimizedImage","nativeEvent","toggleMenu","FaTimes","size","FaBars","Select","find","option","onChange","selectedOption","selectedCityName","styles","control","base","_objectSpread","backgroundColor","borderColor","boxShadow","padding","borderRadius","menu","zIndex","placeholder","color","eggRates","RateTable","rates","showPriceColumns","showChart","chartType","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","LineElement","PointElement","xAxisKey","yAxisKey","showLine","chartData","labels","datasets","borderWidth","fill","tension","pointRadius","pointHoverRadius","responsive","maintainAspectRatio","plugins","legend","display","text","tooltip","callbacks","context","raw","toFixed","scales","y","beginAtZero","ticks","callback","ChartComponent","Line","Bar","_sortedRates$","_sortedRates$2","_sortedRates$3","itemsPerPage","showAdmin","showSpecialRates","onDelete","onEdit","handleSort","externalHandleSort","showState","showDate","currentPage","setCurrentPage","sortConfig","setSortConfig","key","direction","editingRate","setEditingRate","editedRate","setEditedRate","sortedRates","indexOfLastItem","indexOfFirstItem","currentItems","handleClick","event","Number","id","pages","i","Math","ceil","requestSort","handleLocalSort","handleSaveClick","handleCancelClick","handleChange","prevRate","latestRate","rate","previousRate","rateChange","percentageChange","trayPrice","latestRateDate","date","localBusinessSchema","setDate","getDate","toISOString","productSchema","parseFloat","handleEditClick","number","RateChart","states","cities","popularCities","popularStates","renderStateTableRows","rows","colSpan","renderCityTableRows","displayName","today","featuredWebStories","setFeaturedWebStories","showWebStories","setShowWebStories","shuffled","random","story","slug","thumbnail","todayRate","rate7DaysAgo","weeklyChange","weeklyChangePercent","averagePrice","reduce","sum","formatPrice","price","toDateString","StatePage","stateParam","useParams","averageRates","setAverageRates","setLoading","message","averageRate","SpecialRatesTable","specialRates","setSpecialRates","generateFaqSchema","currentRate","formattedDate","generateFaqList","faq","question","answer","openFAQ","setOpenFAQ","faqList","toggleFAQ","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","MainPage","cityParam","setStates","setCities","setEggRates","res","normalizedCity","displayCity","handleFetchRates","useCallback","convertedData","stateMatch","matchPath","updateURL","endsWith","newPath","isUpdatingRef","timeoutId","clearTimeout","newState","newCity","structuredData","getSeoTitle","getSeoDescription","content","property","Navbar","BodyOne","DefaultTable","StateList","BodyTwo","BlogList","BodyThree","FAQ"],"sourceRoot":""}