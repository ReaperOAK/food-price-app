{"version":3,"file":"static/js/chart-vendor.7c5c5953.chunk.js","mappings":"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","sources":["../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["noop","uid","id","isNullOrUndef","value","undefined","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","parts","split","tmp","part","push","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","isNumber","n","isNaN","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","arguments","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","isPatternOrGradient","color","Color","getHoverColor","saturate","darken","hexString","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","this","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","constructor","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","weight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","to","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","j","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","w","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","h","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","ret","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","parseInt","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","r","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","concat","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","p1","p2","_steppedInterpolation","_bezierInterpolation","cp1","cp2","c","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","l","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","transparent","interpolators","boolean","factor","c0","c1","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","ratio","inflateAmount","_defineProperty","BarController","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","currentParsed","iScaleValue","skipNull","find","val","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","proto","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_objectSpread","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","_ref8","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","getDatasetAtEvent","nativeEvent","getElementAtEvent","getElementsAtEvent","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","_objectWithoutProperties","_excluded","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line","Bar","Radar","Doughnut","PolarArea","Bubble","Pie","Scatter"],"sourceRoot":""}