{"version":3,"file":"static/js/180.af711c17.chunk.js","mappings":"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","sources":["components/blog/BlogList.js","components/layout/Breadcrumb.js","components/layout/Footer.js","components/layout/Navbar.js","components/blog/TableOfContents.js","pages/BlogPage.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nconst BlogList = ({ blogs, selectedCity, selectedState }) => {\n  // Sort blogs by upload date (newest first)\n  const sortedBlogs = [...blogs].sort((a, b) => \n    new Date(b.uploadDate) - new Date(a.uploadDate)\n  );\n\n  // Create keyword-rich heading based on the current page context\n  const getContextHeading = () => {\n    if (selectedCity) {\n      return `Egg Rate Articles & Insights for ${selectedCity}`;\n    } else if (selectedState) {\n      return `Egg Market Articles & Updates for ${selectedState}`;\n    } else {\n      return 'Latest Egg Rate Articles & Market Insights';\n    }\n  };\n\n  return (\n    <div className=\"mt-10 bg-white shadow-lg rounded-lg p-6\">\n      {/* Add schema.org structured data for blog listings */}\n      <Helmet>\n        <script type=\"application/ld+json\">{`\n          {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"ItemList\",\n            \"itemListElement\": [\n              ${sortedBlogs.map((blog, index) => `\n              {\n                \"@type\": \"ListItem\",\n                \"position\": ${index + 1},\n                \"url\": \"https://todayeggrates.com/blog/${blog.link}\",\n                \"name\": \"${blog.title}\"\n              }\n              `).join(',')}\n            ]\n          }\n        `}</script>\n      </Helmet>\n      \n      <h2 className=\"text-2xl font-bold mb-6 text-gray-800 text-center\">\n        {getContextHeading()}\n      </h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {sortedBlogs.map((blog, index) => (\n          <div key={index} className=\"bg-gray-50 rounded-lg overflow-hidden shadow transition-transform hover:scale-105\">\n            <Link to={`/blog/${blog.link}`} className=\"block\">\n              <img \n                src={blog.image} \n                alt={blog.title} \n                className=\"w-full h-48 object-cover\"\n                loading={index < 3 ? \"eager\" : \"lazy\"}\n              />\n              <div className=\"p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">{blog.title}</h3>\n                <p className=\"text-gray-600 text-sm mb-3\">{blog.description}</p>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-blue-600 font-medium text-sm\">Read more</span>\n                  <time dateTime={blog.uploadDate} className=\"text-gray-500 text-sm\">\n                    {new Date(blog.uploadDate).toLocaleDateString('en-US', {\n                      year: 'numeric',\n                      month: 'short',\n                      day: 'numeric'\n                    })}\n                  </time>\n                </div>\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n      \n      {/* Add contextual internal linking section */}\n      {(selectedCity || selectedState) && (\n        <div className=\"mt-8 p-4 bg-blue-50 rounded-lg\">\n          <h3 className=\"text-lg font-semibold text-blue-800 mb-2\">Related Egg Rate Resources</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <h4 className=\"font-medium text-blue-700 mb-1\">Popular Cities</h4>\n              <ul className=\"list-disc pl-5 text-blue-600\">\n                <li><Link to=\"/mumbai-egg-rate\" className=\"hover:underline\">Mumbai Egg Rate</Link></li>\n                <li><Link to=\"/delhi-egg-rate\" className=\"hover:underline\">Delhi Egg Rate</Link></li>\n                <li><Link to=\"/hyderabad-egg-rate\" className=\"hover:underline\">Hyderabad Egg Rate</Link></li>\n                <li><Link to=\"/barwala-egg-rate\" className=\"hover:underline\">Barwala Egg Rate</Link></li>\n                <li><Link to=\"/bengaluru-egg-rate\" className=\"hover:underline\">Bengaluru Egg Rate</Link></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-blue-700 mb-1\">Market Resources</h4>\n              <ul className=\"list-disc pl-5 text-blue-600\">\n                <li><Link to=\"/webstories\" className=\"hover:underline\">Egg Rate Web Stories</Link></li>\n                <li><Link to=\"/blog/egg-rate-barwala\" className=\"hover:underline\">Barwala Market Analysis</Link></li>\n                <li><Link to=\"/blog/blog-1\" className=\"hover:underline\">Understanding Today's Egg Rates</Link></li>\n                <li><Link to=\"/blog/blog-2\" className=\"hover:underline\">Egg Rate Trends in India</Link></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlogList;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nconst Breadcrumb = () => {\n  const location = useLocation();\n  const pathSegments = location.pathname.split('/').filter(segment => segment !== '');\n  \n  // Skip rendering if we're on the homepage\n  if (pathSegments.length === 0) {\n    return null;\n  }\n  \n  // Generate breadcrumb items\n  const breadcrumbItems = [\n    {\n      name: 'Home',\n      path: '/',\n      position: 1\n    }\n  ];\n  \n  // Build the breadcrumb path segments\n  let currentPath = '';\n  pathSegments.forEach((segment, index) => {\n    currentPath += `/${segment}`;\n    \n    // Format the segment name to be more readable\n    let name = segment;\n    \n    // Handle special cases\n    if (segment.includes('-egg-rate')) {\n      name = segment.replace('-egg-rate', '');\n      name = name.charAt(0).toUpperCase() + name.slice(1) + ' Egg Rate';\n    } else if (segment === 'blog' && index === 0) {\n      name = 'Blog';\n    } else if (segment === 'state' && index === 0) {\n      name = 'States';\n    } else if (segment === 'webstories') {\n      name = 'Web Stories';\n    } else {\n      // Capitalize and replace hyphens with spaces for other segments\n      name = segment\n        .split('-')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n    }\n    \n    breadcrumbItems.push({\n      name,\n      path: currentPath,\n      position: index + 2\n    });\n  });\n  \n  // Create schema for breadcrumbs\n  const breadcrumbSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": breadcrumbItems.map(item => ({\n      \"@type\": \"ListItem\",\n      \"position\": item.position,\n      \"name\": item.name,\n      \"item\": `https://todayeggrates.com${item.path}`\n    }))\n  };\n  \n  return (\n    <>\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(breadcrumbSchema)}\n        </script>\n      </Helmet>\n      \n      <nav className=\"flex mb-5 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\n          {breadcrumbItems.map((item, index) => (\n            <li key={index} className=\"inline-flex items-center\">\n              {index > 0 && (\n                <span className=\"mx-2 text-gray-500\">/</span>\n              )}\n              \n              {index === breadcrumbItems.length - 1 ? (\n                <span className=\"text-gray-700 font-medium\" aria-current=\"page\">\n                  {item.name}\n                </span>\n              ) : (\n                <Link \n                  to={item.path} \n                  className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                >\n                  {item.name}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ol>\n      </nav>\n    </>\n  );\n};\n\nexport default Breadcrumb;","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"bg-[#422C18] text-white p-6 mt-8\">\n      <div className=\"container mx-auto flex flex-col md:flex-row justify-between items-center\">\n        <div className=\"mb-4 md:mb-0\">\n          <p className=\"text-center md:text-left\">\n            © {new Date().getFullYear()} todayEggRates. All Rights Reserved.\n          </p>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:space-x-6\">\n        <a\n            href=\"/disclaimer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Disclaimer\n          </a>\n          <a\n            href=\"/privacy\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300 mb-2 md:mb-0\"\n          >\n            Privacy Policy\n          </a>\n          <a\n            href=\"/terms\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Terms of Service\n          </a>\n        </div>\n      </div>\n      <div className=\"mt-6 text-center\">\n        <p className=\"text-[#C4A484] text-sm\">\n          Follow us on{\" \"}\n          <a\n            href=\"https://www.facebook.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Facebook\n          </a>\n          ,{\" \"}\n          <a\n            href=\"https://www.twitter.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Twitter\n          </a>\n          ,{\" \"}\n          <a\n            href=\"https://www.instagram.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Instagram\n          </a>\n          .\n        </p>\n        <br/>\n        <p>Made with &#10084; by <a href=\"https://www.instagram.com/being._owais/profilecard/?igsh=MWo5Nm45cjFuNzVobA==\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:underline\">Owais Khan</a></p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport Select from 'react-select';\nimport { FaBars, FaTimes } from 'react-icons/fa';\n\nconst Navbar = ({ setSelectedCity, setSelectedState, selectedCity, selectedState }) => {\n  const [options, setOptions] = useState([]);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Track navigation lock to prevent redundant navigations\n  const navigationLock = React.useRef(false);\n\n  useEffect(() => {\n    fetch('/php/api/location/get_states_and_cities.php')\n      .then(response => response.json())\n      .then(data => {\n        const combinedOptions = [];\n        const stateSet = new Set();\n        const citySet = new Set();\n        \n        for (const state in data) {\n          if (!stateSet.has(state)) {\n            combinedOptions.push({\n              value: state,\n              label: state,\n              type: 'state',\n            });\n            stateSet.add(state);\n          }\n          \n          data[state].forEach(city => {\n            // Standardize city names\n            let cityName = city;\n            // Case-insensitive check for bengaluru/bangalore variants\n            if (cityName.toLowerCase() === 'bangalore' || \n                cityName.toLowerCase() === 'bangalore (cc)' || \n                cityName.toLowerCase() === 'bengaluru (cc)' ||\n                cityName.toLowerCase() === 'bengaluru') {\n              cityName = 'Bengaluru'; // Always use this capitalization\n            }\n            \n            const cityLabel = `${cityName}, ${state}`;\n            if (!citySet.has(cityLabel)) {\n              combinedOptions.push({\n                value: cityName,\n                label: cityLabel,\n                type: 'city',\n              });\n              citySet.add(cityLabel);\n            }\n          });\n        }\n        setOptions(combinedOptions);\n      })\n      .catch(error => console.error('Error fetching states and cities:', error));\n  }, []);\n\n  const handleChange = (selectedOption) => {\n    if (!selectedOption || navigationLock.current) return;\n    \n    navigationLock.current = true;\n    const { type, label } = selectedOption;\n    \n    if (type === 'city') {\n      const [city, state] = label.split(', ');\n      let selectedCityName = city;\n      \n      // Case-insensitive check for bengaluru/bangalore variants\n      if (selectedCityName.toLowerCase() === 'bangalore' || \n          selectedCityName.toLowerCase() === 'bangalore (cc)' || \n          selectedCityName.toLowerCase() === 'bengaluru (cc)' ||\n          selectedCityName.toLowerCase() === 'bengaluru') {\n        selectedCityName = 'Bengaluru'; // Always use this capitalization\n      }\n      \n      // Update states first\n      setSelectedCity(selectedCityName);\n      setSelectedState(state);\n      \n      // Then navigate with a slight delay\n      setTimeout(() => {\n        const path = `/${selectedCityName.toLowerCase()}-egg-rate`;\n        \n        // Only navigate if we're not already on this path\n        if (location.pathname !== path) {\n          navigate(path, { replace: true });\n        }\n        \n        navigationLock.current = false;\n      }, 5);\n      \n    } else if (type === 'state') {\n      // Update states first\n      setSelectedCity('');\n      setSelectedState(label);\n      \n      // Then navigate with a slight delay\n      setTimeout(() => {\n        const path = `/state/${label.toLowerCase()}-egg-rate`;\n        \n        // Only navigate if we're not already on this path\n        if (location.pathname !== path) {\n          navigate(path, { replace: true });\n        }\n        \n        navigationLock.current = false;\n      }, 5);\n    }\n  };\n\n  const handleHomeClick = (e) => {\n    if (navigationLock.current) {\n      e.preventDefault();\n      return;\n    }\n    \n    navigationLock.current = true;\n    setSelectedCity('');\n    setSelectedState('');\n    \n    // Only navigate if we're not already on home\n    if (location.pathname !== '/') {\n      navigate('/');\n    }\n    \n    // Release lock after a short delay\n    setTimeout(() => {\n      navigationLock.current = false;\n    }, 5);\n  };\n\n  const handleCityClick = (city, e) => {\n    if (navigationLock.current) {\n      e?.preventDefault();\n      return;\n    }\n    \n    navigationLock.current = true;\n    // Update state first\n    setSelectedCity(city);\n    setSelectedState('');\n    \n    // Then navigate with a slight delay\n    setTimeout(() => {\n      const path = `/${city.toLowerCase()}-egg-rate`;\n      \n      // Only navigate if we're not already on this path\n      if (location.pathname !== path) {\n        navigate(path, { replace: true });\n      }\n      \n      navigationLock.current = false;\n    }, 5);\n  };\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  const handleLogoError = (e) => {\n    console.error('Error loading logo:', e.nativeEvent);\n    console.error('Error target:', e.target);\n    e.target.src = '/tee.avif'; // Fallback image\n  };\n\n  return (\n    <nav className=\"bg-white p-4 shadow-lg\">\n      <div className=\"container mx-auto flex flex-col md:flex-row justify-between items-center\">\n        <div className=\"flex justify-between items-center w-full md:w-auto\">\n          <Link to=\"/\" onClick={handleHomeClick} className=\"mb-4 md:mb-0\">\n            <img src=\"/tee.png\" alt=\"Today Egg Rates Logo\" className=\"h-10\" onError={handleLogoError} />\n          </Link>\n          <button\n            className=\"md:hidden text-gray-800 focus:outline-none\"\n            onClick={toggleMenu}\n          >\n            {menuOpen ? <FaTimes size={24} /> : <FaBars size={24} />}\n          </button>\n        </div>\n        <div\n          className={`${\n            menuOpen ? 'block' : 'hidden'\n          } md:flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-4 mb-4 md:mb-0 w-full md:w-auto`}\n        >\n          <div className=\"flex flex-col space-y-2 md:space-y-0 md:flex-row md:space-x-4\">\n            <Link\n              to=\"/\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={handleHomeClick}\n            >\n              Home\n            </Link>\n            <Link\n              to=\"/mumbai-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Mumbai', e)}\n            >\n              Mumbai\n            </Link>\n            <Link\n              to=\"/kolkata-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Kolkata', e)}\n            >\n              Kolkata\n            </Link>\n            <Link\n              to=\"/luknow-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('luknow', e)}\n            >\n              lucknow\n            </Link>\n            <Link\n              to=\"/barwala-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Barwala', e)}\n            >\n              Barwala\n            </Link>\n            <Link\n              to=\"/hyderabad-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Hyderabad', e)}\n            >\n              Hyderabad\n            </Link>\n            <Link\n              to=\"/chennai-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Chennai', e)}\n            >\n              Chennai\n            </Link>\n            <Link\n              to=\"/webstories\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n            >\n              Web Stories\n            </Link>\n          </div>\n        </div>\n        <div className=\"w-full md:w-64\">\n          <Select\n            value={options.find(option => option.value === (selectedCity || selectedState))}\n            onChange={handleChange}\n            options={options}\n            className=\"w-full\"\n            styles={{\n              control: (base) => ({\n                ...base,\n                backgroundColor: 'white',\n                borderColor: 'transparent',\n                boxShadow: 'none',\n                '&:hover': {\n                  borderColor: 'transparent',\n                },\n                padding: '0.5rem', // Add padding for better touch target\n                borderRadius: '0.375rem', // Tailwind rounded\n              }),\n              menu: (base) => ({\n                ...base,\n                zIndex: 9999,\n              }),\n              placeholder: (base) => ({\n                ...base,\n                color: '#A0AEC0', // Placeholder color for better contrast\n              }),\n            }}\n            placeholder=\"Select City, State\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React, { useEffect, useState } from 'react';\n\nconst TableOfContents = ({ contentId, blogId, isSticky = false }) => {\n  const [headings, setHeadings] = useState([]);\n  const [activeId, setActiveId] = useState('');\n  const [isCollapsed, setIsCollapsed] = useState(false);\n\n  useEffect(() => {\n    const contentElement = document.getElementById(contentId);\n    if (!contentElement) return;\n    \n    // Get all h2 and h3 elements from the content\n    const elements = contentElement.querySelectorAll('h2, h3');\n    \n    // Add ids to elements that don't have them based on blogId and text\n    elements.forEach((element, index) => {\n      if (!element.id) {\n        const slugifiedText = element.innerText\n          .toLowerCase()\n          .replace(/[^\\w ]+/g, '')\n          .replace(/ +/g, '-');\n        element.id = `${blogId}-heading-${slugifiedText}`;\n      }\n    });\n    \n    const headingElements = Array.from(elements).map(element => ({\n      id: element.id,\n      text: element.innerText,\n      level: element.tagName === 'H2' ? 2 : 3\n    }));\n    \n    setHeadings(headingElements);\n\n    // Set up IntersectionObserver to track active heading\n    const observer = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            setActiveId(entry.target.id);\n          }\n        });\n      },\n      { rootMargin: '0px 0px -80% 0px' }\n    );\n\n    // Observe all heading elements\n    elements.forEach(element => observer.observe(element));\n\n    return () => observer.disconnect();\n  }, [contentId, blogId]);\n\n  const scrollToHeading = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      window.scrollTo({\n        top: element.offsetTop - 100,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  const toggleCollapse = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  if (headings.length === 0) return null;\n\n  return (\n    <div className={`toc-container bg-white p-4 rounded-lg shadow-md mb-6 ${isSticky ? 'sticky top-24' : ''}`}>\n      <div className=\"flex justify-between items-center cursor-pointer\" onClick={toggleCollapse}>\n        <h2 className=\"text-xl font-bold text-gray-800\">Table of Contents</h2>\n        <button \n          aria-label={isCollapsed ? \"Expand\" : \"Collapse\"} \n          className=\"text-gray-600 hover:text-blue-600 focus:outline-none\"\n        >\n          <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            className={`h-5 w-5 transform transition-transform ${isCollapsed ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            viewBox=\"0 0 24 24\" \n            stroke=\"currentColor\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={isCollapsed ? \"M19 9l-7 7-7-7\" : \"M5 15l7-7 7 7\"} />\n          </svg>\n        </button>\n      </div>\n      \n      {!isCollapsed && (\n        <ul className=\"space-y-2 mt-3\">\n          {headings.map((heading) => (\n            <li \n              key={heading.id}\n              className={`toc-item ${heading.level === 3 ? 'ml-4' : ''}`}\n            >\n              <a\n                href={`#${heading.id}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  scrollToHeading(heading.id);\n                }}\n                className={`block text-${heading.level === 2 ? 'md' : 'sm'} ${\n                  activeId === heading.id\n                    ? 'text-blue-600 font-semibold'\n                    : 'text-gray-700 hover:text-blue-600'\n                } transition-colors duration-200`}\n              >\n                {heading.text}\n              </a>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default TableOfContents;","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport Navbar from '../components/layout/Navbar';\nimport Footer from '../components/layout/Footer';\nimport blogs from '../data/blogs'; \nimport BlogList from '../components/blog/BlogList';\nimport Breadcrumb from '../components/layout/Breadcrumb';\nimport TableOfContents from '../components/blog/TableOfContents';\n\n// Pre-define the import mapping for webpack to analyze\nconst blogComponentMap = {\n  'egg-rate-barwala': () => import('../pages/blogs/egg-rate-barwala'),\n  'blog-1': () => import('../pages/blogs/blog-1'),\n  'blog-2': () => import('../pages/blogs/blog-2'),\n  // Add any future blog links here\n};\n\nconst BlogPage = () => {\n  const { link } = useParams();\n  const blog = blogs.find((b) => b.link === link);\n  const [ContentComponent, setContentComponent] = useState(null);\n  \n  // Format the date for schema\n  const formattedDate = blog ? new Date(blog.uploadDate).toISOString() : new Date().toISOString();\n  \n  // Generate related articles links based on current blog tags\n  const relatedBlogs = blog ? blogs.filter(b => \n    b.link !== link && \n    b.tags && blog.tags && \n    b.tags.some(tag => blog.tags.includes(tag))\n  ).slice(0, 3) : [];\n\n  useEffect(() => {\n    if (blog && blogComponentMap[blog.link]) {\n      blogComponentMap[blog.link]()\n        .then((module) => {\n          setContentComponent(() => module.default);\n        })\n        .catch((error) => {\n          console.error(\"Error loading content component:\", error);\n        });\n    }\n  }, [blog]);\n\n  if (!blog) {\n    return <div>Blog not found</div>;\n  }\n\n  // Filter out the current blog from the list of blogs\n  const otherBlogs = blogs.filter((b) => b.link !== link);\n  \n  // Create article schema\n  const articleSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BlogPosting\",\n    \"mainEntityOfPage\": {\n      \"@type\": \"WebPage\",\n      \"@id\": `https://todayeggrates.com/blog/${blog.link}`\n    },\n    \"headline\": blog.title,\n    \"description\": blog.description,\n    \"image\": blog.image,\n    \"author\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Today Egg Rates\",\n      \"url\": \"https://todayeggrates.com\"\n    },\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Today Egg Rates\",\n      \"logo\": {\n        \"@type\": \"ImageObject\",\n        \"url\": \"https://todayeggrates.com/eggpic.png\"\n      }\n    },\n    \"datePublished\": formattedDate,\n    \"dateModified\": formattedDate\n  };\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n      <Helmet>\n        <title>{blog.title} - Today Egg Rates</title>\n        <meta name=\"description\" content={blog.description} />\n        <meta name=\"keywords\" content={blog.tags ? blog.tags.join(', ') : 'egg rate, egg price, NECC egg rate'} />\n        <link rel=\"canonical\" href={`https://todayeggrates.com/blog/${blog.link}`} />\n        \n        {/* Article Schema */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(articleSchema)}\n        </script>\n        \n        {/* Open Graph Tags */}\n        <meta property=\"og:title\" content={blog.title} />\n        <meta property=\"og:description\" content={blog.description} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:url\" content={`https://todayeggrates.com/blog/${blog.link}`} />\n        <meta property=\"og:image\" content={blog.image} />\n        <meta property=\"article:published_time\" content={formattedDate} />\n        <meta property=\"article:modified_time\" content={formattedDate} />\n        \n        {/* Twitter Card */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={blog.title} />\n        <meta name=\"twitter:description\" content={blog.description} />\n        <meta name=\"twitter:image\" content={blog.image} />\n      </Helmet>\n      \n      <Navbar />\n      \n      <div className=\"flex-grow p-4 md:p-8 lg:p-12\">\n        {/* Breadcrumb */}\n        <div className=\"max-w-4xl mx-auto mb-4\">\n          <Breadcrumb />\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n          {/* Blog Header */}\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-800 mb-4\">{blog.title}</h1>\n            <div className=\"flex items-center text-sm text-gray-600 mb-6\">\n              <time dateTime={blog.uploadDate}>\n                {new Date(blog.uploadDate).toLocaleDateString('en-US', {\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </time>\n              <span className=\"mx-2\">•</span>\n              <span>Today Egg Rates</span>\n            </div>\n            <img \n              src={blog.image} \n              alt={blog.title} \n              className=\"w-full h-auto rounded-lg mb-6 object-cover\"\n              width=\"800\"\n              height=\"400\"\n            />\n          </div>\n          \n          {/* Table of Contents - only show for longer posts */}\n          {ContentComponent && <TableOfContents \n            key={blog.link} \n            contentId=\"blog-content\" \n            blogId={blog.link} \n            isSticky={false} \n          />}\n          \n          {/* Blog Content */}\n          <div id=\"blog-content\">\n            {ContentComponent ? <ContentComponent /> : <p>Loading content...</p>}\n          </div>\n          \n          {/* Tags */}\n          {blog.tags && blog.tags.length > 0 && (\n            <div className=\"mt-8 pt-4 border-t border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Tags</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {blog.tags.map(tag => (\n                  <span \n                    key={tag}\n                    className=\"px-3 py-1 bg-gray-100 rounded-full text-sm text-gray-600\"\n                  >\n                    {tag}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {/* Related Articles */}\n          {relatedBlogs.length > 0 && (\n            <div className=\"mt-8 pt-4 border-t border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">Related Articles</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {relatedBlogs.map(relatedBlog => (\n                  <Link \n                    key={relatedBlog.link} \n                    to={`/blog/${relatedBlog.link}`}\n                    className=\"block p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition\"\n                  >\n                    <h4 className=\"font-medium text-blue-700\">{relatedBlog.title}</h4>\n                    <p className=\"text-sm text-gray-600 mt-1 line-clamp-2\">{relatedBlog.description}</p>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <BlogList blogs={otherBlogs} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default BlogPage;"],"names":["_ref","blogs","selectedCity","selectedState","sortedBlogs","sort","a","b","Date","uploadDate","_jsxs","className","children","_jsx","Helmet","type","concat","map","blog","index","link","title","join","Link","to","src","image","alt","loading","description","dateTime","toLocaleDateString","year","month","day","Breadcrumb","pathSegments","useLocation","pathname","split","filter","segment","length","breadcrumbItems","name","path","position","currentPath","forEach","includes","replace","charAt","toUpperCase","slice","word","push","breadcrumbSchema","item","_Fragment","JSON","stringify","Footer","getFullYear","href","target","rel","setSelectedCity","setSelectedState","options","setOptions","useState","menuOpen","setMenuOpen","navigate","useNavigate","location","navigationLock","React","useEffect","fetch","then","response","json","data","combinedOptions","stateSet","Set","citySet","state","has","value","label","add","city","cityName","toLowerCase","cityLabel","catch","error","console","handleHomeClick","e","current","preventDefault","setTimeout","handleCityClick","onClick","onError","nativeEvent","toggleMenu","FaTimes","size","FaBars","Select","find","option","onChange","selectedOption","selectedCityName","styles","control","base","_objectSpread","backgroundColor","borderColor","boxShadow","padding","borderRadius","menu","zIndex","placeholder","color","contentId","blogId","isSticky","headings","setHeadings","activeId","setActiveId","isCollapsed","setIsCollapsed","contentElement","document","getElementById","elements","querySelectorAll","element","id","slugifiedText","innerText","headingElements","Array","from","text","level","tagName","observer","IntersectionObserver","entries","entry","isIntersecting","rootMargin","observe","disconnect","toggleCollapse","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","heading","window","scrollTo","top","offsetTop","behavior","scrollToHeading","blogComponentMap","egg-rate-barwala","blog-1","blog-2","BlogPage","useParams","ContentComponent","setContentComponent","formattedDate","toISOString","relatedBlogs","tags","some","tag","module","default","otherBlogs","articleSchema","content","property","Navbar","width","height","TableOfContents","relatedBlog","BlogList"],"sourceRoot":""}