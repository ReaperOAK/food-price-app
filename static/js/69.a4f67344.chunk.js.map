{"version":3,"file":"static/js/69.a4f67344.chunk.js","mappings":"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","sources":["utils/ScrollToTop.js","components/layout/RootLayout.js","App.js","data/blogs.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useLocation, useNavigationType } from 'react-router-dom';\n\n/**\n * ScrollRestoration component that safely handles scrolling with createBrowserRouter\n * Compatible with React Router v6.4+ using RouterProvider\n */\nconst ScrollToTop = () => {\n  const { pathname, hash } = useLocation();\n  const navigationType = useNavigationType();\n\n  useEffect(() => {\n    // Only scroll to top for PUSH navigation types (not REPLACE or POP)\n    // and when there's no hash fragment\n    if (!hash && navigationType === 'PUSH') {\n      window.scrollTo(0, 0);\n    }\n    \n    // If there's a hash in the URL, scroll to the element with that ID\n    if (hash) {\n      // Small timeout to ensure DOM is ready\n      setTimeout(() => {\n        const id = hash.replace('#', '');\n        const element = document.getElementById(id);\n        if (element) {\n          element.scrollIntoView({ behavior: 'smooth' });\n        }\n      }, 10);\n    }\n  }, [pathname, hash, navigationType]);\n\n  return null;\n};\n\nexport default ScrollToTop;","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport ScrollToTop from '../../utils/ScrollToTop';\n\n/**\n * Root layout component that wraps all routes\n * Provides ScrollToTop functionality and any app-wide UI elements\n */\nconst RootLayout = () => {\n  return (\n    <>\n      <ScrollToTop />\n      <Outlet />\n    </>\n  );\n};\n\nexport default RootLayout;","import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport { \n  RouterProvider,\n  createBrowserRouter,\n  createRoutesFromElements,\n  Route,\n  Navigate\n} from 'react-router-dom';\n\n// Import the RootLayout component\nimport RootLayout from './components/layout/RootLayout';\n\n// Import non-lazy dependencies\nimport blogs from './data/blogs';\n\n// Use lazy loading for all pages to improve performance\nconst MainPage = lazy(() => import('./pages/MainPage'));\nconst PrivacyPolicy = lazy(() => import('./components/common/PrivacyPolicy'));\nconst TOS = lazy(() => import('./components/common/TOS'));\nconst Disclaimer = lazy(() => import('./components/common/Disclaimer'));\nconst AdminPage = lazy(() => import('./pages/AdminPage'));\nconst LoginPage = lazy(() => import('./components/admin/LoginPage'));\nconst BlogPage = lazy(() => import('./pages/BlogPage'));\nconst WebStoriesList = lazy(() => import('./components/webstories/WebStoriesList'));\nconst WebStoryViewer = lazy(() => import('./components/webstories/WebStoryViewer'));\n\n\n\n// Loading component for suspense fallback\nconst LoadingFallback = () => (\n  <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n    <div className=\"text-center\">\n      <h2 className=\"text-xl font-semibold text-blue-600 mb-2\">Loading...</h2>\n      <p className=\"text-gray-600\">Please wait while we fetch the content</p>\n    </div>\n  </div>\n);\n\n// Static file redirects handled by plain HTML redirects\nconst StaticFileRedirect = ({ url }) => {\n  useEffect(() => {\n    window.location.replace(url);\n  }, [url]);\n  return null;\n};\n\n// Main App component\nfunction App() {\n  // Auth state management with localStorage persistence\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    return localStorage.getItem('isAuthenticated') === 'true';\n  });\n\n  const [isSiteDisabled, setIsSiteDisabled] = useState(() => {\n    return localStorage.getItem('isSiteDisabled') === 'true';\n  });\n\n  // Update localStorage when auth state changes\n  useEffect(() => {\n    localStorage.setItem('isAuthenticated', isAuthenticated);\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    localStorage.setItem('isSiteDisabled', isSiteDisabled);\n  }, [isSiteDisabled]);\n\n  // Maintenance page component\n  const MaintenancePage = () => (\n    <div className=\"flex items-center justify-center h-screen\">\n      <h1 className=\"text-3xl font-bold\">Site is under maintenance</h1>\n    </div>\n  );\n\n  // Disable site handler component\n  const DisableSite = () => {\n    const handleDisable = () => {\n      const token = new URLSearchParams(window.location.search).get('token');\n      if (token === 'ReaperOAK') {\n        setIsSiteDisabled(true);\n        return <Navigate to=\"/maintenance\" replace />;\n      }\n      return <Navigate to=\"/\" replace />;\n    };\n    \n    return handleDisable();\n  };\n\n  // Create routes based on site state\n  const routes = isSiteDisabled \n    ? createRoutesFromElements(\n        <Route path=\"*\" element={<MaintenancePage />} />\n      )\n    : createRoutesFromElements(\n        <Route element={<RootLayout />}>\n          <Route path=\"/\" element={<MainPage />} />\n          <Route path=\"/:city\" element={<MainPage />} />\n          <Route path=\"/state/:state\" element={<MainPage />} />\n          \n          {/* Static file redirects */}\n          <Route path=\"/sitemap.txt\" element={<StaticFileRedirect url=\"/sitemap.txt\" />} />\n          <Route path=\"/webstories-sitemap.xml\" element={<StaticFileRedirect url=\"/webstories-sitemap.xml\" />} />\n          <Route path=\"/robots.txt\" element={<StaticFileRedirect url=\"/robots.txt\" />} />\n          \n          {/* Legal pages */}\n          <Route path=\"/privacy\" element={<PrivacyPolicy />} />\n          <Route path=\"/terms\" element={<TOS />} />\n          <Route path=\"/disclaimer\" element={<Disclaimer />} />\n          \n          {/* Auth protected routes */}\n          <Route path=\"/login\" element={<LoginPage setIsAuthenticated={setIsAuthenticated} />} />\n          <Route\n            path=\"/admin/*\"\n            element={isAuthenticated ? <AdminPage setIsAuthenticated={setIsAuthenticated} /> : <Navigate to=\"/login\" replace />}\n          />\n          \n          {/* Content pages */}\n          <Route path=\"/blog/:link\" element={<BlogPage blogs={blogs} />} />\n          <Route path=\"/maintenance\" element={<MaintenancePage />} />\n          <Route path=\"/webstories\" element={<WebStoriesList />} />\n          <Route path=\"/webstory/:slug\" element={<WebStoryViewer />} />\n          <Route path=\"/disable-site\" element={<DisableSite />} />\n          \n          {/* 404 fallback */}\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Route>\n      );\n\n  // Create router with defined routes and options to prevent history errors\n  const router = createBrowserRouter(routes, {\n    // These options help prevent history errors\n    future: {\n      v7_normalizeFormMethod: true,\n    },\n    // Disable browser history debug mode\n    basename: \"\",\n  });\n\n  // Return router provider with suspense for code splitting\n  return (\n    <Suspense fallback={<LoadingFallback />}>\n      <RouterProvider router={router} />\n    </Suspense>\n  );\n}\n\nexport default App;","const blogs = [\n  {\n    link: 'egg-rate-barwala',\n    image: '/eggrate2.jpg',\n    title: 'Egg Prices in Barwala, Hisar(Haryana)',\n    description: 'Explore the Egg Economy of Barwalas, What Makes Barwala\\'s Eggs Special?, Seasonal Trends and Price Fluctuations',\n    uploadDate: '2025-01-11',\n  },\n  {\n    link: 'blog-1',\n    image: '/desiegg.jpg',\n    title: 'Understanding Today\\'s Egg Rates Across Major Indian Cities',\n    description: 'Explore the current egg rates in various cities, including Barwala, Hyderabad, Namakkal, Delhi, Mumbai, and more.',\n    uploadDate: '2024-10-01',\n  },\n  {\n    link: 'blog-2',\n    image: '/eggpic.png',\n    title: 'Understanding Egg Rates in India',\n    description: 'A comprehensive guide to understanding the factors that influence egg prices in India.',\n    uploadDate: '2024-10-03',\n  },\n  // Add more blog objects as needed\n];\n\nexport default blogs;"],"names":["ScrollToTop","pathname","hash","useLocation","navigationType","useNavigationType","useEffect","window","scrollTo","setTimeout","id","replace","element","document","getElementById","scrollIntoView","behavior","RootLayout","_jsxs","_Fragment","children","_jsx","Outlet","MainPage","lazy","PrivacyPolicy","TOS","Disclaimer","AdminPage","LoginPage","BlogPage","WebStoriesList","WebStoryViewer","LoadingFallback","className","StaticFileRedirect","_ref","url","location","isAuthenticated","setIsAuthenticated","useState","localStorage","getItem","isSiteDisabled","setIsSiteDisabled","setItem","MaintenancePage","DisableSite","URLSearchParams","search","get","Navigate","to","routes","createRoutesFromElements","Route","path","blogs","router","createBrowserRouter","future","v7_normalizeFormMethod","basename","Suspense","fallback","RouterProvider","link","image","title","description","uploadDate"],"sourceRoot":""}