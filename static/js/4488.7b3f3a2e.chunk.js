"use strict";(self.webpackChunkfood_price_app=self.webpackChunkfood_price_app||[]).push([[4488],{4488:(t,e,a)=>{a.d(e,{Hu:()=>l,I3:()=>h});var r=a(9379),o=a(3986);const n=["timeout","retries","cacheBust","useCache"],c=new Map,s=1e4,i=3,h=()=>{c.clear()},l=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{let a="/php/api/rates/get_latest_rates.php",h=(0,r.A)((0,r.A)({},e),{},{cacheBust:e.forceRefresh||!1,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t||[])});const l=await async function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{timeout:a=s,retries:h=i,cacheBust:l=!1,useCache:p=!0}=e,u=(0,o.A)(e,n);if(p&&!l){const e="".concat(t,"_").concat(JSON.stringify(u)),a=c.get(e);if(a&&Date.now()-a.timestamp<3e5)return a.data}let w=t;if(l){const e=t.includes("?")?"&":"?";w="".concat(t).concat(e,"nocache=").concat(Date.now(),"&t=").concat(Math.random())}let d=null;for(let o=0;o<h;o++)try{const e=new AbortController,o=setTimeout((()=>e.abort()),a),n=await fetch(w,(0,r.A)((0,r.A)({},u),{},{signal:e.signal,headers:(0,r.A)({"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"},u.headers)}));if(clearTimeout(o),!n.ok)throw new Error("HTTP ".concat(n.status,": ").concat(n.statusText));const s=await n.text();let i;try{i=JSON.parse(s)}catch(f){throw new Error("Invalid JSON response: ".concat(f.message,". Response: ").concat(s.substring(0,100)))}if(!Array.isArray(i)){if(i&&"object"===typeof i&&i.error)throw new Error(i.error);i=i?[i]:[]}if(p){const e="".concat(t,"_").concat(JSON.stringify(u));c.set(e,{data:i,timestamp:Date.now()})}return i}catch(m){if(d=m,"AbortError"===m.name||o===h-1)break;const t=1e3*Math.pow(2,o);await new Promise((e=>setTimeout(e,t)))}throw d}(a,h);return Array.isArray(l)?l.map((t=>{const e=parseFloat(t.rate);return{id:t.id||String(Math.random()),city:t.city||"Unknown",state:t.state||"Unknown",date:t.date||(new Date).toISOString().split("T")[0],rate:isNaN(e)?0:e}})):[]}catch(a){throw new Error("Failed to fetch latest rates: ".concat(a.message))}}}}]);