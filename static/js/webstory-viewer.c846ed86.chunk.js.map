{"version":3,"file":"static/js/webstory-viewer.c846ed86.chunk.js","mappings":"4MAMA,MAgJA,EAhJuBA,KACrB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,KAC5CK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,KAC1CO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,OAE3CS,EAAAA,EAAAA,YAAU,KACeC,WACrB,IACEX,GAAW,GAEX,MAAMY,QAAiBC,MAAM,4BAC7B,IAAKD,EAASE,GACZ,MAAM,IAAIC,MAAM,kCAElB,MACMC,SADaJ,EAASK,QACTC,MAAKC,GAAKA,EAAExB,OAASA,IAExC,IAAIqB,EAWF,MAAM,IAAID,MAAM,mBAVhBN,EAAaO,GACbT,EAAgBS,EAAMI,MACtBf,EAAiBW,EAAMK,OAIvB,WAD6BR,MAAM,eAADS,OAAgB3B,EAAI,SAAS,CAAE4B,OAAQ,UACrDT,GAClB,MAAM,IAAIC,MAAM,8BAKtB,CAAE,MAAOS,GACPC,QAAQvB,MAAM,4BAA6BsB,GAC3CrB,EAASqB,EAAIE,SAAW,2BAC1B,CAAC,QACC1B,GAAW,EACb,GAGF2B,EAAgB,GACf,CAAChC,IAqBJ,OAAII,GAEA6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACL5B,cAAeA,EACfC,iBAAkBA,EAClBE,gBAAiBA,EACjBD,aAAcA,KAEhByB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mEAAkEC,UAC/EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iFAEjBE,EAAAA,EAAAA,KAACE,EAAAA,EAAM,OAKT/B,GAEA0B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACL5B,cAAeA,EACfC,iBAAkBA,EAClBE,gBAAiBA,EACjBD,aAAcA,KAEhByB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,UAC9CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2EAA0EC,SAAA,EACvFC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,YAAWC,SAAC,aAC9BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,kBAAiBC,SAAE5B,KACnC6B,EAAAA,EAAAA,KAAA,UACEG,QAASA,IAAMrC,EAAS,eACxBgC,UAAU,4EAA2EC,SACtF,8BAKLC,EAAAA,EAAAA,KAACE,EAAAA,EAAM,QAMXL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,CA7DlDtB,GAEAoB,EAAAA,EAAAA,MAACO,EAAAA,EAAM,CAAAL,SAAA,EACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,GAAAR,OAAWd,EAAU4B,MAAK,yBAC1BL,EAAAA,EAAAA,KAAA,QAAMM,KAAK,cAAcC,QAAO,gCAAAhB,OAAkCd,EAAUY,KAAI,MAAAE,OAAKd,EAAUa,MAAK,2BAAAC,OAAqBd,EAAU+B,KAAI,uBAAAjB,OAAsBd,EAAUgC,KAAI,QAC3KT,EAAAA,EAAAA,KAAA,QAAMU,IAAI,YAAYC,KAAI,sCAAApB,OAAwCd,EAAUb,SAC5EoC,EAAAA,EAAAA,KAAA,QAAMY,SAAS,WAAWL,QAAS9B,EAAU4B,SAC7CL,EAAAA,EAAAA,KAAA,QAAMY,SAAS,iBAAiBL,QAAO,uBAAAhB,OAAyBd,EAAUY,KAAI,MAAAE,OAAKd,EAAUa,MAAK,YAAAC,OAAMd,EAAU+B,KAAI,eAAAjB,OAAcd,EAAUgC,KAAI,QAClJT,EAAAA,EAAAA,KAAA,QAAMY,SAAS,WAAWL,QAAO,4BAAAhB,OAA8Bd,EAAUoC,cACzEb,EAAAA,EAAAA,KAAA,QAAMY,SAAS,SAASL,QAAO,sCAAAhB,OAAwCd,EAAUb,SACjFoC,EAAAA,EAAAA,KAAA,QAAMY,SAAS,UAAUL,QAAQ,eAIhC,MAiDLP,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACL5B,cAAeA,EACfC,iBAAkBA,EAClBE,gBAAiBA,EACjBD,aAAcA,KAEhByB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA4BgB,MAAO,CAAEC,OAAQ,uBAAwBhB,UAClFC,EAAAA,EAAAA,KAAA,UACEgB,IAAG,eAAAzB,OAAiB3B,EAAI,SACxByC,MAAO5B,EAAYA,EAAU4B,MAAK,eAAAd,OAAkB3B,GACpDkC,UAAU,6CACVmB,iBAAe,EACfC,QAAQ,mFAGZrB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DC,SAAA,EACvEC,EAAAA,EAAAA,KAAA,UACEG,QAASA,IAAMrC,EAAS,eACxBgC,UAAU,uEAAsEC,SACjF,4BAGAtB,IACCoB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,oBAAmBC,SAAA,CAAC,SAAEtB,EAAU+B,KAAK,eAClDX,EAAAA,EAAAA,MAAA,KAAGC,UAAU,wBAAuBC,SAAA,CAAC,YAAUtB,EAAUgC,eAI/DT,EAAAA,EAAAA,KAACE,EAAAA,EAAM,MACH,C","sources":["components/webstories/WebStoryViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Navbar from '../layout/Navbar';\nimport Footer from '../layout/Footer';\nimport { Helmet } from 'react-helmet';\n\nconst WebStoryViewer = () => {\n  const { slug } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [storyData, setStoryData] = useState(null);\n\n  useEffect(() => {\n    const fetchStoryData = async () => {\n      try {\n        setLoading(true);\n        // First try to fetch the story data\n        const response = await fetch('/php/get_web_stories.php');\n        if (!response.ok) {\n          throw new Error('Failed to fetch web story data');\n        }\n        const data = await response.json();\n        const story = data.find(s => s.slug === slug);\n        \n        if (story) {\n          setStoryData(story);\n          setSelectedCity(story.city);\n          setSelectedState(story.state);\n          \n          // Then check if the story file exists\n          const storyFileCheck = await fetch(`/webstories/${slug}.html`, { method: 'HEAD' });\n          if (!storyFileCheck.ok) {\n            throw new Error('Web story content not found');\n          }\n        } else {\n          throw new Error('Story not found');\n        }\n      } catch (err) {\n        console.error('Error fetching web story:', err);\n        setError(err.message || 'Failed to load web story');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStoryData();\n  }, [slug]);\n\n  // If story data is available, set the metadata for SEO\n  const renderHelmet = () => {\n    if (storyData) {\n      return (\n        <Helmet>\n          <title>{`${storyData.title} - Today Egg Rates`}</title>\n          <meta name=\"description\" content={`View the latest egg rates in ${storyData.city}, ${storyData.state}. Current price: ₹${storyData.rate} per egg (Updated: ${storyData.date})`} />\n          <link rel=\"canonical\" href={`https://todayeggrates.com/webstory/${storyData.slug}`} />\n          <meta property=\"og:title\" content={storyData.title} />\n          <meta property=\"og:description\" content={`Current egg rate in ${storyData.city}, ${storyData.state}: ₹${storyData.rate} (Updated: ${storyData.date})`} />\n          <meta property=\"og:image\" content={`https://todayeggrates.com${storyData.thumbnail}`} />\n          <meta property=\"og:url\" content={`https://todayeggrates.com/webstory/${storyData.slug}`} />\n          <meta property=\"og:type\" content=\"article\" />\n        </Helmet>\n      );\n    }\n    return null;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n        <Navbar\n          selectedState={selectedState}\n          setSelectedState={setSelectedState}\n          setSelectedCity={setSelectedCity}\n          selectedCity={selectedCity}\n        />\n        <div className=\"container mx-auto p-6 flex-grow flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-blue-500\"></div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n        <Navbar\n          selectedState={selectedState}\n          setSelectedState={setSelectedState}\n          setSelectedCity={setSelectedCity}\n          selectedCity={selectedCity}\n        />\n        <div className=\"container mx-auto p-6 flex-grow\">\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\n            <strong className=\"font-bold\">Error: </strong>\n            <span className=\"block sm:inline\">{error}</span>\n            <button \n              onClick={() => navigate('/webstories')}\n              className=\"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              Back to Web Stories\n            </button>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n      {renderHelmet()}\n      <Navbar\n        selectedState={selectedState}\n        setSelectedState={setSelectedState}\n        setSelectedCity={setSelectedCity}\n        selectedCity={selectedCity}\n      />\n      <div className=\"flex-grow relative w-full\" style={{ height: 'calc(100vh - 140px)' }}>\n        <iframe \n          src={`/webstories/${slug}.html`}\n          title={storyData ? storyData.title : `Web Story - ${slug}`}\n          className=\"w-full h-full absolute inset-0 border-none\"\n          allowFullScreen\n          sandbox=\"allow-scripts allow-same-origin allow-popups allow-forms allow-presentation\"\n        ></iframe>\n      </div>\n      <div className=\"p-4 bg-white shadow-md flex justify-between items-center\">\n        <button \n          onClick={() => navigate('/webstories')}\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n        >\n          Back to All Web Stories\n        </button>\n        {storyData && (\n          <div className=\"text-right\">\n            <p className=\"font-bold text-lg\">₹{storyData.rate} per egg</p>\n            <p className=\"text-sm text-gray-600\">Updated: {storyData.date}</p>\n          </div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default WebStoryViewer;\n"],"names":["WebStoryViewer","slug","useParams","navigate","useNavigate","loading","setLoading","useState","error","setError","selectedState","setSelectedState","selectedCity","setSelectedCity","storyData","setStoryData","useEffect","async","response","fetch","ok","Error","story","json","find","s","city","state","concat","method","err","console","message","fetchStoryData","_jsxs","className","children","_jsx","Navbar","Footer","onClick","Helmet","title","name","content","rate","date","rel","href","property","thumbnail","style","height","src","allowFullScreen","sandbox"],"sourceRoot":""}