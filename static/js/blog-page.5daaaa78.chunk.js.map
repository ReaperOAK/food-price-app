{"version":3,"file":"static/js/blog-page.5daaaa78.chunk.js","mappings":"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","sources":["components/layout/Breadcrumb.js","pages/BlogPage.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nconst Breadcrumb = () => {\n  const location = useLocation();\n  const pathSegments = location.pathname.split('/').filter(segment => segment !== '');\n  \n  // Skip rendering if we're on the homepage\n  if (pathSegments.length === 0) {\n    return null;\n  }\n  \n  // Generate breadcrumb items\n  const breadcrumbItems = [\n    {\n      name: 'Home',\n      path: '/',\n      position: 1\n    }\n  ];\n  \n  // Build the breadcrumb path segments\n  let currentPath = '';\n  pathSegments.forEach((segment, index) => {\n    currentPath += `/${segment}`;\n    \n    // Format the segment name to be more readable\n    let name = segment;\n    \n    // Handle special cases\n    if (segment.includes('-egg-rate')) {\n      name = segment.replace('-egg-rate', '');\n      name = name.charAt(0).toUpperCase() + name.slice(1) + ' Egg Rate';\n    } else if (segment === 'blog' && index === 0) {\n      name = 'Blog';\n    } else if (segment === 'state' && index === 0) {\n      name = 'States';\n    } else if (segment === 'webstories') {\n      name = 'Web Stories';\n    } else {\n      // Capitalize and replace hyphens with spaces for other segments\n      name = segment\n        .split('-')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n    }\n    \n    breadcrumbItems.push({\n      name,\n      path: currentPath,\n      position: index + 2\n    });\n  });\n  \n  // Create schema for breadcrumbs\n  const breadcrumbSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": breadcrumbItems.map(item => ({\n      \"@type\": \"ListItem\",\n      \"position\": item.position,\n      \"name\": item.name,\n      \"item\": `https://todayeggrates.com${item.path}`\n    }))\n  };\n  \n  return (\n    <>\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(breadcrumbSchema)}\n        </script>\n      </Helmet>\n      \n      <nav className=\"flex mb-5 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\n          {breadcrumbItems.map((item, index) => (\n            <li key={index} className=\"inline-flex items-center\">\n              {index > 0 && (\n                <span className=\"mx-2 text-gray-500\">/</span>\n              )}\n              \n              {index === breadcrumbItems.length - 1 ? (\n                <span className=\"text-gray-700 font-medium\" aria-current=\"page\">\n                  {item.name}\n                </span>\n              ) : (\n                <Link \n                  to={item.path} \n                  className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                >\n                  {item.name}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ol>\n      </nav>\n    </>\n  );\n};\n\nexport default Breadcrumb;","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport Navbar from '../components/layout/Navbar';\nimport Footer from '../components/layout/Footer';\nimport blogs from '../data/blogs'; \nimport BlogList from '../components/blog/BlogList';\nimport Breadcrumb from '../components/layout/Breadcrumb';\nimport TableOfContents from '../components/blog/TableOfContents';\nimport OptimizedImage from '../components/common/OptimizedImage';\n\n// Pre-define the import mapping for webpack to analyze\nconst blogComponentMap = {\n  'egg-rate-barwala': () => import('../pages/blogs/egg-rate-barwala'),\n  'blog-1': () => import('../pages/blogs/blog-1'),\n  'blog-2': () => import('../pages/blogs/blog-2'),\n  // Add any future blog links here\n};\n\nconst BlogPage = () => {\n  const { link } = useParams();\n  const blog = blogs.find((b) => b.link === link);\n  const [ContentComponent, setContentComponent] = useState(null);\n  \n  // Format the date for schema\n  const formattedDate = blog ? new Date(blog.uploadDate).toISOString() : new Date().toISOString();\n  \n  // Generate related articles links based on current blog tags\n  const relatedBlogs = blog ? blogs.filter(b => \n    b.link !== link && \n    b.tags && blog.tags && \n    b.tags.some(tag => blog.tags.includes(tag))\n  ).slice(0, 3) : [];\n\n  useEffect(() => {\n    if (blog && blogComponentMap[blog.link]) {\n      blogComponentMap[blog.link]()\n        .then((module) => {\n          setContentComponent(() => module.default);\n        })\n        .catch((error) => {\n          console.error(\"Error loading content component:\", error);\n        });\n    }\n  }, [blog]);\n\n  if (!blog) {\n    return <div>Blog not found</div>;\n  }\n\n  // Filter out the current blog from the list of blogs\n  const otherBlogs = blogs.filter((b) => b.link !== link);\n  \n  // Create article schema\n  const articleSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BlogPosting\",\n    \"mainEntityOfPage\": {\n      \"@type\": \"WebPage\",\n      \"@id\": `https://todayeggrates.com/blog/${blog.link}`\n    },\n    \"headline\": blog.title,\n    \"description\": blog.description,\n    \"image\": blog.image,\n    \"author\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Today Egg Rates\",\n      \"url\": \"https://todayeggrates.com\"\n    },\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Today Egg Rates\",\n      \"logo\": {\n        \"@type\": \"ImageObject\",\n        \"url\": \"https://todayeggrates.com/eggpic.webp\"\n      }\n    },\n    \"datePublished\": formattedDate,\n    \"dateModified\": formattedDate\n  };\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n      <Helmet>\n        <title>{blog.title} - Today Egg Rates</title>\n        <meta name=\"description\" content={blog.description} />\n        <meta name=\"keywords\" content={blog.tags ? blog.tags.join(', ') : 'egg rate, egg price, NECC egg rate'} />\n        <link rel=\"canonical\" href={`https://todayeggrates.com/blog/${blog.link}`} />\n        \n        {/* Article Schema */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(articleSchema)}\n        </script>\n        \n        {/* Open Graph Tags */}\n        <meta property=\"og:title\" content={blog.title} />\n        <meta property=\"og:description\" content={blog.description} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:url\" content={`https://todayeggrates.com/blog/${blog.link}`} />\n        <meta property=\"og:image\" content={blog.image} />\n        <meta property=\"article:published_time\" content={formattedDate} />\n        <meta property=\"article:modified_time\" content={formattedDate} />\n        \n        {/* Twitter Card */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={blog.title} />\n        <meta name=\"twitter:description\" content={blog.description} />\n        <meta name=\"twitter:image\" content={blog.image} />\n      </Helmet>\n      \n      <Navbar />\n      \n      <div className=\"flex-grow p-4 md:p-8 lg:p-12\">\n        {/* Breadcrumb */}\n        <div className=\"max-w-4xl mx-auto mb-4\">\n          <Breadcrumb />\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n          {/* Blog Header */}\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-800 mb-4\">{blog.title}</h1>\n            <div className=\"flex items-center text-sm text-gray-600 mb-6\">\n              <time dateTime={blog.uploadDate}>\n                {new Date(blog.uploadDate).toLocaleDateString('en-US', {\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </time>\n              <span className=\"mx-2\">•</span>\n              <span>Today Egg Rates</span>\n            </div>            <OptimizedImage \n              src={blog.image} \n              alt={blog.title} \n              className=\"w-full h-auto rounded-lg mb-6 object-cover\"\n              width={800}\n              height={400}\n            />\n          </div>\n          \n          {/* Table of Contents - only show for longer posts */}\n          {ContentComponent && <TableOfContents \n            key={blog.link} \n            contentId=\"blog-content\" \n            blogId={blog.link} \n            isSticky={false} \n          />}\n          \n          {/* Blog Content */}\n          <div id=\"blog-content\">\n            {ContentComponent ? <ContentComponent /> : <p>Loading content...</p>}\n          </div>\n          \n          {/* Tags */}\n          {blog.tags && blog.tags.length > 0 && (\n            <div className=\"mt-8 pt-4 border-t border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Tags</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {blog.tags.map(tag => (\n                  <span \n                    key={tag}\n                    className=\"px-3 py-1 bg-gray-100 rounded-full text-sm text-gray-600\"\n                  >\n                    {tag}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {/* Related Articles */}\n          {relatedBlogs.length > 0 && (\n            <div className=\"mt-8 pt-4 border-t border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">Related Articles</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {relatedBlogs.map(relatedBlog => (\n                  <Link \n                    key={relatedBlog.link} \n                    to={`/blog/${relatedBlog.link}`}\n                    className=\"block p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition\"\n                  >\n                    <h4 className=\"font-medium text-blue-700\">{relatedBlog.title}</h4>\n                    <p className=\"text-sm text-gray-600 mt-1 line-clamp-2\">{relatedBlog.description}</p>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <BlogList blogs={otherBlogs} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default BlogPage;"],"names":["Breadcrumb","pathSegments","useLocation","pathname","split","filter","segment","length","breadcrumbItems","name","path","position","currentPath","forEach","index","concat","includes","replace","charAt","toUpperCase","slice","map","word","join","push","breadcrumbSchema","item","_jsxs","_Fragment","children","_jsx","Helmet","type","JSON","stringify","className","Link","to","blogComponentMap","egg-rate-barwala","blog-1","blog-2","BlogPage","link","useParams","blog","blogs","find","b","ContentComponent","setContentComponent","useState","formattedDate","Date","uploadDate","toISOString","relatedBlogs","tags","some","tag","useEffect","then","module","default","catch","error","console","otherBlogs","articleSchema","title","description","image","content","rel","href","property","Navbar","dateTime","toLocaleDateString","year","month","day","OptimizedImage","src","alt","width","height","TableOfContents","contentId","blogId","isSticky","id","relatedBlog","BlogList","Footer"],"sourceRoot":""}