{"version":3,"file":"static/js/blog-page.fcfdfda9.chunk.js","mappings":"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","sources":["components/blog/BlogList.js","components/blog/TableOfContents.js","components/common/OptimizedImage.js","components/layout/Footer.js","components/layout/Navbar.js","components/layout/Breadcrumb.js","pages/BlogPage.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nconst BlogList = ({ blogs, selectedCity, selectedState }) => {\n  // Sort blogs by upload date (newest first)\n  const sortedBlogs = [...blogs].sort((a, b) => \n    new Date(b.uploadDate) - new Date(a.uploadDate)\n  );\n\n  // Create keyword-rich heading based on the current page context\n  const getContextHeading = () => {\n    if (selectedCity) {\n      return `Egg Rate Articles & Insights for ${selectedCity}`;\n    } else if (selectedState) {\n      return `Egg Market Articles & Updates for ${selectedState}`;\n    } else {\n      return 'Latest Egg Rate Articles & Market Insights';\n    }\n  };\n\n  return (\n    <div className=\"mt-10 bg-white shadow-lg rounded-lg p-6\">\n      {/* Add schema.org structured data for blog listings */}\n      <Helmet>\n        <script type=\"application/ld+json\">{`\n          {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"ItemList\",\n            \"itemListElement\": [\n              ${sortedBlogs.map((blog, index) => `\n              {\n                \"@type\": \"ListItem\",\n                \"position\": ${index + 1},\n                \"url\": \"https://todayeggrates.com/blog/${blog.link}\",\n                \"name\": \"${blog.title}\"\n              }\n              `).join(',')}\n            ]\n          }\n        `}</script>\n      </Helmet>\n      \n      <h2 className=\"text-2xl font-bold mb-6 text-gray-800 text-center\">\n        {getContextHeading()}\n      </h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {sortedBlogs.map((blog, index) => (\n          <div key={index} className=\"bg-gray-50 rounded-lg overflow-hidden shadow transition-transform hover:scale-105\">\n            <Link to={`/blog/${blog.link}`} className=\"block\">\n              <img \n                src={blog.image} \n                alt={blog.title} \n                className=\"w-full h-48 object-cover\"                loading={index < 3 ? \"eager\" : \"lazy\"}\n                width={400}\n                height={300}\n              />\n              <div className=\"p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">{blog.title}</h3>\n                <p className=\"text-gray-600 text-sm mb-3\">{blog.description}</p>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-blue-600 font-medium text-sm\">Read more</span>\n                  <time dateTime={blog.uploadDate} className=\"text-gray-500 text-sm\">\n                    {new Date(blog.uploadDate).toLocaleDateString('en-US', {\n                      year: 'numeric',\n                      month: 'short',\n                      day: 'numeric'\n                    })}\n                  </time>\n                </div>\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n      \n      {/* Add contextual internal linking section */}\n      {(selectedCity || selectedState) && (\n        <div className=\"mt-8 p-4 bg-blue-50 rounded-lg\">\n          <h3 className=\"text-lg font-semibold text-blue-800 mb-2\">Related Egg Rate Resources</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <h4 className=\"font-medium text-blue-700 mb-1\">Popular Cities</h4>\n              <ul className=\"list-disc pl-5 text-blue-600\">\n                <li><Link to=\"/mumbai-egg-rate\" className=\"hover:underline\">Mumbai Egg Rate</Link></li>\n                <li><Link to=\"/delhi-egg-rate\" className=\"hover:underline\">Delhi Egg Rate</Link></li>\n                <li><Link to=\"/hyderabad-egg-rate\" className=\"hover:underline\">Hyderabad Egg Rate</Link></li>\n                <li><Link to=\"/barwala-egg-rate\" className=\"hover:underline\">Barwala Egg Rate</Link></li>\n                <li><Link to=\"/bengaluru-egg-rate\" className=\"hover:underline\">Bengaluru Egg Rate</Link></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-blue-700 mb-1\">Market Resources</h4>\n              <ul className=\"list-disc pl-5 text-blue-600\">\n                <li><Link to=\"/webstories\" className=\"hover:underline\">Egg Rate Web Stories</Link></li>\n                <li><Link to=\"/blog/egg-rate-barwala\" className=\"hover:underline\">Barwala Market Analysis</Link></li>\n                <li><Link to=\"/blog/blog-1\" className=\"hover:underline\">Understanding Today's Egg Rates</Link></li>\n                <li><Link to=\"/blog/blog-2\" className=\"hover:underline\">Egg Rate Trends in India</Link></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlogList;","import React, { useEffect, useState, useRef } from 'react';\n\nconst TableOfContents = ({ contentId, blogId, isSticky = false }) => {\n  const [headings, setHeadings] = useState([]);\n  const [activeId, setActiveId] = useState('');\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const observerRef = useRef(null);\n  const mutationObserverRef = useRef(null);\n\n  useEffect(() => {\n    // Function to extract headings from content\n    const extractHeadings = () => {\n      const contentElement = document.getElementById(contentId);\n      if (!contentElement) return;\n      \n      // Get all h2 and h3 elements from the content\n      const elements = contentElement.querySelectorAll('h2, h3');\n      \n      // Add ids to elements that don't have them based on blogId and text\n      elements.forEach((element, index) => {\n        if (!element.id) {\n          const slugifiedText = element.innerText\n            .toLowerCase()\n            .replace(/[^\\w ]+/g, '')\n            .replace(/ +/g, '-');\n          element.id = `${blogId}-heading-${slugifiedText}`;\n        }\n      });\n      \n      const headingElements = Array.from(elements).map(element => ({\n        id: element.id,\n        text: element.innerText,\n        level: element.tagName === 'H2' ? 2 : 3\n      }));\n      \n      setHeadings(headingElements);\n      \n      // Clean up any previous intersection observer\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n      \n      // Set up new IntersectionObserver to track active heading\n      observerRef.current = new IntersectionObserver(\n        entries => {\n          entries.forEach(entry => {\n            if (entry.isIntersecting) {\n              setActiveId(entry.target.id);\n            }\n          });\n        },\n        { rootMargin: '0px 0px -80% 0px' }\n      );\n      \n      // Observe all heading elements\n      elements.forEach(element => observerRef.current.observe(element));\n    };\n\n    // Initial extraction of headings\n    extractHeadings();\n    \n    // Set up a MutationObserver to detect when content changes (like when blog content loads)\n    if (mutationObserverRef.current) {\n      mutationObserverRef.current.disconnect();\n    }\n    \n    const contentElement = document.getElementById(contentId);\n    if (contentElement) {\n      mutationObserverRef.current = new MutationObserver((mutations) => {\n        // If significant changes to content, re-extract headings\n        const shouldUpdate = mutations.some(mutation => \n          mutation.type === 'childList' && \n          (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0)\n        );\n        \n        if (shouldUpdate) {\n          // Small timeout to ensure DOM is fully updated\n          setTimeout(extractHeadings, 100);\n        }\n      });\n      \n      // Start observing content changes\n      mutationObserverRef.current.observe(contentElement, {\n        childList: true,\n        subtree: true\n      });\n    }\n    \n    return () => {\n      // Clean up observers when component unmounts or contentId/blogId changes\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n      if (mutationObserverRef.current) {\n        mutationObserverRef.current.disconnect();\n      }\n    };\n  }, [contentId, blogId]);\n\n  const scrollToHeading = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      window.scrollTo({\n        top: element.offsetTop - 100,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  const toggleCollapse = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  if (headings.length === 0) return null;\n\n  return (\n    <div className={`toc-container bg-white p-4 rounded-lg shadow-md mb-6 ${isSticky ? 'sticky top-24' : ''}`}>\n      <div className=\"flex justify-between items-center cursor-pointer\" onClick={toggleCollapse}>\n        <h2 className=\"text-xl font-bold text-gray-800\">Table of Contents</h2>\n        <button \n          aria-label={isCollapsed ? \"Expand\" : \"Collapse\"} \n          className=\"text-gray-600 hover:text-blue-600 focus:outline-none\"\n        >\n          <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            className={`h-5 w-5 transform transition-transform ${isCollapsed ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            viewBox=\"0 0 24 24\" \n            stroke=\"currentColor\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={isCollapsed ? \"M19 9l-7 7-7-7\" : \"M5 15l7-7 7 7\"} />\n          </svg>\n        </button>\n      </div>\n      \n      {!isCollapsed && (\n        <ul className=\"space-y-2 mt-3\">\n          {headings.map((heading) => (\n            <li \n              key={heading.id}\n              className={`toc-item ${heading.level === 3 ? 'ml-4' : ''}`}\n            >\n              <a\n                href={`#${heading.id}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  scrollToHeading(heading.id);\n                }}\n                className={`block text-${heading.level === 2 ? 'md' : 'sm'} ${\n                  activeId === heading.id\n                    ? 'text-blue-600 font-semibold'\n                    : 'text-gray-700 hover:text-blue-600'\n                } transition-colors duration-200`}\n              >\n                {heading.text}\n              </a>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default TableOfContents;","import React, { useState, useEffect, useRef } from 'react';\n\nconst OptimizedImage = ({ src, alt, className = '', width, height }) => {\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const imgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ \n    width: width || 0, \n    height: height || 0 \n  });\n\n  // Early load image dimensions if not provided\n  useEffect(() => {\n    if (!width || !height) {\n      const img = new Image();\n      img.src = src;\n      \n      // Use native browser lazy loading hint\n      if ('loading' in HTMLImageElement.prototype) {\n        img.loading = 'lazy';\n      }\n      \n      img.onload = () => {\n        setDimensions({ \n          width: img.naturalWidth, \n          height: img.naturalHeight \n        });\n        setImageLoaded(true);\n        setLoaded(true);\n      };\n      \n      img.onerror = () => {\n        setError(true);\n      };\n    } else {\n      setDimensions({ width, height });\n      setImageLoaded(true);\n    }\n  }, [src, width, height]);\n\n  // Extract Tailwind dimensions\n  const hasTailwindDimensions = /w-\\d+|h-\\d+/.test(className);\n  const aspectRatio = imageLoaded ? (dimensions.height / dimensions.width) * 100 : 56.25;\n\n  // Calculate sizes attribute based on responsive classes\n  const getSizes = () => {\n    if (className.includes('w-full')) return '100vw';\n    if (className.match(/w-(\\d+)\\/(\\d+)/)) {\n      const [, num, den] = className.match(/w-(\\d+)\\/(\\d+)/);\n      return `${(num / den) * 100}vw`;\n    }\n    return '100vw';\n  };\n\n  return (\n    <div \n      className={`relative overflow-hidden ${hasTailwindDimensions ? '' : 'w-full'}`}\n      style={{ \n        width: width ? `${width}px` : '100%',\n        aspectRatio: dimensions.width && dimensions.height ? \n          `${dimensions.width}/${dimensions.height}` : '16/9',\n        contain: 'layout paint style'\n      }}\n    >\n      <div\n        style={{ \n          paddingTop: `${aspectRatio}%`,\n          contain: 'strict'\n        }}\n        className={`${error ? 'bg-gray-200' : 'bg-gray-100'}`}\n        aria-hidden=\"true\"\n      />\n      {!error && imageLoaded && (\n        <img\n          ref={imgRef}\n          src={src}\n          alt={alt}\n          width={dimensions.width || undefined}\n          height={dimensions.height || undefined}\n          className={`absolute top-0 left-0 w-full h-full object-cover ${className} ${\n            !loaded ? 'opacity-0' : 'opacity-100'\n          } transition-opacity duration-300 will-change-transform`}\n          loading=\"lazy\"\n          decoding=\"async\"\n          sizes={getSizes()}\n          fetchpriority={/hero|logo|banner/.test(className.toLowerCase()) ? 'high' : 'auto'}\n          onLoad={() => {\n            setLoaded(true);\n            // Force layout recalculation\n            if (imgRef.current) {\n              imgRef.current.style.transform = 'translateZ(0)';\n            }\n          }}\n          onError={(e) => {\n            setError(true);\n            e.target.onerror = null;\n            e.target.src = '/logo.png';\n          }}\n          style={{\n            contain: 'layout paint style',\n            willChange: 'transform',\n            transform: 'translateZ(0)'\n          }}\n        />\n      )}\n      {error && (\n        <div className=\"absolute top-0 left-0 w-full h-full flex items-center justify-center text-gray-500\">\n          <span>Image not available</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OptimizedImage;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"bg-[#422C18] text-white p-6 mt-8\">\n      <div className=\"container mx-auto px-4 w-full max-w-7xl flex flex-col md:flex-row justify-between items-center transition-none\">\n        <div className=\"mb-4 md:mb-0\">\n          <p className=\"text-center md:text-left\">\n            © {new Date().getFullYear()} todayEggRates. All Rights Reserved.\n          </p>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:space-x-6\">\n        <a\n            href=\"/disclaimer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Disclaimer\n          </a>\n          <a\n            href=\"/privacy\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300 mb-2 md:mb-0\"\n          >\n            Privacy Policy\n          </a>\n          <a\n            href=\"/terms\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Terms of Service\n          </a>\n        </div>\n      </div>\n      <div className=\"mt-6 text-center\">\n        <p className=\"text-[#C4A484] text-sm\">\n          Follow us on{\" \"}\n          <a\n            href=\"https://www.facebook.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Facebook\n          </a>\n          ,{\" \"}\n          <a\n            href=\"https://www.twitter.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Twitter\n          </a>\n          ,{\" \"}\n          <a\n            href=\"https://www.instagram.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Instagram\n          </a>\n          .\n        </p>\n        <br/>\n        <p>Made with &#10084; by <a href=\"https://www.instagram.com/being._owais/profilecard/?igsh=MWo5Nm45cjFuNzVobA==\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:underline\">Owais Khan</a></p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport Select from 'react-select';\nimport { FaBars, FaTimes } from 'react-icons/fa';\nimport OptimizedImage from '../common/OptimizedImage';\n\nconst Navbar = ({ setSelectedCity, setSelectedState, selectedCity, selectedState }) => {\n  const [options, setOptions] = useState([]);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Track navigation lock to prevent redundant navigations\n  const navigationLock = React.useRef(false);\n\n  useEffect(() => {\n    fetch('/php/api/location/get_states_and_cities.php')\n      .then(response => response.json())\n      .then(data => {\n        const combinedOptions = [];\n        const stateSet = new Set();\n        const citySet = new Set();\n        \n        for (const state in data) {\n          if (!stateSet.has(state)) {\n            combinedOptions.push({\n              value: state,\n              label: state,\n              type: 'state',\n            });\n            stateSet.add(state);\n          }\n          \n          data[state].forEach(city => {\n            // Standardize city names\n            let cityName = city;\n            // Case-insensitive check for bengaluru/bangalore variants\n            if (cityName.toLowerCase() === 'bangalore' || \n                cityName.toLowerCase() === 'bangalore (cc)' || \n                cityName.toLowerCase() === 'bengaluru (cc)' ||\n                cityName.toLowerCase() === 'bengaluru') {\n              cityName = 'Bengaluru'; // Always use this capitalization\n            }\n            \n            const cityLabel = `${cityName}, ${state}`;\n            if (!citySet.has(cityLabel)) {\n              combinedOptions.push({\n                value: cityName,\n                label: cityLabel,\n                type: 'city',\n              });\n              citySet.add(cityLabel);\n            }\n          });\n        }\n        setOptions(combinedOptions);\n      })\n      .catch(error => console.error('Error fetching states and cities:', error));\n  }, []);\n\n  const handleChange = (selectedOption) => {\n    if (!selectedOption || navigationLock.current) return;\n    \n    navigationLock.current = true;\n    const { type, label } = selectedOption;\n    \n    if (type === 'city') {\n      const [city, state] = label.split(', ');\n      let selectedCityName = city;\n      \n      // Case-insensitive check for bengaluru/bangalore variants\n      if (selectedCityName.toLowerCase() === 'bangalore' || \n          selectedCityName.toLowerCase() === 'bangalore (cc)' || \n          selectedCityName.toLowerCase() === 'bengaluru (cc)' ||\n          selectedCityName.toLowerCase() === 'bengaluru') {\n        selectedCityName = 'Bengaluru'; // Always use this capitalization\n      }\n      \n      // Update states first\n      setSelectedCity(selectedCityName);\n      setSelectedState(state);\n      \n      // Then navigate with a slight delay\n      setTimeout(() => {\n        const path = `/${selectedCityName.toLowerCase()}-egg-rate`;\n        \n        // Only navigate if we're not already on this path\n        if (location.pathname !== path) {\n          navigate(path, { replace: true });\n        }\n        \n        navigationLock.current = false;\n      }, 5);\n      \n    } else if (type === 'state') {\n      // Update states first\n      setSelectedCity('');\n      setSelectedState(label);\n      \n      // Then navigate with a slight delay\n      setTimeout(() => {\n        const path = `/state/${label.toLowerCase()}-egg-rate`;\n        \n        // Only navigate if we're not already on this path\n        if (location.pathname !== path) {\n          navigate(path, { replace: true });\n        }\n        \n        navigationLock.current = false;\n      }, 5);\n    }\n  };\n\n  const handleHomeClick = (e) => {\n    if (navigationLock.current) {\n      e.preventDefault();\n      return;\n    }\n    \n    navigationLock.current = true;\n    setSelectedCity('');\n    setSelectedState('');\n    \n    // Only navigate if we're not already on home\n    if (location.pathname !== '/') {\n      navigate('/');\n    }\n    \n    // Release lock after a short delay\n    setTimeout(() => {\n      navigationLock.current = false;\n    }, 5);\n  };\n\n  const handleCityClick = (city, e) => {\n    if (navigationLock.current) {\n      e?.preventDefault();\n      return;\n    }\n    \n    navigationLock.current = true;\n    // Update state first\n    setSelectedCity(city);\n    setSelectedState('');\n    \n    // Then navigate with a slight delay\n    setTimeout(() => {\n      const path = `/${city.toLowerCase()}-egg-rate`;\n      \n      // Only navigate if we're not already on this path\n      if (location.pathname !== path) {\n        navigate(path, { replace: true });\n      }\n      \n      navigationLock.current = false;\n    }, 5);\n  };\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  const handleLogoError = (e) => {\n    console.error('Error loading logo:', e.nativeEvent);\n    console.error('Error target:', e.target);\n    e.target.src = '/logo.png'; // Fallback image\n  };\n\n  return (\n    <nav className=\"bg-white p-4 shadow-lg\">\n      <div className=\"container mx-auto px-4 w-full max-w-7xl flex flex-col md:flex-row justify-between items-center transition-none\">\n        <div className=\"flex justify-between items-center w-full md:w-auto\">          <Link to=\"/\" onClick={handleHomeClick} className=\"mb-4 md:mb-0\">\n            <OptimizedImage\n              src=\"/logo.png\"\n              alt=\"Today Egg Rates Logo\"\n              className=\"h-10\"\n              width={200}\n              height={40}\n              onError={handleLogoError}\n            />\n          </Link>\n          <button\n            className=\"md:hidden text-gray-800 focus:outline-none\"\n            onClick={toggleMenu}\n          >\n            {menuOpen ? <FaTimes size={24} /> : <FaBars size={24} />}\n          </button>\n        </div>\n        <div\n          className={`${\n            menuOpen ? 'block' : 'hidden'\n          } md:flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-4 mb-4 md:mb-0 w-full md:w-auto`}\n        >\n          <div className=\"flex flex-col space-y-2 md:space-y-0 md:flex-row md:space-x-4\">\n            <Link\n              to=\"/\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={handleHomeClick}\n            >\n              Home\n            </Link>\n            <Link\n              to=\"/mumbai-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Mumbai', e)}\n            >\n              Mumbai\n            </Link>\n            <Link\n              to=\"/kolkata-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Kolkata', e)}\n            >\n              Kolkata\n            </Link>\n            <Link\n              to=\"/lucknow-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Lucknow', e)}\n            >\n              Lucknow\n            </Link>\n            <Link\n              to=\"/barwala-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Barwala', e)}\n            >\n              Barwala\n            </Link>\n            <Link\n              to=\"/hyderabad-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Hyderabad', e)}\n            >\n              Hyderabad\n            </Link>\n            <Link\n              to=\"/chennai-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Chennai', e)}\n            >\n              Chennai\n            </Link>\n            <Link\n              to=\"/webstories\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n            >\n              Web Stories\n            </Link>\n          </div>\n        </div>\n        <div className=\"w-full md:w-64\">\n          <Select\n            value={options.find(option => option.value === (selectedCity || selectedState))}\n            onChange={handleChange}\n            options={options}\n            className=\"w-full\"\n            styles={{\n              control: (base) => ({\n                ...base,\n                backgroundColor: 'white',\n                borderColor: 'transparent',\n                boxShadow: 'none',\n                '&:hover': {\n                  borderColor: 'transparent',\n                },\n                padding: '0.5rem', // Add padding for better touch target\n                borderRadius: '0.375rem', // Tailwind rounded\n              }),\n              menu: (base) => ({\n                ...base,\n                zIndex: 9999,\n              }),\n              placeholder: (base) => ({\n                ...base,\n                color: '#A0AEC0', // Placeholder color for better contrast\n              }),\n            }}\n            placeholder=\"Select City, State\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nconst Breadcrumb = () => {\n  const location = useLocation();\n  const pathSegments = location.pathname.split('/').filter(segment => segment !== '');\n  \n  // Skip rendering if we're on the homepage\n  if (pathSegments.length === 0) {\n    return null;\n  }\n  \n  // Generate breadcrumb items\n  const breadcrumbItems = [\n    {\n      name: 'Home',\n      path: '/',\n      position: 1\n    }\n  ];\n  \n  // Build the breadcrumb path segments\n  let currentPath = '';\n  pathSegments.forEach((segment, index) => {\n    currentPath += `/${segment}`;\n    \n    // Format the segment name to be more readable\n    let name = segment;\n    \n    // Handle special cases\n    if (segment.includes('-egg-rate')) {\n      name = segment.replace('-egg-rate', '');\n      name = name.charAt(0).toUpperCase() + name.slice(1) + ' Egg Rate';\n    } else if (segment === 'blog' && index === 0) {\n      name = 'Blog';\n    } else if (segment === 'state' && index === 0) {\n      name = 'States';\n    } else if (segment === 'webstories') {\n      name = 'Web Stories';\n    } else {\n      // Capitalize and replace hyphens with spaces for other segments\n      name = segment\n        .split('-')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n    }\n    \n    breadcrumbItems.push({\n      name,\n      path: currentPath,\n      position: index + 2\n    });\n  });\n  \n  // Create schema for breadcrumbs\n  const breadcrumbSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": breadcrumbItems.map(item => ({\n      \"@type\": \"ListItem\",\n      \"position\": item.position,\n      \"name\": item.name,\n      \"item\": `https://todayeggrates.com${item.path}`\n    }))\n  };\n  \n  return (\n    <>\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(breadcrumbSchema)}\n        </script>\n      </Helmet>\n      \n      <nav className=\"flex mb-5 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\n          {breadcrumbItems.map((item, index) => (\n            <li key={index} className=\"inline-flex items-center\">\n              {index > 0 && (\n                <span className=\"mx-2 text-gray-500\">/</span>\n              )}\n              \n              {index === breadcrumbItems.length - 1 ? (\n                <span className=\"text-gray-700 font-medium\" aria-current=\"page\">\n                  {item.name}\n                </span>\n              ) : (\n                <Link \n                  to={item.path} \n                  className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                >\n                  {item.name}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ol>\n      </nav>\n    </>\n  );\n};\n\nexport default Breadcrumb;","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport Navbar from '../components/layout/Navbar';\nimport Footer from '../components/layout/Footer';\nimport blogs from '../data/blogs'; \nimport BlogList from '../components/blog/BlogList';\nimport Breadcrumb from '../components/layout/Breadcrumb';\nimport TableOfContents from '../components/blog/TableOfContents';\nimport OptimizedImage from '../components/common/OptimizedImage';\n\n// Pre-define the import mapping for webpack to analyze\nconst blogComponentMap = {\n  'egg-rate-barwala': () => import('../pages/blogs/egg-rate-barwala'),\n  'blog-1': () => import('../pages/blogs/blog-1'),\n  'blog-2': () => import('../pages/blogs/blog-2'),\n  // Add any future blog links here\n};\n\nconst BlogPage = () => {\n  const { link } = useParams();\n  const blog = blogs.find((b) => b.link === link);\n  const [ContentComponent, setContentComponent] = useState(null);\n  \n  // Format the date for schema\n  const formattedDate = blog ? new Date(blog.uploadDate).toISOString() : new Date().toISOString();\n  \n  // Generate related articles links based on current blog tags\n  const relatedBlogs = blog ? blogs.filter(b => \n    b.link !== link && \n    b.tags && blog.tags && \n    b.tags.some(tag => blog.tags.includes(tag))\n  ).slice(0, 3) : [];\n\n  useEffect(() => {\n    if (blog && blogComponentMap[blog.link]) {\n      blogComponentMap[blog.link]()\n        .then((module) => {\n          setContentComponent(() => module.default);\n        })\n        .catch((error) => {\n          console.error(\"Error loading content component:\", error);\n        });\n    }\n  }, [blog]);\n\n  if (!blog) {\n    return <div>Blog not found</div>;\n  }\n\n  // Filter out the current blog from the list of blogs\n  const otherBlogs = blogs.filter((b) => b.link !== link);\n  \n  // Create article schema\n  const articleSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BlogPosting\",\n    \"mainEntityOfPage\": {\n      \"@type\": \"WebPage\",\n      \"@id\": `https://todayeggrates.com/blog/${blog.link}`\n    },\n    \"headline\": blog.title,\n    \"description\": blog.description,\n    \"image\": blog.image,\n    \"author\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Today Egg Rates\",\n      \"url\": \"https://todayeggrates.com\"\n    },\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Today Egg Rates\",\n      \"logo\": {\n        \"@type\": \"ImageObject\",\n        \"url\": \"https://todayeggrates.com/eggpic.webp\"\n      }\n    },\n    \"datePublished\": formattedDate,\n    \"dateModified\": formattedDate\n  };\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n      <Helmet>\n        <title>{blog.title} - Today Egg Rates</title>\n        <meta name=\"description\" content={blog.description} />\n        <meta name=\"keywords\" content={blog.tags ? blog.tags.join(', ') : 'egg rate, egg price, NECC egg rate'} />\n        <link rel=\"canonical\" href={`https://todayeggrates.com/blog/${blog.link}`} />\n        \n        {/* Article Schema */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(articleSchema)}\n        </script>\n        \n        {/* Open Graph Tags */}\n        <meta property=\"og:title\" content={blog.title} />\n        <meta property=\"og:description\" content={blog.description} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:url\" content={`https://todayeggrates.com/blog/${blog.link}`} />\n        <meta property=\"og:image\" content={blog.image} />\n        <meta property=\"article:published_time\" content={formattedDate} />\n        <meta property=\"article:modified_time\" content={formattedDate} />\n        \n        {/* Twitter Card */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={blog.title} />\n        <meta name=\"twitter:description\" content={blog.description} />\n        <meta name=\"twitter:image\" content={blog.image} />\n      </Helmet>\n      \n      <Navbar />\n      \n      <div className=\"flex-grow p-4 md:p-8 lg:p-12\">\n        {/* Breadcrumb */}\n        <div className=\"max-w-4xl mx-auto mb-4\">\n          <Breadcrumb />\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n          {/* Blog Header */}\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-800 mb-4\">{blog.title}</h1>\n            <div className=\"flex items-center text-sm text-gray-600 mb-6\">\n              <time dateTime={blog.uploadDate}>\n                {new Date(blog.uploadDate).toLocaleDateString('en-US', {\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </time>\n              <span className=\"mx-2\">•</span>\n              <span>Today Egg Rates</span>\n            </div>            <OptimizedImage \n              src={blog.image} \n              alt={blog.title} \n              className=\"w-full h-auto rounded-lg mb-6 object-cover\"\n              width={800}\n              height={400}\n            />\n          </div>\n          \n          {/* Table of Contents - only show for longer posts */}\n          {ContentComponent && <TableOfContents \n            key={blog.link} \n            contentId=\"blog-content\" \n            blogId={blog.link} \n            isSticky={false} \n          />}\n          \n          {/* Blog Content */}\n          <div id=\"blog-content\">\n            {ContentComponent ? <ContentComponent /> : <p>Loading content...</p>}\n          </div>\n          \n          {/* Tags */}\n          {blog.tags && blog.tags.length > 0 && (\n            <div className=\"mt-8 pt-4 border-t border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Tags</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {blog.tags.map(tag => (\n                  <span \n                    key={tag}\n                    className=\"px-3 py-1 bg-gray-100 rounded-full text-sm text-gray-600\"\n                  >\n                    {tag}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {/* Related Articles */}\n          {relatedBlogs.length > 0 && (\n            <div className=\"mt-8 pt-4 border-t border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">Related Articles</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {relatedBlogs.map(relatedBlog => (\n                  <Link \n                    key={relatedBlog.link} \n                    to={`/blog/${relatedBlog.link}`}\n                    className=\"block p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition\"\n                  >\n                    <h4 className=\"font-medium text-blue-700\">{relatedBlog.title}</h4>\n                    <p className=\"text-sm text-gray-600 mt-1 line-clamp-2\">{relatedBlog.description}</p>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <BlogList blogs={otherBlogs} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default BlogPage;"],"names":["_ref","blogs","selectedCity","selectedState","sortedBlogs","sort","a","b","Date","uploadDate","_jsxs","className","children","_jsx","Helmet","type","concat","map","blog","index","link","title","join","Link","to","src","image","alt","loading","width","height","description","dateTime","toLocaleDateString","year","month","day","contentId","blogId","isSticky","headings","setHeadings","useState","activeId","setActiveId","isCollapsed","setIsCollapsed","observerRef","useRef","mutationObserverRef","useEffect","extractHeadings","contentElement","document","getElementById","elements","querySelectorAll","forEach","element","id","slugifiedText","innerText","toLowerCase","replace","headingElements","Array","from","text","level","tagName","current","disconnect","IntersectionObserver","entries","entry","isIntersecting","target","rootMargin","observe","MutationObserver","mutations","some","mutation","addedNodes","length","removedNodes","setTimeout","childList","subtree","onClick","toggleCollapse","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","heading","href","e","preventDefault","window","scrollTo","top","offsetTop","behavior","scrollToHeading","loaded","setLoaded","error","setError","imageLoaded","setImageLoaded","imgRef","dimensions","setDimensions","img","Image","HTMLImageElement","prototype","onload","naturalWidth","naturalHeight","onerror","hasTailwindDimensions","test","aspectRatio","style","contain","paddingTop","ref","undefined","decoding","sizes","getSizes","includes","match","num","den","fetchpriority","onLoad","transform","onError","willChange","Footer","getFullYear","rel","setSelectedCity","setSelectedState","options","setOptions","menuOpen","setMenuOpen","navigate","useNavigate","location","useLocation","navigationLock","React","fetch","then","response","json","data","combinedOptions","stateSet","Set","citySet","state","has","push","value","label","add","city","cityName","cityLabel","catch","console","handleHomeClick","pathname","handleCityClick","path","OptimizedImage","nativeEvent","toggleMenu","FaTimes","size","FaBars","Select","find","option","onChange","selectedOption","split","selectedCityName","styles","control","base","_objectSpread","backgroundColor","borderColor","boxShadow","padding","borderRadius","menu","zIndex","placeholder","color","Breadcrumb","pathSegments","filter","segment","breadcrumbItems","name","position","currentPath","charAt","toUpperCase","slice","word","breadcrumbSchema","item","_Fragment","JSON","stringify","blogComponentMap","egg-rate-barwala","blog-1","blog-2","BlogPage","useParams","ContentComponent","setContentComponent","formattedDate","toISOString","relatedBlogs","tags","tag","module","default","otherBlogs","articleSchema","content","property","Navbar","TableOfContents","relatedBlog","BlogList"],"sourceRoot":""}