{"version":3,"file":"static/js/admin-page.016033c1.chunk.js","mappings":"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","sources":["components/admin/RateForm.js","components/rates/RateTable.js","components/layout/AdminNavbar.js","components/common/StateSelect.js","components/common/CitySelect.js","components/admin/AddStateForm.js","components/admin/AddCityForm.js","pages/AdminPage.js"],"sourcesContent":["import React from 'react';\n\nconst RateForm = ({\n  eggRate,\n  setEggRate,\n  handleSubmit,\n  handleSelectAll,\n  handleCopyPreviousRates,\n}) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-6 grid grid-cols-1 gap-4\">\n      <button\n        type=\"button\"\n        onClick={handleSelectAll}\n        className=\"bg-green-600 text-white p-3 rounded w-full hover:bg-green-700 transition\"\n      >\n        Select All Cities\n      </button>\n      <input\n        type=\"date\"\n        value={eggRate.date}\n        onChange={(e) => setEggRate({ ...eggRate, date: e.target.value })}\n        className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n        required\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Rate\"\n        value={eggRate.rate}\n        onChange={(e) => setEggRate({ ...eggRate, rate: e.target.value })}\n        className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n        required\n      />\n      <button\n        type=\"submit\"\n        className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n      >\n        Update Rates\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleCopyPreviousRates}\n        className=\"bg-yellow-600 text-white p-3 rounded w-full hover:bg-yellow-700 transition\"\n      >\n        Copy Previous Rates\n      </button>\n    </form>\n  );\n};\n\nexport default RateForm;","import React, { useState, useEffect, useCallback, useMemo, memo } from 'react';\n\nconst RateTable = ({ \n  rates = [], \n  itemsPerPage = 10, \n  showAdmin = false,\n  onDelete,\n  onEdit,\n  handleSort: externalHandleSort,\n  showState = false,\n  showDate = false,\n  showPriceColumns = true,\n  selectedCity = '',\n  selectedState = '',\n}) => {\n  // State management\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({ key: 'city', direction: 'ascending' });\n  const [isTableVisible, setIsTableVisible] = useState(false);\n\n  // Sort handler\n  const handleSort = useCallback((key) => {\n    if (externalHandleSort) {\n      externalHandleSort(key);\n      return;\n    }\n    setSortConfig((prevConfig) => ({\n      key,\n      direction: prevConfig.key === key && prevConfig.direction === 'ascending' ? 'descending' : 'ascending'\n    }));\n  }, [externalHandleSort]);\n\n  // Sort rates with memoization\n  const sortedRates = useMemo(() => {\n    if (externalHandleSort) return rates;\n    \n    return [...rates].sort((a, b) => {\n      const aVal = a[sortConfig.key];\n      const bVal = b[sortConfig.key];\n      \n      if (sortConfig.direction === 'ascending') {\n        return aVal < bVal ? -1 : aVal > bVal ? 1 : 0;\n      }\n      return aVal > bVal ? -1 : aVal < bVal ? 1 : 0;\n    });\n  }, [rates, sortConfig, externalHandleSort]);\n\n  // Event handlers\n  const handlePageClick = useCallback((pageNumber) => {\n    setCurrentPage(pageNumber);\n  }, []);\n\n  // Pagination calculation\n  const totalPages = Math.ceil((rates?.length || 0) / itemsPerPage);\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = sortedRates.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Hook to handle intersection observer\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsTableVisible(true);\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    const tableContainer = document.querySelector('.rate-table-container');\n    if (tableContainer) {\n      observer.observe(tableContainer);\n    }\n\n    return () => observer.disconnect();\n  }, []);\n\n  // Generate pagination controls\n  const renderPaginationControls = useCallback(() => {\n    const pages = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push(\n        <button\n          key={i}\n          onClick={() => handlePageClick(i)}\n          className={`px-3 py-1 mx-1 rounded ${\n            currentPage === i\n              ? 'bg-blue-600 text-white'\n              : 'bg-gray-200 hover:bg-gray-300'\n          }`}\n          aria-label={`Page ${i}`}\n        >\n          {i}\n        </button>\n      );\n    }\n    return pages;\n  }, [currentPage, totalPages, handlePageClick]);\n\n  // SEO structured data\n  const generateStructuredData = useCallback(() => {\n    if (!selectedCity) return null;\n\n    const localBusinessSchema = {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"LocalBusiness\",\n      \"name\": `Egg Market ${selectedCity}`,\n      \"description\": `Find today's egg rates in ${selectedCity}, ${selectedState}. Updated daily NECC egg prices and wholesale egg rates.`,\n      \"address\": {\n        \"@type\": \"PostalAddress\",\n        \"addressLocality\": selectedCity,\n        \"addressRegion\": selectedState,\n        \"addressCountry\": \"IN\"\n      },\n      \"url\": `https://todayeggrates.com/${selectedCity.toLowerCase()}-egg-rate`,\n      \"aggregateRating\": {\n        \"@type\": \"AggregateRating\",\n        \"ratingValue\": \"4.8\",\n        \"ratingCount\": \"254\"\n      },\n      \"priceRange\": \"₹₹\",\n      \"offers\": {\n        \"@type\": \"Offer\",\n        \"itemOffered\": {\n          \"@type\": \"Product\",\n          \"name\": \"Eggs\",\n          \"description\": `Fresh eggs in ${selectedCity}, ${selectedState}`,\n          \"offers\": {\n            \"@type\": \"Offer\",\n            \"price\": sortedRates[0]?.rate || 0,\n            \"priceCurrency\": \"INR\",\n            \"availability\": \"https://schema.org/InStock\",\n            \"priceValidUntil\": new Date(new Date().setDate(new Date().getDate() + 1)).toISOString().split('T')[0]\n          }\n        }\n      }\n    };\n\n    return (\n      <script type=\"application/ld+json\">\n        {JSON.stringify(localBusinessSchema)}\n      </script>\n    );\n  }, [selectedCity, selectedState, sortedRates]);\n\n  // Early return for empty rates - after all hooks\n  if (!rates || rates.length === 0) {\n    return (\n      <div className=\"text-center p-4\">\n        <p className=\"text-gray-600\">No rates available at the moment.</p>\n      </div>\n    );\n  }\n\n  // Render table\n  return (\n    <div className=\"rate-table-container\">\n      {isTableVisible && (\n        <>\n          {generateStructuredData()}\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full bg-white border-collapse\">\n              <thead>\n                <tr className=\"bg-gray-50\">\n                  {showState && (\n                    <th \n                      className=\"px-4 py-2 text-left cursor-pointer hover:bg-gray-100\"\n                      onClick={() => handleSort('state')}\n                    >\n                      State\n                      {sortConfig.key === 'state' && (\n                        <span className=\"ml-1\">\n                          {sortConfig.direction === 'ascending' ? '↑' : '↓'}\n                        </span>\n                      )}\n                    </th>\n                  )}\n                  <th \n                    className=\"px-4 py-2 text-left cursor-pointer hover:bg-gray-100\"\n                    onClick={() => handleSort('city')}\n                  >\n                    City\n                    {sortConfig.key === 'city' && (\n                      <span className=\"ml-1\">\n                        {sortConfig.direction === 'ascending' ? '↑' : '↓'}\n                      </span>\n                    )}\n                  </th>\n                  {showPriceColumns && (\n                    <>\n                      <th \n                        className=\"px-4 py-2 text-left cursor-pointer hover:bg-gray-100\"\n                        onClick={() => handleSort('rate')}\n                      >\n                        Rate\n                        {sortConfig.key === 'rate' && (\n                          <span className=\"ml-1\">\n                            {sortConfig.direction === 'ascending' ? '↑' : '↓'}\n                          </span>\n                        )}\n                      </th>\n                      <th \n                        className=\"px-4 py-2 text-left cursor-pointer hover:bg-gray-100\"\n                        onClick={() => handleSort('retailPrice')}\n                      >\n                        Retail Price\n                        {sortConfig.key === 'retailPrice' && (\n                          <span className=\"ml-1\">\n                            {sortConfig.direction === 'ascending' ? '↑' : '↓'}\n                          </span>\n                        )}\n                      </th>\n                    </>\n                  )}\n                  {showDate && (\n                    <th \n                      className=\"px-4 py-2 text-left cursor-pointer hover:bg-gray-100\"\n                      onClick={() => handleSort('date')}\n                    >\n                      Date\n                      {sortConfig.key === 'date' && (\n                        <span className=\"ml-1\">\n                          {sortConfig.direction === 'ascending' ? '↑' : '↓'}\n                        </span>\n                      )}\n                    </th>\n                  )}\n                  {showAdmin && (\n                    <th className=\"px-4 py-2 text-left\">Actions</th>\n                  )}\n                </tr>\n              </thead>\n              <tbody>\n                {currentItems.map((rate, index) => (\n                  <tr \n                    key={rate.id || index}\n                    className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}\n                  >\n                    {showState && (\n                      <td className=\"px-4 py-2\">{rate.state}</td>\n                    )}\n                    <td className=\"px-4 py-2\">{rate.city}</td>\n                    {showDate && (\n                      <td className=\"px-4 py-2\">\n                        {new Date(rate.date).toLocaleDateString()}\n                      </td>\n                    )}\n                    {showPriceColumns && (\n                      <>\n                        <td className=\"px-4 py-2\">₹{rate.rate}</td>\n                        <td className=\"px-4 py-2\">₹{(rate.rate * 30).toFixed(2)}</td>\n                      </>\n                    )}\n                    {showAdmin && (\n                      <td className=\"px-4 py-2\">\n                        <button\n                          onClick={() => onEdit(rate)}\n                          className=\"mr-2 text-blue-600 hover:text-blue-800\"\n                        >\n                          Edit\n                        </button>\n                        <button\n                          onClick={() => onDelete(rate.id)}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    )}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div className=\"flex justify-center mt-4\">\n            {renderPaginationControls()}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(RateTable);","import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst AdminNavbar = ({setIsAuthenticated}) => {\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  return (\n    <nav className=\"bg-gray-800 p-4 shadow-lg\">\n      <div className=\"container mx-auto flex justify-between items-center\">\n        <div>\n          <Link to=\"/admin\" className=\"text-white text-2xl font-bold\">Admin Dashboard</Link>\n        </div>\n        <div className=\"flex space-x-4\">\n          <button \n            onClick={handleLogout} \n            className=\"text-white bg-red-600 hover:bg-red-700 px-4 py-2 rounded transition duration-150 ease-in-out\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default AdminNavbar;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst StateSelect = ({ states, selectedState, handleStateChange }) => (\n  <Select\n    options={states}\n    value={selectedState}\n    onChange={handleStateChange}\n    className=\"w-full mb-4\"\n    placeholder=\"Select State\"\n  />\n);\n\nexport default StateSelect;","import React from 'react';\nimport Select from 'react-select';\n\nconst CitySelect = ({ options, selectedOptions, setSelectedOptions }) => {\n  // Remove duplicate cities from options\n  const uniqueOptions = Array.from(new Set(options.map(option => option.value)))\n    .map(value => options.find(option => option.value === value));\n\n  return (\n    <Select\n      isMulti\n      options={uniqueOptions}\n      value={selectedOptions}\n      onChange={setSelectedOptions}\n      className=\"w-full\"\n      styles={{\n        control: (base) => ({\n          ...base,\n          backgroundColor: 'white',\n          borderColor: 'transparent',\n          boxShadow: 'none',\n          '&:hover': {\n            borderColor: 'transparent',\n          },\n          padding: '0.5rem', // Add padding for better touch target\n          borderRadius: '0.375rem', // Tailwind rounded\n        }),\n        menu: (base) => ({\n          ...base,\n          zIndex: 9999,\n        }),\n        placeholder: (base) => ({\n          ...base,\n          color: '#A0AEC0', // Placeholder color for better contrast\n        }),\n      }}\n      placeholder=\"Select Cities, States\"\n    />\n  );\n};\n\nexport default CitySelect;","import React from 'react';\n\nconst AddStateForm = ({ newState, setNewState, handleAddState }) => (\n  <form onSubmit={handleAddState} className=\"mb-6 grid grid-cols-1 gap-4\">\n    <input\n      type=\"text\"\n      placeholder=\"New State\"\n      value={newState}\n      onChange={(e) => setNewState(e.target.value)}\n      className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n      required\n    />\n    <button\n      type=\"submit\"\n      className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n    >\n      Add State\n    </button>\n  </form>\n);\n\nexport default AddStateForm;","import React from 'react';\nimport Select from 'react-select';\n\nconst AddCityForm = ({\n  states,\n  newCity,\n  setNewCity,\n  newCityState,\n  setNewCityState,\n  handleAddCity,\n}) => (\n  <form onSubmit={handleAddCity} className=\"mb-6 grid grid-cols-1 gap-4\">\n    <Select\n      options={states}\n      value={newCityState}\n      onChange={setNewCityState}\n      className=\"w-full mb-4\"\n      placeholder=\"Select State for New City\"\n    />\n    <input\n      type=\"text\"\n      placeholder=\"New City\"\n      value={newCity}\n      onChange={(e) => setNewCity(e.target.value)}\n      className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n      required\n    />\n    <button\n      type=\"submit\"\n      className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n    >\n      Add City\n    </button>\n  </form>\n);\n\nexport default AddCityForm;","import React, { useState, useEffect, useCallback } from 'react';\nimport Select from 'react-select';\nimport AdminNavbar from '../components/layout/AdminNavbar';\nimport StateSelect from '../components/common/StateSelect';\nimport CitySelect from '../components/common/CitySelect';\nimport RateForm from '../components/admin/RateForm';\nimport AddStateForm from '../components/admin/AddStateForm';\nimport AddCityForm from '../components/admin/AddCityForm';\nimport RateTable from '../components/rates/RateTable';\n\nconst AdminPage = ({ setIsAuthenticated }) => {\n  const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n  const [eggRate, setEggRate] = useState({ date: today, rate: '' });\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [eggRates, setEggRates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortConfig, setSortConfig] = useState({ key: 'city', direction: 'ascending' });\n  const [states, setStates] = useState([]);\n  const [selectedState, setSelectedState] = useState(null);\n  const [newState, setNewState] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newCityState, setNewCityState] = useState(null);\n  const [removeState, setRemoveState] = useState('');\n  const [removeCity, setRemoveCity] = useState(null);\n  const [removeCityState, setRemoveCityState] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(today);\n  \n  // Define fetchEggRates function to get egg rates data\n  const fetchEggRates = useCallback(() => {\n    setLoading(true);\n    fetch(`/php/api/rates/get_all_rates.php?date=${selectedDate}`)\n      .then(res => res.json())\n      .then(data => {\n        setEggRates(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching rates:', error);\n        setError(error);\n        setLoading(false);\n      });\n  }, [selectedDate]);\n  \n  // Define fetchCitiesAndStates function to get location data\n  const fetchCitiesAndStates = useCallback(() => {\n    fetch('/php/api/location/get_states_and_cities.php')\n      .then(res => res.json())\n      .then(data => {\n        const combinedOptions = [];\n        const stateOptions = [];\n        for (const state in data) {\n          stateOptions.push({ value: state, label: state });\n          combinedOptions.push({\n            value: state,\n            label: state,\n            type: 'state',\n          });\n          data[state].forEach(city => {\n            combinedOptions.push({\n              value: `${city}-${state}`, // Ensure unique value\n              label: `${city}, ${state}`,\n              type: 'city',\n            });\n          });\n        }\n        setOptions(combinedOptions);\n        setStates(stateOptions);\n      })\n      .catch(error => console.error('Error fetching states and cities:', error));\n  }, []);\n\n  // Use fetchEggRates in useEffect instead of duplicate code\n  useEffect(() => {\n    fetchEggRates();\n  }, [fetchEggRates]);\n\n  // Use fetchCitiesAndStates in useEffect\n  useEffect(() => {\n    fetchCitiesAndStates();\n  }, [fetchCitiesAndStates]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const payload = selectedOptions.map(option => {\n      const [cityName, state] = option.type === 'city' ? option.label.split(', ') : [null, option.value];\n      return {\n        city: cityName,\n        state: state || '', // Ensure state is not null\n        date: eggRate.date,\n        rate: eggRate.rate,\n        type: option.type,\n      };\n    });\n\n    fetch('/php/api/rates/update_multiple_rates.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload),\n    })\n      .then(res => res.json())\n      .then(response => {\n        fetchEggRates(); // Refresh the list of egg rates\n        resetForm(); // Reset form\n      })\n      .catch(error => console.error(\"Error submitting data:\", error));\n  };\n\n  const handleDelete = (rate) => {\n    fetch('/php/api/rates/delete_rate.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: rate.id }), // Send ID for deletion\n    })\n      .then(res => res.json())\n      .then(response => {\n        fetchEggRates(); // Refresh the list of egg rates\n      })\n      .catch(error => console.error(\"Error deleting item:\", error));\n  };\n\n  const handleSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedEggRates = React.useMemo(() => {\n    let sortableRates = [...eggRates];\n    sortableRates.sort((a, b) => {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? -1 : 1;\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n    return sortableRates;\n  }, [eggRates, sortConfig]);\n\n  const handleStateChange = (selectedState) => {\n    setSelectedState(selectedState);\n    setSelectedOptions([]); // Reset selected options\n    const stateOptions = options.filter(option => option.type === 'city' && option.label.includes(selectedState.value));\n    setSelectedOptions(stateOptions);\n  };\n\n  const handleSelectAll = () => {\n    const allCities = options.filter(option => option.type === 'city');\n    setSelectedOptions(allCities);\n  };\n\n  const handleCopyPreviousRates = () => {\n    if (selectedOptions.length === 0) {\n      alert('Please select at least one city.');\n      return;\n    }\n  \n    const fetchLatestRates = async (cities) => {\n      console.log('Fetching latest rates for cities:', cities);\n      const response = await fetch('/php/api/rates/get_latest_rates.php', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(cities),\n      });\n      const data = await response.json();\n      console.log('Fetched latest rates:', data);\n      return data;\n    };\n  \n    const updateRates = async () => {\n      const cities = selectedOptions\n        .filter(option => option.type === 'city') // Ensure only cities are selected\n        .map(option => {\n          const [cityName, state] = option.label.split(', ');\n          return { city: cityName, state: state };\n        });\n  \n      console.log('Selected cities for updating rates:', cities);\n  \n      const latestRates = await fetchLatestRates(cities);\n  \n      const payload = latestRates.map(rate => ({\n        city: rate.city,\n        state: rate.state,\n        date: eggRate.date,\n        rate: rate.rate || eggRate.rate,\n        type: 'city',\n      }));\n  \n      console.log('Payload for updating rates:', payload);\n  \n      fetch('/php/api/rates/update_multiple_rates.php', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n      })\n        .then(res => res.json())\n        .then(response => {\n          console.log('Response from updating rates:', response);\n          fetchEggRates(); // Refresh the list of egg rates\n          resetForm(); // Reset form\n        })\n        .catch(error => console.error(\"Error submitting data:\", error));\n    };\n  \n    updateRates();\n  };\n\n  const handleAddState = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/add_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'state', name: newState }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setNewState(''); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error adding state:\", error));\n  };\n\n  const handleAddCity = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/add_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'city', name: newCity, state: newCityState.value }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setNewCity(''); // Reset form\n          setNewCityState(null); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error adding city:\", error));\n  };\n\n  const handleRemoveState = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/remove_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'state', name: removeState }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setRemoveState(''); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error removing state:\", error));\n  };\n\n  const handleRemoveCity = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/remove_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'city', name: removeCity.label.split(', ')[0], state: removeCityState.value }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setRemoveCity(null); // Reset form\n          setRemoveCityState(null); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error removing city:\", error));\n  };\n\n  const handleEditRate = (rate) => {\n    const updatedRates = eggRates.map(r => r.id === rate.id ? rate : r);\n    setEggRates(updatedRates);\n  \n    // Send the updated rate to the backend\n    fetch('/php/api/rates/update_rate.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(rate),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchEggRates(); // Refresh the list of egg rates\n        } else {\n          console.error(\"Error updating rate:\", response.error);\n        }\n      })\n      .catch(error => console.error(\"Error updating rate:\", error));\n  };\n\n  const resetForm = () => {\n    setEggRate({ date: today, rate: '' });\n    setSelectedOptions([]);\n    setSelectedState(null);\n    setRemoveState('');\n    setRemoveCity(null);\n    setRemoveCityState(null);\n    setNewState('');\n    setNewCity('');\n    setNewCityState(null);\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error loading data: {error.message}</div>;\n\n  return (\n    <>\n      <AdminNavbar setIsAuthenticated={setIsAuthenticated} />\n      <div className=\"p-6 bg-gray-100 min-h-screen\">\n        <div className=\"max-w-4xl mx-auto bg-white p-8 rounded-lg shadow-md\">\n          <h1 className=\"text-3xl font-bold mb-6 text-center text-blue-600\">Admin Egg Rate Management</h1>\n          <div className=\"mb-6\">\n            <StateSelect\n              states={states}\n              selectedState={selectedState}\n              handleStateChange={handleStateChange}\n            />\n            <CitySelect\n              options={options}\n              selectedOptions={selectedOptions}\n              setSelectedOptions={setSelectedOptions}\n            />\n            <RateForm\n              eggRate={eggRate}\n              setEggRate={setEggRate}\n              handleSubmit={handleSubmit}\n              handleSelectAll={handleSelectAll}\n              handleCopyPreviousRates={handleCopyPreviousRates}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Add New State</h2>\n            <AddStateForm\n              newState={newState}\n              setNewState={setNewState}\n              handleAddState={handleAddState}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Add New City</h2>\n            <AddCityForm\n              states={states}\n              newCity={newCity}\n              setNewCity={setNewCity}\n              newCityState={newCityState}\n              setNewCityState={setNewCityState}\n              handleAddCity={handleAddCity}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Remove State</h2>\n            <form onSubmit={handleRemoveState} className=\"mb-6 grid grid-cols-1 gap-4\">\n              <Select\n                options={states}\n                value={states.find(state => state.value === removeState)}\n                onChange={(selectedOption) => setRemoveState(selectedOption.value)}\n                className=\"w-full mb-4\"\n                placeholder=\"Select State to Remove\"\n              />\n              <button type=\"submit\" className=\"bg-red-600 text-white p-3 rounded w-full hover:bg-red-700 transition\">\n                Remove State\n              </button>\n            </form>\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Remove City</h2>\n            <form onSubmit={handleRemoveCity} className=\"mb-6 grid grid-cols-1 gap-4\">\n              <Select\n                options={states}\n                value={states.find(state => state.value === removeCityState?.value)}\n                onChange={setRemoveCityState}\n                className=\"w-full mb-4\"\n                placeholder=\"Select State for City to Remove\"\n              />\n              <Select\n                options={options.filter(option => option.type === 'city' && option.label.includes(removeCityState?.value))}\n                value={removeCity}\n                onChange={setRemoveCity}\n                className=\"w-full mb-4\"\n                placeholder=\"Select City to Remove\"\n              />\n              <button type=\"submit\" className=\"bg-red-600 text-white p-3 rounded w-full hover:bg-red-700 transition\">\n                Remove City\n              </button>\n            </form>\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Current Egg Rates</h2>\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"date\">\n              Select Date\n            </label>\n            <input\n              type=\"date\"\n              id=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n            />\n          </div>          <RateTable \n            rates={sortedEggRates}\n            showAdmin={true}\n            showState={true}\n            showDate={true}\n            showChart={false}\n            showPriceColumns={false}\n            handleSort={handleSort}\n            onEdit={handleEditRate}\n            onDelete={handleDelete}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdminPage;"],"names":["_ref","eggRate","setEggRate","handleSubmit","handleSelectAll","handleCopyPreviousRates","_jsxs","onSubmit","className","children","_jsx","type","onClick","value","date","onChange","e","_objectSpread","target","required","placeholder","rate","RateTable","rates","itemsPerPage","showAdmin","onDelete","onEdit","handleSort","externalHandleSort","showState","showDate","showPriceColumns","selectedCity","selectedState","currentPage","setCurrentPage","useState","sortConfig","setSortConfig","key","direction","isTableVisible","setIsTableVisible","useCallback","prevConfig","sortedRates","useMemo","sort","a","b","aVal","bVal","handlePageClick","pageNumber","totalPages","Math","ceil","length","indexOfLastItem","indexOfFirstItem","currentItems","slice","useEffect","observer","IntersectionObserver","_ref2","entry","isIntersecting","disconnect","threshold","tableContainer","document","querySelector","observe","renderPaginationControls","pages","i","push","concat","generateStructuredData","_sortedRates$","localBusinessSchema","toLowerCase","Date","setDate","getDate","toISOString","split","JSON","stringify","_Fragment","map","index","state","city","toLocaleDateString","toFixed","id","memo","setIsAuthenticated","navigate","useNavigate","Link","to","handleLogout","states","handleStateChange","Select","options","selectedOptions","setSelectedOptions","uniqueOptions","Array","from","Set","option","find","isMulti","styles","control","base","backgroundColor","borderColor","boxShadow","padding","borderRadius","menu","zIndex","color","newState","setNewState","handleAddState","newCity","setNewCity","newCityState","setNewCityState","handleAddCity","today","setOptions","eggRates","setEggRates","loading","setLoading","error","setError","setStates","setSelectedState","removeState","setRemoveState","removeCity","setRemoveCity","removeCityState","setRemoveCityState","selectedDate","setSelectedDate","fetchEggRates","fetch","then","res","json","data","catch","console","fetchCitiesAndStates","combinedOptions","stateOptions","label","forEach","sortedEggRates","React","sortableRates","resetForm","message","AdminNavbar","StateSelect","filter","includes","CitySelect","RateForm","preventDefault","payload","cityName","method","headers","body","response","allCities","alert","async","cities","log","latestRates","fetchLatestRates","updateRates","AddStateForm","name","success","AddCityForm","selectedOption","htmlFor","showChart","updatedRates","r"],"sourceRoot":""}