{"version":3,"file":"static/js/main.f08c8c69.js","mappings":"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","sources":["components/common/OptimizedImage.js","reportWebVitals.js","index.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst OptimizedImage = ({ src, alt, className = '', width, height }) => {\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const imgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ \n    width: width || 0, \n    height: height || 0 \n  });\n\n  // Early load image dimensions if not provided\n  useEffect(() => {\n    if (!width || !height) {\n      const img = new Image();\n      img.src = src;\n      \n      // Use native browser lazy loading hint\n      if ('loading' in HTMLImageElement.prototype) {\n        img.loading = 'lazy';\n      }\n      \n      img.onload = () => {\n        setDimensions({ \n          width: img.naturalWidth, \n          height: img.naturalHeight \n        });\n        setImageLoaded(true);\n        setLoaded(true);\n      };\n      \n      img.onerror = () => {\n        setError(true);\n      };\n    } else {\n      setDimensions({ width, height });\n      setImageLoaded(true);\n    }\n  }, [src, width, height]);\n\n  // Extract Tailwind dimensions\n  const hasTailwindDimensions = /w-\\d+|h-\\d+/.test(className);\n  const aspectRatio = imageLoaded ? (dimensions.height / dimensions.width) * 100 : 56.25;\n\n  // Calculate sizes attribute based on responsive classes\n  const getSizes = () => {\n    if (className.includes('w-full')) return '100vw';\n    if (className.match(/w-(\\d+)\\/(\\d+)/)) {\n      const [, num, den] = className.match(/w-(\\d+)\\/(\\d+)/);\n      return `${(num / den) * 100}vw`;\n    }\n    return '100vw';\n  };\n\n  return (\n    <div \n      className={`relative overflow-hidden ${hasTailwindDimensions ? '' : 'w-full'}`}\n      style={{ \n        width: width ? `${width}px` : '100%',\n        aspectRatio: dimensions.width && dimensions.height ? \n          `${dimensions.width}/${dimensions.height}` : '16/9',\n        contain: 'layout paint style'\n      }}\n    >\n      <div\n        style={{ \n          paddingTop: `${aspectRatio}%`,\n          contain: 'strict'\n        }}\n        className={`${error ? 'bg-gray-200' : 'bg-gray-100'}`}\n        aria-hidden=\"true\"\n      />\n      {!error && imageLoaded && (\n        <img\n          ref={imgRef}\n          src={src}\n          alt={alt}\n          width={dimensions.width || undefined}\n          height={dimensions.height || undefined}\n          className={`absolute top-0 left-0 w-full h-full object-cover ${className} ${\n            !loaded ? 'opacity-0' : 'opacity-100'\n          } transition-opacity duration-300 will-change-transform`}\n          loading=\"lazy\"\n          decoding=\"async\"\n          sizes={getSizes()}\n          fetchpriority={/hero|logo|banner/.test(className.toLowerCase()) ? 'high' : 'auto'}\n          onLoad={() => {\n            setLoaded(true);\n            // Force layout recalculation\n            if (imgRef.current) {\n              imgRef.current.style.transform = 'translateZ(0)';\n            }\n          }}\n          onError={(e) => {\n            setError(true);\n            e.target.onerror = null;\n            e.target.src = '/logo.webp';\n          }}\n          style={{\n            contain: 'layout paint style',\n            willChange: 'transform',\n            transform: 'translateZ(0)'\n          }}\n        />\n      )}\n      {error && (\n        <div className=\"absolute top-0 left-0 w-full h-full flex items-center justify-center text-gray-500\">\n          <span>Image not available</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OptimizedImage;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense, lazy } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport OptimizedImage from './components/common/OptimizedImage';\n\n// Enhanced loading component\nconst LoadingFallback = () => (\n  <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n    <div className=\"text-center animate-fade-in\">\n      <div className=\"w-16 h-16 mb-4 mx-auto\">        <OptimizedImage \n          src=\"/logo.webp\"\n          alt=\"Loading...\"\n          className=\"w-full h-full object-contain\"\n          width={64}\n          height={64}\n          fetchpriority=\"high\"\n        />\n      </div>\n      <h2 className=\"text-xl font-semibold text-blue-600 mb-2 animate-slide-up\">\n        Loading Today's Egg Rates...\n      </h2>\n      <p className=\"text-gray-600 animate-slide-up\" style={{ animationDelay: '100ms' }}>\n        Please wait while we fetch the latest egg prices\n      </p>\n    </div>\n  </div>\n);\n\n// Progressive enhancement setup\nconst setupProgressiveEnhancement = async () => {\n  // Detect browser capabilities\n  const hasIntersectionObserver = 'IntersectionObserver' in window;\n  const hasIdleCallback = 'requestIdleCallback' in window;\n  \n  // Load polyfills if needed\n  if (!hasIntersectionObserver) {\n    await import('intersection-observer');\n  }\n  if (!hasIdleCallback) {\n    await import('requestidlecallback-polyfill');\n  }\n\n  // Preload critical assets\n  const preloadAssets = () => {\n    const criticalImages = ['/eggpic.webp', '/logo.webp'];\n    criticalImages.forEach(src => {\n      const img = new Image();\n      img.src = src;\n    });\n  };\n\n  // Initialize after preloading\n  const initializeApp = () => {\n    // Setup performance monitoring\n    if ('PerformanceObserver' in window) {\n      const observer = new PerformanceObserver((list) => {\n        list.getEntries().forEach(entry => {\n          if (entry.entryType === 'web-vital') {\n            reportWebVitals({\n              name: entry.name,\n              value: entry.value,\n              delta: entry.delta\n            });\n          }\n        });\n      });\n      observer.observe({ entryTypes: ['web-vital', 'layout-shift', 'largest-contentful-paint'] });\n    }\n  };\n\n  // Execute initialization\n  if ('requestIdleCallback' in window) {\n    requestIdleCallback(() => {\n      preloadAssets();\n      initializeApp();\n    });\n  } else {\n    setTimeout(() => {\n      preloadAssets();\n      initializeApp();\n    }, 1);\n  }\n};\n\n// Load App with optimizations\nconst App = lazy(() => import('./App').then(module => {\n  setupProgressiveEnhancement();\n  return module;\n}));\n\n// Create root and render\nReactDOM.createRoot(document.getElementById('root')).render(\n  <Suspense fallback={<LoadingFallback />}>\n    <App />\n  </Suspense>\n);\n\n// Monitor and report vitals\nreportWebVitals(metric => {\n  // Log to console in development\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`${metric.name}:`, metric.value);\n  }\n  \n  // Report to analytics in production\n  if (process.env.NODE_ENV === 'production' && window.gtag) {\n    window.gtag('event', 'web_vitals', {\n      metric_name: metric.name,\n      metric_value: Math.round(metric.value),\n      metric_delta: Math.round(metric.delta || 0),\n      metric_rating: metric.rating\n    });\n  }\n});\n"],"names":["_ref","src","alt","className","width","height","loaded","setLoaded","useState","error","setError","imageLoaded","setImageLoaded","imgRef","useRef","dimensions","setDimensions","useEffect","img","Image","HTMLImageElement","prototype","loading","onload","naturalWidth","naturalHeight","onerror","hasTailwindDimensions","test","aspectRatio","_jsxs","concat","style","contain","children","_jsx","paddingTop","ref","undefined","decoding","sizes","getSizes","includes","match","num","den","fetchpriority","toLowerCase","onLoad","current","transform","onError","e","target","willChange","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LoadingFallback","OptimizedImage","animationDelay","App","lazy","module","async","hasIntersectionObserver","window","hasIdleCallback","preloadAssets","forEach","initializeApp","PerformanceObserver","list","getEntries","entry","entryType","reportWebVitals","name","value","delta","observe","entryTypes","requestIdleCallback","setTimeout","setupProgressiveEnhancement","ReactDOM","document","getElementById","render","Suspense","fallback","metric","gtag","metric_name","metric_value","Math","round","metric_delta","metric_rating","rating"],"sourceRoot":""}