{"version":3,"file":"static/js/admin.e6eb744a.chunk.js","mappings":"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","sources":["components/admin/LoginPage.js","components/layout/AdminNavbar.js","components/common/StateSelect.js","components/common/CitySelect.js","components/admin/RateForm.js","components/admin/AddStateForm.js","components/admin/AddCityForm.js","components/rates/EggRatesTable.js","pages/AdminPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginPage = ({ setIsAuthenticated }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    // Example credentials check (replace with actual logic)\n    if (username === \"lokeshsinghsodha28\" && password === \"Sodha@111\") {\n      setIsAuthenticated(true);\n      navigate(\"/admin\");\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-r from-blue-500 to-purple-600 p-4 sm:p-6 lg:p-8\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\n        <h1 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">\n          Login\n        </h1>\n        <form onSubmit={handleLogin}>\n          <div className=\"mb-4\">\n            <label\n              className=\"block text-sm font-medium text-gray-700\"\n              htmlFor=\"username\"\n            >\n              Username\n            </label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              placeholder=\"Enter your username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-200\"\n            />\n          </div>\n          <div className=\"mb-6\">\n            <label\n              className=\"block text-sm font-medium text-gray-700\"\n              htmlFor=\"password\"\n            >\n              Password\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"Enter your password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-200\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"w-full py-2 px-4 bg-indigo-600 text-white font-bold rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-200\"\n          >\n            Login\n          </button>\n          <div className=\"mt-4 text-center\">\n            <a\n              href=\"/forgot-password\"\n              className=\"text-indigo-600 hover:text-indigo-700 transition duration-200\"\n            >\n              Forgot Password?\n            </a>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst AdminNavbar = ({setIsAuthenticated}) => {\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  return (\n    <nav className=\"bg-gray-800 p-4 shadow-lg\">\n      <div className=\"container mx-auto flex justify-between items-center\">\n        <div>\n          <Link to=\"/admin\" className=\"text-white text-2xl font-bold\">Admin Dashboard</Link>\n        </div>\n        <div className=\"flex space-x-4\">\n          <button \n            onClick={handleLogout} \n            className=\"text-white bg-red-600 hover:bg-red-700 px-4 py-2 rounded transition duration-150 ease-in-out\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default AdminNavbar;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst StateSelect = ({ states, selectedState, handleStateChange }) => (\n  <Select\n    options={states}\n    value={selectedState}\n    onChange={handleStateChange}\n    className=\"w-full mb-4\"\n    placeholder=\"Select State\"\n  />\n);\n\nexport default StateSelect;","import React from 'react';\nimport Select from 'react-select';\n\nconst CitySelect = ({ options, selectedOptions, setSelectedOptions }) => {\n  // Remove duplicate cities from options\n  const uniqueOptions = Array.from(new Set(options.map(option => option.value)))\n    .map(value => options.find(option => option.value === value));\n\n  return (\n    <Select\n      isMulti\n      options={uniqueOptions}\n      value={selectedOptions}\n      onChange={setSelectedOptions}\n      className=\"w-full\"\n      styles={{\n        control: (base) => ({\n          ...base,\n          backgroundColor: 'white',\n          borderColor: 'transparent',\n          boxShadow: 'none',\n          '&:hover': {\n            borderColor: 'transparent',\n          },\n          padding: '0.5rem', // Add padding for better touch target\n          borderRadius: '0.375rem', // Tailwind rounded\n        }),\n        menu: (base) => ({\n          ...base,\n          zIndex: 9999,\n        }),\n        placeholder: (base) => ({\n          ...base,\n          color: '#A0AEC0', // Placeholder color for better contrast\n        }),\n      }}\n      placeholder=\"Select Cities, States\"\n    />\n  );\n};\n\nexport default CitySelect;","import React from 'react';\n\nconst RateForm = ({\n  eggRate,\n  setEggRate,\n  handleSubmit,\n  handleSelectAll,\n  handleCopyPreviousRates,\n}) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-6 grid grid-cols-1 gap-4\">\n      <button\n        type=\"button\"\n        onClick={handleSelectAll}\n        className=\"bg-green-600 text-white p-3 rounded w-full hover:bg-green-700 transition\"\n      >\n        Select All Cities\n      </button>\n      <input\n        type=\"date\"\n        value={eggRate.date}\n        onChange={(e) => setEggRate({ ...eggRate, date: e.target.value })}\n        className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n        required\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Rate\"\n        value={eggRate.rate}\n        onChange={(e) => setEggRate({ ...eggRate, rate: e.target.value })}\n        className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n        required\n      />\n      <button\n        type=\"submit\"\n        className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n      >\n        Update Rates\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleCopyPreviousRates}\n        className=\"bg-yellow-600 text-white p-3 rounded w-full hover:bg-yellow-700 transition\"\n      >\n        Copy Previous Rates\n      </button>\n    </form>\n  );\n};\n\nexport default RateForm;","import React from 'react';\n\nconst AddStateForm = ({ newState, setNewState, handleAddState }) => (\n  <form onSubmit={handleAddState} className=\"mb-6 grid grid-cols-1 gap-4\">\n    <input\n      type=\"text\"\n      placeholder=\"New State\"\n      value={newState}\n      onChange={(e) => setNewState(e.target.value)}\n      className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n      required\n    />\n    <button\n      type=\"submit\"\n      className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n    >\n      Add State\n    </button>\n  </form>\n);\n\nexport default AddStateForm;","import React from 'react';\nimport Select from 'react-select';\n\nconst AddCityForm = ({\n  states,\n  newCity,\n  setNewCity,\n  newCityState,\n  setNewCityState,\n  handleAddCity,\n}) => (\n  <form onSubmit={handleAddCity} className=\"mb-6 grid grid-cols-1 gap-4\">\n    <Select\n      options={states}\n      value={newCityState}\n      onChange={setNewCityState}\n      className=\"w-full mb-4\"\n      placeholder=\"Select State for New City\"\n    />\n    <input\n      type=\"text\"\n      placeholder=\"New City\"\n      value={newCity}\n      onChange={(e) => setNewCity(e.target.value)}\n      className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n      required\n    />\n    <button\n      type=\"submit\"\n      className=\"bg-blue-600 text-white p-3 rounded w-full hover:bg-blue-700 transition\"\n    >\n      Add City\n    </button>\n  </form>\n);\n\nexport default AddCityForm;","import React, { useState } from 'react';\n\nconst EggRatesTable = ({ sortedEggRates, handleSort, setEggRate, handleDelete, handleEditRate }) => {\n  const [editingRate, setEditingRate] = useState(null);\n  const [editedRate, setEditedRate] = useState({});\n\n  const handleEditClick = (rate) => {\n    setEditingRate(rate.id);\n    setEditedRate(rate);\n  };\n\n  const handleSaveClick = () => {\n    handleEditRate(editedRate);\n    setEditingRate(null);\n  };\n\n  const handleCancelClick = () => {\n    setEditingRate(null);\n    setEditedRate({});\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setEditedRate((prevRate) => ({\n      ...prevRate,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full bg-white border border-gray-300\">\n        <thead>\n          <tr className=\"bg-gray-200\">\n            <th\n              className=\"border border-gray-300 p-3 text-left cursor-pointer\"\n              onClick={() => handleSort('city')}\n            >\n              City\n            </th>\n            <th\n              className=\"border border-gray-300 p-3 text-left cursor-pointer\"\n              onClick={() => handleSort('state')}\n            >\n              State\n            </th>\n            <th\n              className=\"border border-gray-300 p-3 text-left cursor-pointer\"\n              onClick={() => handleSort('date')}\n            >\n              Date\n            </th>\n            <th\n              className=\"border border-gray-300 p-3 text-left cursor-pointer\"\n              onClick={() => handleSort('rate')}\n            >\n              Rate\n            </th>\n            <th className=\"border border-gray-300 p-3 text-left\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedEggRates.map((rate) => (\n            <tr key={`${rate.city}-${rate.state}-${rate.date}`} className=\"hover:bg-gray-100\">\n              <td className=\"border border-gray-300 p-3\">{rate.city}</td>\n              <td className=\"border border-gray-300 p-3\">{rate.state}</td>\n              <td className=\"border border-gray-300 p-3\">\n                {editingRate === rate.id ? (\n                  <input\n                    type=\"date\"\n                    name=\"date\"\n                    value={editedRate.date}\n                    onChange={handleChange}\n                    className=\"border border-gray-300 p-2 rounded w-full\"\n                  />\n                ) : (\n                  rate.date\n                )}\n              </td>\n              <td className=\"border border-gray-300 p-3\">\n                {editingRate === rate.id ? (\n                  <input\n                    type=\"number\"\n                    name=\"rate\"\n                    value={editedRate.rate}\n                    onChange={handleChange}\n                    className=\"border border-gray-300 p-2 rounded w-full\"\n                  />\n                ) : (\n                  `$${rate.rate}`\n                )}\n              </td>\n              <td className=\"border border-gray-300 p-3 flex space-x-2\">\n                {editingRate === rate.id ? (\n                  <>\n                    <button\n                      onClick={handleSaveClick}\n                      className=\"bg-green-500 text-white p-2 rounded hover:bg-green-600 transition\"\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={handleCancelClick}\n                      className=\"bg-gray-500 text-white p-2 rounded hover:bg-gray-600 transition\"\n                    >\n                      Cancel\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <button\n                      onClick={() => handleEditClick(rate)}\n                      className=\"bg-yellow-500 text-white p-2 rounded hover:bg-yellow-600 transition\"\n                    >\n                      Edit\n                    </button>\n                    <button\n                      onClick={() => handleDelete(rate)}\n                      className=\"bg-red-500 text-white p-2 rounded hover:bg-red-600 transition\"\n                    >\n                      Delete\n                    </button>\n                  </>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default EggRatesTable;","import React, { useState, useEffect, useCallback } from 'react';\nimport Select from 'react-select';\nimport AdminNavbar from '../components/layout/AdminNavbar';\nimport StateSelect from '../components/common/StateSelect';\nimport CitySelect from '../components/common/CitySelect';\nimport RateForm from '../components/admin/RateForm';\nimport AddStateForm from '../components/admin/AddStateForm';\nimport AddCityForm from '../components/admin/AddCityForm';\nimport EggRatesTable from '../components/rates/EggRatesTable';\n\nconst AdminPage = ({ setIsAuthenticated }) => {\n  const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n  const [eggRate, setEggRate] = useState({ date: today, rate: '' });\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [eggRates, setEggRates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortConfig, setSortConfig] = useState({ key: 'city', direction: 'ascending' });\n  const [states, setStates] = useState([]);\n  const [selectedState, setSelectedState] = useState(null);\n  const [newState, setNewState] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [newCityState, setNewCityState] = useState(null);\n  const [removeState, setRemoveState] = useState('');\n  const [removeCity, setRemoveCity] = useState(null);\n  const [removeCityState, setRemoveCityState] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(today);\n  \n  // Define fetchEggRates function to get egg rates data\n  const fetchEggRates = useCallback(() => {\n    setLoading(true);\n    fetch(`/php/api/rates/get_all_rates.php?date=${selectedDate}`)\n      .then(res => res.json())\n      .then(data => {\n        setEggRates(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching rates:', error);\n        setError(error);\n        setLoading(false);\n      });\n  }, [selectedDate]);\n  \n  // Define fetchCitiesAndStates function to get location data\n  const fetchCitiesAndStates = useCallback(() => {\n    fetch('/php/api/location/get_states_and_cities.php')\n      .then(res => res.json())\n      .then(data => {\n        const combinedOptions = [];\n        const stateOptions = [];\n        for (const state in data) {\n          stateOptions.push({ value: state, label: state });\n          combinedOptions.push({\n            value: state,\n            label: state,\n            type: 'state',\n          });\n          data[state].forEach(city => {\n            combinedOptions.push({\n              value: `${city}-${state}`, // Ensure unique value\n              label: `${city}, ${state}`,\n              type: 'city',\n            });\n          });\n        }\n        setOptions(combinedOptions);\n        setStates(stateOptions);\n      })\n      .catch(error => console.error('Error fetching states and cities:', error));\n  }, []);\n\n  // Use fetchEggRates in useEffect instead of duplicate code\n  useEffect(() => {\n    fetchEggRates();\n  }, [fetchEggRates]);\n\n  // Use fetchCitiesAndStates in useEffect\n  useEffect(() => {\n    fetchCitiesAndStates();\n  }, [fetchCitiesAndStates]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const payload = selectedOptions.map(option => {\n      const [cityName, state] = option.type === 'city' ? option.label.split(', ') : [null, option.value];\n      return {\n        city: cityName,\n        state: state || '', // Ensure state is not null\n        date: eggRate.date,\n        rate: eggRate.rate,\n        type: option.type,\n      };\n    });\n\n    fetch('/php/api/rates/update_multiple_rates.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload),\n    })\n      .then(res => res.json())\n      .then(response => {\n        fetchEggRates(); // Refresh the list of egg rates\n        resetForm(); // Reset form\n      })\n      .catch(error => console.error(\"Error submitting data:\", error));\n  };\n\n  const handleDelete = (rate) => {\n    fetch('/php/api/rates/delete_rate.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: rate.id }), // Send ID for deletion\n    })\n      .then(res => res.json())\n      .then(response => {\n        fetchEggRates(); // Refresh the list of egg rates\n      })\n      .catch(error => console.error(\"Error deleting item:\", error));\n  };\n\n  const handleSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedEggRates = React.useMemo(() => {\n    let sortableRates = [...eggRates];\n    sortableRates.sort((a, b) => {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? -1 : 1;\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n    return sortableRates;\n  }, [eggRates, sortConfig]);\n\n  const handleStateChange = (selectedState) => {\n    setSelectedState(selectedState);\n    setSelectedOptions([]); // Reset selected options\n    const stateOptions = options.filter(option => option.type === 'city' && option.label.includes(selectedState.value));\n    setSelectedOptions(stateOptions);\n  };\n\n  const handleSelectAll = () => {\n    const allCities = options.filter(option => option.type === 'city');\n    setSelectedOptions(allCities);\n  };\n\n  const handleCopyPreviousRates = () => {\n    if (selectedOptions.length === 0) {\n      alert('Please select at least one city.');\n      return;\n    }\n  \n    const fetchLatestRates = async (cities) => {\n      console.log('Fetching latest rates for cities:', cities);\n      const response = await fetch('/php/api/rates/get_latest_rates.php', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(cities),\n      });\n      const data = await response.json();\n      console.log('Fetched latest rates:', data);\n      return data;\n    };\n  \n    const updateRates = async () => {\n      const cities = selectedOptions\n        .filter(option => option.type === 'city') // Ensure only cities are selected\n        .map(option => {\n          const [cityName, state] = option.label.split(', ');\n          return { city: cityName, state: state };\n        });\n  \n      console.log('Selected cities for updating rates:', cities);\n  \n      const latestRates = await fetchLatestRates(cities);\n  \n      const payload = latestRates.map(rate => ({\n        city: rate.city,\n        state: rate.state,\n        date: eggRate.date,\n        rate: rate.rate || eggRate.rate,\n        type: 'city',\n      }));\n  \n      console.log('Payload for updating rates:', payload);\n  \n      fetch('/php/api/rates/update_multiple_rates.php', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n      })\n        .then(res => res.json())\n        .then(response => {\n          console.log('Response from updating rates:', response);\n          fetchEggRates(); // Refresh the list of egg rates\n          resetForm(); // Reset form\n        })\n        .catch(error => console.error(\"Error submitting data:\", error));\n    };\n  \n    updateRates();\n  };\n\n  const handleAddState = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/add_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'state', name: newState }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setNewState(''); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error adding state:\", error));\n  };\n\n  const handleAddCity = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/add_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'city', name: newCity, state: newCityState.value }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setNewCity(''); // Reset form\n          setNewCityState(null); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error adding city:\", error));\n  };\n\n  const handleRemoveState = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/remove_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'state', name: removeState }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setRemoveState(''); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error removing state:\", error));\n  };\n\n  const handleRemoveCity = (e) => {\n    e.preventDefault();\n    fetch('/php/api/location/remove_state_city.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ type: 'city', name: removeCity.label.split(', ')[0], state: removeCityState.value }),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchCitiesAndStates(); // Refresh the list of states and cities\n          setRemoveCity(null); // Reset form\n          setRemoveCityState(null); // Reset form\n        } else {\n          alert(response.error);\n        }\n      })\n      .catch(error => console.error(\"Error removing city:\", error));\n  };\n\n  const handleEditRate = (rate) => {\n    const updatedRates = eggRates.map(r => r.id === rate.id ? rate : r);\n    setEggRates(updatedRates);\n  \n    // Send the updated rate to the backend\n    fetch('/php/api/rates/update_rate.php', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(rate),\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          fetchEggRates(); // Refresh the list of egg rates\n        } else {\n          console.error(\"Error updating rate:\", response.error);\n        }\n      })\n      .catch(error => console.error(\"Error updating rate:\", error));\n  };\n\n  const resetForm = () => {\n    setEggRate({ date: today, rate: '' });\n    setSelectedOptions([]);\n    setSelectedState(null);\n    setRemoveState('');\n    setRemoveCity(null);\n    setRemoveCityState(null);\n    setNewState('');\n    setNewCity('');\n    setNewCityState(null);\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error loading data: {error.message}</div>;\n\n  return (\n    <>\n      <AdminNavbar setIsAuthenticated={setIsAuthenticated} />\n      <div className=\"p-6 bg-gray-100 min-h-screen\">\n        <div className=\"max-w-4xl mx-auto bg-white p-8 rounded-lg shadow-md\">\n          <h1 className=\"text-3xl font-bold mb-6 text-center text-blue-600\">Admin Egg Rate Management</h1>\n          <div className=\"mb-6\">\n            <StateSelect\n              states={states}\n              selectedState={selectedState}\n              handleStateChange={handleStateChange}\n            />\n            <CitySelect\n              options={options}\n              selectedOptions={selectedOptions}\n              setSelectedOptions={setSelectedOptions}\n            />\n            <RateForm\n              eggRate={eggRate}\n              setEggRate={setEggRate}\n              handleSubmit={handleSubmit}\n              handleSelectAll={handleSelectAll}\n              handleCopyPreviousRates={handleCopyPreviousRates}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Add New State</h2>\n            <AddStateForm\n              newState={newState}\n              setNewState={setNewState}\n              handleAddState={handleAddState}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Add New City</h2>\n            <AddCityForm\n              states={states}\n              newCity={newCity}\n              setNewCity={setNewCity}\n              newCityState={newCityState}\n              setNewCityState={setNewCityState}\n              handleAddCity={handleAddCity}\n            />\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Remove State</h2>\n            <form onSubmit={handleRemoveState} className=\"mb-6 grid grid-cols-1 gap-4\">\n              <Select\n                options={states}\n                value={states.find(state => state.value === removeState)}\n                onChange={(selectedOption) => setRemoveState(selectedOption.value)}\n                className=\"w-full mb-4\"\n                placeholder=\"Select State to Remove\"\n              />\n              <button type=\"submit\" className=\"bg-red-600 text-white p-3 rounded w-full hover:bg-red-700 transition\">\n                Remove State\n              </button>\n            </form>\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Remove City</h2>\n            <form onSubmit={handleRemoveCity} className=\"mb-6 grid grid-cols-1 gap-4\">\n              <Select\n                options={states}\n                value={states.find(state => state.value === removeCityState?.value)}\n                onChange={setRemoveCityState}\n                className=\"w-full mb-4\"\n                placeholder=\"Select State for City to Remove\"\n              />\n              <Select\n                options={options.filter(option => option.type === 'city' && option.label.includes(removeCityState?.value))}\n                value={removeCity}\n                onChange={setRemoveCity}\n                className=\"w-full mb-4\"\n                placeholder=\"Select City to Remove\"\n              />\n              <button type=\"submit\" className=\"bg-red-600 text-white p-3 rounded w-full hover:bg-red-700 transition\">\n                Remove City\n              </button>\n            </form>\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Current Egg Rates</h2>\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"date\">\n              Select Date\n            </label>\n            <input\n              type=\"date\"\n              id=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"border border-gray-300 p-3 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n            />\n          </div>\n          <EggRatesTable\n            sortedEggRates={sortedEggRates}\n            handleSort={handleSort}\n            setEggRate={setEggRate}\n            handleDelete={handleDelete}\n            handleEditRate={handleEditRate}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdminPage;"],"names":["_ref","setIsAuthenticated","username","setUsername","useState","password","setPassword","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","alert","htmlFor","id","type","placeholder","value","onChange","target","href","Link","to","onClick","handleLogout","states","selectedState","handleStateChange","Select","options","selectedOptions","setSelectedOptions","uniqueOptions","Array","from","Set","map","option","find","isMulti","styles","control","base","_objectSpread","backgroundColor","borderColor","boxShadow","padding","borderRadius","menu","zIndex","color","eggRate","setEggRate","handleSubmit","handleSelectAll","handleCopyPreviousRates","date","required","rate","newState","setNewState","handleAddState","newCity","setNewCity","newCityState","setNewCityState","handleAddCity","sortedEggRates","handleSort","handleDelete","handleEditRate","editingRate","setEditingRate","editedRate","setEditedRate","handleSaveClick","handleCancelClick","handleChange","name","prevRate","city","state","concat","_Fragment","handleEditClick","today","Date","toISOString","split","setOptions","eggRates","setEggRates","loading","setLoading","error","setError","sortConfig","setSortConfig","key","direction","setStates","setSelectedState","removeState","setRemoveState","removeCity","setRemoveCity","removeCityState","setRemoveCityState","selectedDate","setSelectedDate","fetchEggRates","useCallback","fetch","then","res","json","data","catch","console","fetchCitiesAndStates","combinedOptions","stateOptions","push","label","forEach","useEffect","React","sortableRates","sort","a","b","resetForm","message","AdminNavbar","StateSelect","filter","includes","CitySelect","RateForm","payload","cityName","method","headers","body","JSON","stringify","response","allCities","length","async","cities","log","latestRates","fetchLatestRates","updateRates","AddStateForm","success","AddCityForm","selectedOption","EggRatesTable","updatedRates","r"],"sourceRoot":""}