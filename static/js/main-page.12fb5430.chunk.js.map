{"version":3,"file":"static/js/main-page.12fb5430.chunk.js","mappings":"kMAIA,MAwGA,EAxGiBA,IAA6C,IAA5C,MAAEC,EAAK,aAAEC,EAAY,cAAEC,GAAeH,EAEtD,MAAMI,EAAc,IAAIH,GAAOI,MAAK,CAACC,EAAGC,IACtC,IAAIC,KAAKD,EAAEE,YAAc,IAAID,KAAKF,EAAEG,cActC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCC,SAAA,EAEtDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,UAAQE,KAAK,sBAAqBH,SAAA,mJAAAI,OAK1BZ,EAAYa,KAAI,CAACC,EAAMC,IAAK,wFAAAH,OAGdG,EAAQ,EAAC,8DAAAH,OACkBE,EAAKE,KAAI,iCAAAJ,OACvCE,EAAKG,MAAK,wCAEpBC,KAAK,KAAI,+CAMpBT,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SA/B/DV,EACI,oCAANc,OAA2Cd,GAClCC,EACH,qCAANa,OAA4Cb,GAErC,gDA8BPU,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uDAAsDC,SAClER,EAAYa,KAAI,CAACC,EAAMC,KACtBN,EAAAA,EAAAA,KAAA,OAAiBF,UAAU,oFAAmFC,UAC5GF,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAACC,GAAE,SAAAR,OAAWE,EAAKE,MAAQT,UAAU,QAAOC,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OACEY,IAAKP,EAAKQ,MACVC,IAAKT,EAAKG,MACVV,UAAU,2BAA0CiB,QAAST,EAAQ,EAAI,QAAU,OACnFU,MAAO,IACPC,OAAQ,OAEVpB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAEM,EAAKG,SAC/DR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAEM,EAAKa,eAChDrB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oCAAmCC,SAAC,eACpDC,EAAAA,EAAAA,KAAA,QAAMmB,SAAUd,EAAKT,WAAYE,UAAU,wBAAuBC,SAC/D,IAAIJ,KAAKU,EAAKT,YAAYwB,mBAAmB,QAAS,CACrDC,KAAM,UACNC,MAAO,QACPC,IAAK,wBAlBPjB,QA6BZjB,GAAgBC,KAChBO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,gCACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iCAAgCC,SAAC,oBAC/CF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,+BAA8BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,mBAAmBb,UAAU,kBAAiBC,SAAC,uBAC5DC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,kBAAkBb,UAAU,kBAAiBC,SAAC,sBAC3DC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,sBAAsBb,UAAU,kBAAiBC,SAAC,0BAC/DC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,oBAAoBb,UAAU,kBAAiBC,SAAC,wBAC7DC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,sBAAsBb,UAAU,kBAAiBC,SAAC,gCAGnEF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iCAAgCC,SAAC,sBAC/CF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,+BAA8BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,cAAcb,UAAU,kBAAiBC,SAAC,4BACvDC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,yBAAyBb,UAAU,kBAAiBC,SAAC,+BAClEC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,eAAeb,UAAU,kBAAiBC,SAAC,uCACxDC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,eAAeb,UAAU,kBAAiBC,SAAC,6CAM9D,C,wDCtGV,MAiHA,EAjHuBZ,IAAkD,IAAjD,IAAEyB,EAAG,IAAEE,EAAG,UAAEhB,EAAY,GAAE,MAAEkB,EAAK,OAAEC,GAAQ9B,EACjE,MAAOqC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BC,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5BG,EAAaC,IAAkBJ,EAAAA,EAAAA,WAAS,GACzCK,GAASC,EAAAA,EAAAA,QAAO,OACfC,EAAYC,IAAiBR,EAAAA,EAAAA,UAAS,CAC3CV,MAAOA,GAAS,EAChBC,OAAQA,GAAU,KAIpBkB,EAAAA,EAAAA,YAAU,KACR,GAAKnB,GAAUC,EAsBbiB,EAAc,CAAElB,QAAOC,WACvBa,GAAe,OAvBM,CACrB,MAAMM,EAAM,IAAIC,MAChBD,EAAIxB,IAAMA,EAGN,YAAa0B,iBAAiBC,YAChCH,EAAIrB,QAAU,QAGhBqB,EAAII,OAAS,KACXN,EAAc,CACZlB,MAAOoB,EAAIK,aACXxB,OAAQmB,EAAIM,gBAEdZ,GAAe,GACfL,GAAU,EAAK,EAGjBW,EAAIO,QAAU,KACZf,GAAS,EAAK,CAElB,CAGA,GACC,CAAChB,EAAKI,EAAOC,IAGhB,MAAM2B,EAAwB,cAAcC,KAAK/C,GAC3CgD,EAAcjB,EAAeI,EAAWhB,OAASgB,EAAWjB,MAAS,IAAM,MAYjF,OACEnB,EAAAA,EAAAA,MAAA,OACEC,UAAS,4BAAAK,OAA8ByC,EAAwB,GAAK,UACpEG,MAAO,CACL/B,MAAOA,EAAK,GAAAb,OAAMa,EAAK,MAAO,OAC9B8B,YAAab,EAAWjB,OAASiB,EAAWhB,OAAM,GAAAd,OAC7C8B,EAAWjB,MAAK,KAAAb,OAAI8B,EAAWhB,QAAW,OAC/C+B,QAAS,sBACTjD,SAAA,EAEFC,EAAAA,EAAAA,KAAA,OACE+C,MAAO,CACLE,WAAW,GAAD9C,OAAK2C,EAAW,KAC1BE,QAAS,UAEXlD,UAAS,GAAAK,OAAKwB,EAAQ,cAAgB,eACtC,cAAY,UAEZA,GAASE,IACT7B,EAAAA,EAAAA,KAAA,OACEkD,IAAKnB,EACLnB,IAAKA,EACLE,IAAKA,EACLE,MAAOiB,EAAWjB,YAASmC,EAC3BlC,OAAQgB,EAAWhB,aAAUkC,EAC7BrD,UAAS,oDAAAK,OAAsDL,EAAS,KAAAK,OACrEqB,EAAuB,cAAd,YAA2B,0DAEvCT,QAAQ,OACRqC,SAAS,QACTC,MAvCSC,MACf,GAAIxD,EAAUyD,SAAS,UAAW,MAAO,QACzC,GAAIzD,EAAU0D,MAAM,kBAAmB,CACrC,MAAO,CAAEC,EAAKC,GAAO5D,EAAU0D,MAAM,kBACrC,MAAM,GAANrD,OAAWsD,EAAMC,EAAO,IAAG,KAC7B,CACA,MAAO,OAAO,EAiCDJ,GACPK,cAAe,mBAAmBd,KAAK/C,EAAU8D,eAAiB,OAAS,OAC3EC,OAAQA,KACNpC,GAAU,GAENM,EAAO+B,UACT/B,EAAO+B,QAAQf,MAAMgB,UAAY,gBACnC,EAEFC,QAAUC,IACRrC,GAAS,GACTqC,EAAEC,OAAOvB,QAAU,KACnBsB,EAAEC,OAAOtD,IAAM,WAAW,EAE5BmC,MAAO,CACLC,QAAS,qBACTmB,WAAY,YACZJ,UAAW,mBAIhBpC,IACC3B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qFAAoFC,UACjGC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,4BAGN,C,qFC3GV,MAmGA,EAnGmBqE,KACjB,MACMC,GADWC,EAAAA,EAAAA,MACaC,SAASC,MAAM,KAAKC,QAAOC,GAAuB,KAAZA,IAGpE,GAA4B,IAAxBL,EAAaM,OACf,OAAO,KAIT,MAAMC,EAAkB,CACtB,CACEC,KAAM,OACNC,KAAM,IACNC,SAAU,IAKd,IAAIC,EAAc,GAClBX,EAAaY,SAAQ,CAACP,EAASpE,KAC7B0E,GAAW,IAAA7E,OAAQuE,GAGnB,IAAIG,EAAOH,EAGPA,EAAQnB,SAAS,cACnBsB,EAAOH,EAAQQ,QAAQ,YAAa,IACpCL,EAAOA,EAAKM,OAAO,GAAGC,cAAgBP,EAAKQ,MAAM,GAAK,aAEtDR,EADqB,SAAZH,GAAgC,IAAVpE,EACxB,OACc,UAAZoE,GAAiC,IAAVpE,EACzB,SACc,eAAZoE,EACF,cAGAA,EACJF,MAAM,KACNpE,KAAIkF,GAAQA,EAAKH,OAAO,GAAGC,cAAgBE,EAAKD,MAAM,KACtD5E,KAAK,KAGVmE,EAAgBW,KAAK,CACnBV,OACAC,KAAME,EACND,SAAUzE,EAAQ,GAClB,IAIJ,MAAMkF,EAAmB,CACvB,WAAY,qBACZ,QAAS,iBACT,gBAAmBZ,EAAgBxE,KAAIqF,IAAI,CACzC,QAAS,WACT,SAAYA,EAAKV,SACjB,KAAQU,EAAKZ,KACb,KAAO,4BAAD1E,OAA8BsF,EAAKX,WAI7C,OACEjF,EAAAA,EAAAA,MAAA6F,EAAAA,SAAA,CAAA3F,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,UAAQE,KAAK,sBAAqBH,SAC/B4F,KAAKC,UAAUJ,QAIpBxF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAoB,aAAW,aAAYC,UACxDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kDAAiDC,SAC5D6E,EAAgBxE,KAAI,CAACqF,EAAMnF,KAC1BT,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,2BAA0BC,SAAA,CACjDO,EAAQ,IACPN,EAAAA,EAAAA,KAAA,QAAMF,UAAU,qBAAoBC,SAAC,MAGtCO,IAAUsE,EAAgBD,OAAS,GAClC3E,EAAAA,EAAAA,KAAA,QAAMF,UAAU,4BAA4B,eAAa,OAAMC,SAC5D0F,EAAKZ,QAGR7E,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,GAAI8E,EAAKX,KACThF,UAAU,oDAAmDC,SAE5D0F,EAAKZ,SAdHvE,WAqBd,C,uDCjGP,MAoEA,EApEeuF,KAEXhG,EAAAA,EAAAA,MAAA,UAAQC,UAAU,mCAAkCC,SAAA,EAClDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2EAA0EC,SAAA,EACvFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,2BAA0BC,SAAA,CAAC,SACnC,IAAIJ,MAAOmG,cAAc,6CAGhCjG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACvDC,EAAAA,EAAAA,KAAA,KACI+F,KAAK,cACLjG,UAAU,0DAAyDC,SACpE,gBAGDC,EAAAA,EAAAA,KAAA,KACE+F,KAAK,WACLjG,UAAU,uEAAsEC,SACjF,oBAGDC,EAAAA,EAAAA,KAAA,KACE+F,KAAK,SACLjG,UAAU,0DAAyDC,SACpE,4BAKLF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,yBAAwBC,SAAA,CAAC,eACvB,KACbC,EAAAA,EAAAA,KAAA,KACE+F,KAAK,2BACL7B,OAAO,SACP8B,IAAI,sBACJlG,UAAU,0DAAyDC,SACpE,aAEG,IACF,KACFC,EAAAA,EAAAA,KAAA,KACE+F,KAAK,0BACL7B,OAAO,SACP8B,IAAI,sBACJlG,UAAU,0DAAyDC,SACpE,YAEG,IACF,KACFC,EAAAA,EAAAA,KAAA,KACE+F,KAAK,4BACL7B,OAAO,SACP8B,IAAI,sBACJlG,UAAU,0DAAyDC,SACpE,cAEG,QAGNC,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,wBAAsBC,EAAAA,EAAAA,KAAA,KAAG+F,KAAK,gFAAgF7B,OAAO,SAAS8B,IAAI,sBAAsBlG,UAAU,kBAAiBC,SAAC,uB,oHC1D/L,MAwRA,EAxReZ,IAAyE,IAAxE,gBAAE8G,EAAe,iBAAEC,EAAgB,aAAE7G,EAAY,cAAEC,GAAeH,EAChF,MAAOgH,EAASC,IAAc1E,EAAAA,EAAAA,UAAS,KAChC2E,EAAUC,IAAe5E,EAAAA,EAAAA,WAAS,GACnC6E,GAAWC,EAAAA,EAAAA,MACXC,GAAWnC,EAAAA,EAAAA,MAGXoC,EAAiBC,EAAAA,QAAa,IAEpCxE,EAAAA,EAAAA,YAAU,KACRyE,MAAM,+CACHC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAkB,GAClBC,EAAW,IAAIC,IACfC,EAAU,IAAID,IAEpB,IAAK,MAAME,KAASL,EACbE,EAASI,IAAID,KAChBJ,EAAgB1B,KAAK,CACnBgC,MAAOF,EACPG,MAAOH,EACPnH,KAAM,UAERgH,EAASO,IAAIJ,IAGfL,EAAKK,GAAOpC,SAAQyC,IAElB,IAAIC,EAAWD,EAEgB,cAA3BC,EAAS/D,eACkB,mBAA3B+D,EAAS/D,eACkB,mBAA3B+D,EAAS/D,eACkB,cAA3B+D,EAAS/D,gBACX+D,EAAW,aAGb,MAAMC,EAAS,GAAAzH,OAAMwH,EAAQ,MAAAxH,OAAKkH,GAC7BD,EAAQE,IAAIM,KACfX,EAAgB1B,KAAK,CACnBgC,MAAOI,EACPH,MAAOI,EACP1H,KAAM,SAERkH,EAAQK,IAAIG,GACd,IAGJxB,EAAWa,EAAgB,IAE5BY,OAAMlG,GAASmG,QAAQnG,MAAM,oCAAqCA,IAAO,GAC3E,IAEH,MAqDMoG,EAAmB9D,IACnByC,EAAe5C,QACjBG,EAAE+D,kBAIJtB,EAAe5C,SAAU,EACzBmC,EAAgB,IAChBC,EAAiB,IAGS,MAAtBO,EAASlC,UACXgC,EAAS,KAIX0B,YAAW,KACTvB,EAAe5C,SAAU,CAAK,GAC7B,GAAE,EAGDoE,EAAkBA,CAACR,EAAMzD,KACzByC,EAAe5C,QAChB,OAADG,QAAC,IAADA,GAAAA,EAAG+D,kBAILtB,EAAe5C,SAAU,EAEzBmC,EAAgByB,GAChBxB,EAAiB,IAGjB+B,YAAW,KACT,MAAMnD,EAAI,IAAA3E,OAAOuH,EAAK9D,cAAa,aAG/B6C,EAASlC,WAAaO,GACxByB,EAASzB,EAAM,CAAEI,SAAS,IAG5BwB,EAAe5C,SAAU,CAAK,GAC7B,GAAE,EAaP,OACE9D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2EAA0EC,SAAA,EACvFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qDAAoDC,SAAA,CAAC,cAAUC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,IAAIwH,QAASJ,EAAiBjI,UAAU,eAAcC,UACzIC,EAAAA,EAAAA,KAACoI,EAAAA,EAAc,CACbxH,IAAI,YACJE,IAAI,uBACJhB,UAAU,OACVkB,MAAO,IACPC,OAAQ,GACR+C,QAhBaC,IACvB6D,QAAQnG,MAAM,sBAAuBsC,EAAEoE,aACvCP,QAAQnG,MAAM,gBAAiBsC,EAAEC,QACjCD,EAAEC,OAAOtD,IAAM,WAAW,OAgBpBZ,EAAAA,EAAAA,KAAA,UACEF,UAAU,6CACVqI,QAzBSG,KACjBhC,GAAaD,EAAS,EAwBMtG,SAEnBsG,GAAWrG,EAAAA,EAAAA,KAACuI,EAAAA,IAAO,CAACC,KAAM,MAASxI,EAAAA,EAAAA,KAACyI,EAAAA,IAAM,CAACD,KAAM,WAGtDxI,EAAAA,EAAAA,KAAA,OACEF,UAAS,GAAAK,OACPkG,EAAW,QAAU,SAAQ,mGACmEtG,UAElGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gEAA+DC,SAAA,EAC5EC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,GAAG,IACHb,UAAU,4DACVqI,QAASJ,EAAgBhI,SAC1B,UAGDC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,GAAG,mBACHb,UAAU,4DACVqI,QAAUlE,GAAMiE,EAAgB,SAAUjE,GAAGlE,SAC9C,YAGDC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,GAAG,oBACHb,UAAU,4DACVqI,QAAUlE,GAAMiE,EAAgB,UAAWjE,GAAGlE,SAC/C,aAGDC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,GAAG,oBACHb,UAAU,4DACVqI,QAAUlE,GAAMiE,EAAgB,UAAWjE,GAAGlE,SAC/C,aAGDC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,GAAG,oBACHb,UAAU,4DACVqI,QAAUlE,GAAMiE,EAAgB,UAAWjE,GAAGlE,SAC/C,aAGDC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,GAAG,sBACHb,UAAU,4DACVqI,QAAUlE,GAAMiE,EAAgB,YAAajE,GAAGlE,SACjD,eAGDC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,GAAG,oBACHb,UAAU,4DACVqI,QAAUlE,GAAMiE,EAAgB,UAAWjE,GAAGlE,SAC/C,aAGDC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,GAAG,cACHb,UAAU,4DAA2DC,SACtE,sBAKLC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,KAAC0I,EAAAA,GAAM,CACLnB,MAAOpB,EAAQwC,MAAKC,GAAUA,EAAOrB,SAAWlI,GAAgBC,KAChEuJ,SAlMYC,IACpB,IAAKA,GAAkBpC,EAAe5C,QAAS,OAE/C4C,EAAe5C,SAAU,EACzB,MAAM,KAAE5D,EAAI,MAAEsH,GAAUsB,EAExB,GAAa,SAAT5I,EAAiB,CACnB,MAAOwH,EAAML,GAASG,EAAMhD,MAAM,MAClC,IAAIuE,EAAmBrB,EAGgB,cAAnCqB,EAAiBnF,eACkB,mBAAnCmF,EAAiBnF,eACkB,mBAAnCmF,EAAiBnF,eACkB,cAAnCmF,EAAiBnF,gBACnBmF,EAAmB,aAIrB9C,EAAgB8C,GAChB7C,EAAiBmB,GAGjBY,YAAW,KACT,MAAMnD,EAAI,IAAA3E,OAAO4I,EAAiBnF,cAAa,aAG3C6C,EAASlC,WAAaO,GACxByB,EAASzB,EAAM,CAAEI,SAAS,IAG5BwB,EAAe5C,SAAU,CAAK,GAC7B,EAEL,KAAoB,UAAT5D,IAET+F,EAAgB,IAChBC,EAAiBsB,GAGjBS,YAAW,KACT,MAAMnD,EAAI,UAAA3E,OAAaqH,EAAM5D,cAAa,aAGtC6C,EAASlC,WAAaO,GACxByB,EAASzB,EAAM,CAAEI,SAAS,IAG5BwB,EAAe5C,SAAU,CAAK,GAC7B,GACL,EAiJQqC,QAASA,EACTrG,UAAU,SACVkJ,OAAQ,CACNC,QAAUC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTD,GAAI,IACPE,gBAAiB,QACjBC,YAAa,cACbC,UAAW,OACX,UAAW,CACTD,YAAa,eAEfE,QAAS,SACTC,aAAc,aAEhBC,KAAOP,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACND,GAAI,IACPQ,OAAQ,OAEVC,YAAcT,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbD,GAAI,IACPU,MAAO,aAGXD,YAAY,6BAId,C,kGCrRVE,EAAAA,GAAQC,SAASC,EAAAA,GAAeC,EAAAA,GAAaC,EAAAA,GAAYC,EAAAA,GAAOC,EAAAA,GAASC,EAAAA,MAAWC,EAAAA,IAEpF,MAmUA,EAnUsBlL,IAA6H,IAA5H,KAAEmL,EAAO,UAAS,aAAEjL,EAAY,cAAEC,EAAa,SAAEiL,EAAW,GAAE,WAAEC,EAAU,WAAEC,EAAU,aAAEC,EAAY,eAAEC,GAAgBxL,EAC3I,MAAOyL,EAAaC,IAAkBnJ,EAAAA,EAAAA,UAAS,IACxCoJ,EAAYC,IAAiBrJ,EAAAA,EAAAA,UAAS,CAAEsJ,IAAK,OAAQC,UAAW,eAQhEC,EAAaC,IAAkBzJ,EAAAA,EAAAA,UAAS,OACxC0J,EAAYC,IAAiB3J,EAAAA,EAAAA,UAAS,CAAC,IACvC4J,EAAcC,IAAmB7J,EAAAA,EAAAA,UAAS,KAGjDS,EAAAA,EAAAA,YAAU,KACK,YAATmI,GACF1D,MAAM,wCACHC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQuE,EAAgBvE,KAC7Ba,OAAMlG,GAASmG,QAAQnG,MAAM,gCAAiCA,IACnE,GACC,CAAC2I,IAGJ,MAAMkB,EAAQ,GACd,IAAK,IAAIC,EAAI,EAAGA,GAAKC,KAAKC,KAAKpB,EAAS5F,OAbnB,IAa2C8G,IAC9DD,EAAMjG,KAAKkG,GAGb,MAAMG,EAjBe,GAiBGhB,EAClBiB,EAAmBD,EAlBJ,GAoBfE,EAAiB,IAAIvB,GAAU/K,MAAK,CAACC,EAAGC,IACvCoL,EAAWE,IACZvL,EAAEqL,EAAWE,KAAOtL,EAAEoL,EAAWE,KACH,cAAzBF,EAAWG,WAA6B,EAAI,EAEjDxL,EAAEqL,EAAWE,KAAOtL,EAAEoL,EAAWE,KACH,cAAzBF,EAAWG,UAA4B,GAAK,EAE9C,EAPqB,IAUxBc,EAAwB,YAATzB,EAAqBgB,EAAeQ,EAAezG,MAAMwG,EAAkBD,GAG1FI,EAAY,CAChBC,OAAQF,EAAa3L,KAAI8L,GAAQA,EAAKxE,MAAQwE,EAAKC,OACnDC,SAAU,CACR,CACE5E,MAAO,YACPR,KAAM+E,EAAa3L,KAAI8L,GAAQA,EAAKA,OACpC9C,gBAAiB,0BACjBC,YAAa,wBACbgD,YAAa,EACbC,QAAS,GACTC,KAAe,SAATjC,KAKNkC,EAAe,CACnBC,YAAY,EACZC,qBAAqB,EACrBC,QAAS,CACPC,OAAQ,CACN7H,SAAU,OAEZvE,MAAO,CACLqM,SAAS,EACTC,KAAe,SAATxC,EAAkB,cAAgB,wBAE1CyC,QAAS,CACPC,UAAW,CACTxF,MAAQyF,GAAO,SAAA9M,OAAS8M,EAAQC,IAAIC,QAAQ,OAIlDC,OAAQ,CACNC,EAAG,CACDC,aAAa,EACbC,MAAO,CACLC,SAAWjG,GAAK,SAAApH,OAASoH,EAAM4F,QAAQ,QAYzCM,EAAkBA,KACtB9C,EAAeS,GACfD,EAAe,KAAK,EAGhBuC,EAAgBzJ,IACpBoH,GAAalC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACViC,GAAU,IACb,CAACnH,EAAEC,OAAOW,MAAOZ,EAAEC,OAAOqD,QAC1B,EAmMJ,OACE1H,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,CAhMhC4N,MAClB,OAAQrD,GACN,IAAK,UACH,OACEzK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAC,mBAClEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAO+C,MAAO,CAAEqG,gBAAiB,WAAYrJ,UAC3CF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mFAAkFC,SAAC,YACjGC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mFAAkFC,SAAC,WACjGC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mFAAkFC,SAAC,eAGrGC,EAAAA,EAAAA,KAAA,SAAAD,SACGgM,EAAapH,OAAS,EACrBoH,EAAa3L,KAAI,CAAC8L,EAAM5L,KACtBT,EAAAA,EAAAA,MAAA,MAEEC,UAAS,uCAAAK,OAAyCG,EAAQ,IAAM,EAAI,eAAiB,eAAc,uBAAsBP,SAAA,EAEzHC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAEmM,EAAKxE,QACxE7H,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,SAAE6N,WAAW1B,EAAKA,MAAMiB,QAAQ,OAClGtN,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,SAAE6N,WAAyB,GAAb1B,EAAKA,MAAYiB,QAAQ,QALpG7M,MASTN,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAI6N,QAAQ,IAAI/N,UAAU,8CAA6CC,SAAC,2CASxF,IAAK,OACH,OACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAK+C,MAAO,CAAE9B,OAAQ,SAAUlB,UAC9BC,EAAAA,EAAAA,KAAC8N,EAAAA,GAAI,CAAC9G,KAAMgF,EAAW7F,QAASqG,OAElCxM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4FAA2FC,SAAC,UAC1GC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4FAA2FC,SAAC,UAC1GC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4FAA2FC,SAAC,qBAG9GC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjDgM,EAAa3L,KAAI,CAAC8L,EAAM5L,KACvBT,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAEmM,EAAKC,QACxEtM,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,SAAEmM,EAAKA,KAAKiB,QAAQ,OACtFtN,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,UAAe,GAAZmM,EAAKA,MAAWiB,QAAQ,QAHtF7M,eAYvB,IAAK,QACH,OACEN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4FAA2FC,UACvGC,EAAAA,EAAAA,KAAA,UAAQmI,QAASA,KAlLd6C,MACnBD,EAAc,CACZC,IAFiBA,EAkLgC,OA/KjDC,UAAWH,EAAWE,MAAQA,GAAgC,cAAzBF,EAAWG,UAA4B,aAAe,aA+KlC,EAAAlL,SAAC,YAE9CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4FAA2FC,UACvGC,EAAAA,EAAAA,KAAA,UAAQmI,QAASA,IAAMqC,EAAW,SAASzK,SAAC,aAE9CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4FAA2FC,UACvGC,EAAAA,EAAAA,KAAA,UAAQmI,QAASA,IAAMqC,EAAW,QAAQzK,SAAC,YAE7CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4FAA2FC,SAAC,kBAG9GC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjDgM,EAAa3L,KAAI,CAAC8L,EAAM5L,KACvBN,EAAAA,EAAAA,KAAA,MAAAD,SACGmL,IAAgBgB,GACfrM,EAAAA,EAAAA,MAAA6F,EAAAA,SAAA,CAAA3F,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACL2E,KAAK,OACL0C,MAAO6D,EAAW1D,KAClBmB,SAAU6E,EACV5N,UAAU,gCAGdE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACL2E,KAAK,QACL0C,MAAO6D,EAAW/D,MAClBwB,SAAU6E,EACV5N,UAAU,gCAGdE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,SACEE,KAAK,SACL2E,KAAK,OACL0C,MAAO6D,EAAWc,KAClBrD,SAAU6E,EACV5N,UAAU,gCAGdD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA6BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,UACEmI,QAASsF,EACT3N,UAAU,2CAA0CC,SACrD,UAGDC,EAAAA,EAAAA,KAAA,UACEmI,QAASA,IAAMgD,EAAe,MAC9BrL,UAAU,oCAAmCC,SAC9C,kBAMLF,EAAAA,EAAAA,MAAA6F,EAAAA,SAAA,CAAA3F,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAEmM,EAAKxE,QACxE1H,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAEmM,EAAK7E,SACxExH,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,SAAEmM,EAAKA,KAAKiB,QAAQ,OACtFtN,EAAAA,EAAAA,MAAA,MAAIC,UAAU,6DAA4DC,SAAA,EACxEC,EAAAA,EAAAA,KAAA,UACEmI,QAASA,IA7JV+D,KACvBf,EAAee,GACfb,EAAca,EAAK,EA2JoB6B,CAAgB7B,GAC/BpM,UAAU,6CAA4CC,SACvD,UAGDC,EAAAA,EAAAA,KAAA,UACEmI,QAASA,IAAMuC,EAAawB,GAC5BpM,UAAU,kCAAiCC,SAC5C,kBA5DAO,YAyErB,QACE,OACET,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAK+C,MAAO,CAAE9B,OAAQ,SAAUlB,UAC9BC,EAAAA,EAAAA,KAACgO,EAAAA,GAAG,CAAChH,KAAMgF,EAAW7F,QAASqG,OAEjCxM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4FAA2FC,SAAC,UAC1GC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4FAA2FC,SAAC,WAC1GC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4FAA2FC,SAAC,eAG9GC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjDgM,EAAa3L,KAAI,CAAC8L,EAAM5L,KACvBT,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAEmM,EAAKxE,QACxE1H,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAEmM,EAAK7E,SACxExH,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,SAAEmM,EAAKA,KAAKiB,QAAQ,QAH/E7M,eAWzB,EAKGqN,GACS,YAATrD,GAAsByB,EAAapH,OAjSnB,KAkSf3E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qCAAoCC,SAChDyL,EAAMpL,KAAK6N,IACVjO,EAAAA,EAAAA,KAAA,UAEEmI,QAASA,IAAM0C,EAAeoD,GAC9BnO,UAAS,qBAAAK,OACPyK,IAAgBqD,EACZ,yBACA,+CACHlO,SAEFkO,GARIA,SAaT,C,gFCnUV,MA0JA,EA1JoB9O,IAAgD,IAA/C,aAAEE,EAAY,cAAEC,EAAa,SAAEiL,GAAUpL,EAC5D,MAAM+O,EAAc7O,IAA8BC,GAAgC,SAC5E6O,GAAQ,IAAIxO,MAAOyB,mBAAmB,QAAS,CACnDG,IAAK,UACLD,MAAO,OACPD,KAAM,aAGD+M,EAAoBC,IAAyB3M,EAAAA,EAAAA,UAAS,KACtD4M,EAAgBC,IAAqB7M,EAAAA,EAAAA,WAAS,GAG/C8M,EAAcjE,EAAS5F,OAAS,EAAI4F,EAAS,GAAG2B,KAAO,MAGvDuC,EAAelE,EAAS5F,OAAS,GAAK4F,EAAS,GAAG2B,KAAO3B,EAAS,GAAG2B,MAAMiB,QAAQ,GAAK,MACxFuB,EAAsBnE,EAAS5F,OAAS,IAAM4F,EAAS,GAAG2B,KAAO3B,EAAS,GAAG2B,MAAQ3B,EAAS,GAAG2B,KAAO,KAAKiB,QAAQ,GAAK,MAC1HwB,EAAepE,EAAS5F,OAAS,GAAK4F,EAASqE,QAAO,CAACC,EAAK3C,IAAS2C,EAAM3C,EAAKA,MAAM,GAAK3B,EAAS5F,QAAQwI,QAAQ,GAAK,OAE/HhL,EAAAA,EAAAA,YAAU,KAERyE,MAAM,4BACHC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAM8H,EAAW,IAAI9H,GAAMxH,MAAK,IAAM,GAAMkM,KAAKqD,WACjDV,EAAsBS,EAASzJ,MAAM,EAAG,GAAG,IAE5CwC,OAAMlG,GAASmG,QAAQnG,MAAM,8BAA+BA,IAAO,GACrE,IAWH,OACE9B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EAErCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAZjEV,EACI,eAANc,OAAsBd,EAAY,MAAAc,OAAKb,EAAa,MAAAa,OAAKgO,EAAK,KACrD7O,EACH,gBAANa,OAAuBb,EAAa,MAAAa,OAAKgO,EAAK,KAE1C,+BAANhO,OAAsCgO,EAAK,QAUvCtO,EAAAA,EAAAA,MAAA,KAAGC,UAAU,uDAAsDC,SAAA,CAAC,qBAC/CmO,MAErBlO,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iCAAgCC,SAC1CV,EAAY,gCAAAc,OACuBd,EAAY,qDAC5CC,EAAa,mCAAAa,OACwBb,EAAa,0CAChD,wFAKRO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,SAAC,kBAC5CF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,mCAAkCC,SAAA,CAAC,SAAEyO,SAEpD3O,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,+BAA8BC,SAAC,mBAC7CF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,oCAAmCC,SAAA,CAAE0O,EAAa,KAAGC,EAAoB,YAExF7O,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gCAA+BC,SAAC,mBAC9CF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,qCAAoCC,SAAA,CAAC,SAAE4O,eAM1D3O,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,KAAA,UACEmI,QAASA,IAAMoG,GAAmBD,GAClCxO,UAAU,+EAA8EC,SAEvFuO,EAAiB,mBAAqB,uBAI1CA,GAAkBF,EAAmBzJ,OAAS,IAC7C9E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4CAA2CC,SAAC,oBAC1DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wCAAuCC,SACnDqO,EAAmBhO,KAAI4O,IACtBnP,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAEHC,GAAE,eAAAR,OAAiB6O,EAAMC,MACzBnP,UAAU,yFAAwFC,SAAA,EAElGC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,UAC1CC,EAAAA,EAAAA,KAAA,OACEY,IAAKoO,EAAME,UACXpO,IAAG,eAAAX,OAAiB6O,EAAMtH,KAAI,MAAAvH,OAAK6O,EAAM3H,OACzCvH,UAAU,sCACViB,QAAQ,YAGZf,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAAEiP,EAAMxO,SAC9CX,EAAAA,EAAAA,MAAA,KAAGC,UAAU,8BAA6BC,SAAA,CAAC,SAAEiP,EAAM9C,KAAK,eACxDlM,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAEiP,EAAM7C,SAdvC6C,EAAMG,YAsBrBtP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4CAA2CC,SAAC,wBAC1DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAC,yIAGlCF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oCAAmCC,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iCACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6BACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kCAMVF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4CAA2CC,SAAC,oBAC1DC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAA,2BAAAI,OACH+N,EAAW,UAAA/N,OAASsO,EAAe,EAAI,cAAgB,aAAY,6FAAAtO,OAC7CwO,EAAY,QAEhE9O,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SAAC,uBACjDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAA,SAAAI,OAChBsO,EAAe,EAAI,YAAc,YAAW,cAAAtO,OAAQuL,KAAK0D,IAAIX,GAAa,MAAAtO,OAAKuL,KAAK0D,IAAIV,GAAoB,gCAG1H7O,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SAAC,oBACjDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAA,+BAAAI,QACgB,GAAdqO,GAAkBrB,QAAQ,iBAK1D,C,8ECtJV,MAuIA,EAvIkBhO,IAAyB,IAAxB,OAAEkQ,EAAM,OAAEC,GAAQnQ,EAEnC,MAAMoQ,EAAgB,CAAC,SAAU,UAAW,YAAa,UAAW,UAAW,WAAY,YAAa,YAClGC,EAAgB,CAAC,cAAe,aAAc,YAAa,cAAe,UAAW,SAAU,SAAU,aAwF/G,OACE3P,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8DAA6DC,SAAA,EAC1EC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2EAA0EC,SAAC,8DAzCzFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,4BACzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,SAClCwP,EAAcnP,KAAIsH,IACjB7H,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAEHC,GAAE,IAAAR,OAAMuH,EAAK9D,cAAa,aAC1B9D,UAAU,yHACVU,MAAK,6BAAAL,OAA+BuH,GAAO3H,SAAA,CAE1C2H,EAAK,oBALDA,WAgBb7H,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,6BACzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,SAClCyP,EAAcpP,KAAIiH,IACjBxH,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAEHC,GAAE,UAAAR,OAAYkH,EAAMzD,cAAa,aACjC9D,UAAU,4HACVU,MAAK,8BAAAL,OAAgCkH,GAAQtH,SAAA,CAE5CsH,EAAM,cALFA,WAyBbrH,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,0BACzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,sCAAqCC,UACpDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjDsP,EAAO1K,OAAS,EAtGE8K,MAC3B,MAAMC,EAAO,GACb,IAAK,IAAIjE,EAAI,EAAGA,EAAI4D,EAAO1K,OAAQ8G,GAAK,EACtCiE,EAAKnK,MACHvF,EAAAA,EAAAA,KAAA,MAAYF,UAAU,qCAAoCC,SACvDsP,EAAOhK,MAAMoG,EAAGA,EAAI,GAAGrL,KAAIiH,IAC1BrH,EAAAA,EAAAA,KAAA,MAAgBF,UAAU,wBAAuBC,UAC/CF,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CACHC,GAAE,UAAAR,OAAYkH,EAAMzD,cAAa,aACjC9D,UAAU,mEACVU,MAAK,uBAAAL,OAAyBkH,EAAK,qBAAoBtH,SAAA,CAEtDsH,EAAM,gBANFA,MAFJoE,IAeb,OAAOiE,CAAI,EAmFkBD,IACnBzP,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAwB+N,QAAQ,IAAG9N,SAAC,uBAM3DuP,EAAO3K,OAAS,IACf9E,EAAAA,EAAAA,MAAA6F,EAAAA,SAAA,CAAA3F,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,yBACzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,sCAAqCC,UACpDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SA7FpC4P,MAC1B,MAAMD,EAAO,GACb,IAAK,IAAIjE,EAAI,EAAGA,EAAI6D,EAAO3K,OAAQ8G,GAAK,EACtCiE,EAAKnK,MACHvF,EAAAA,EAAAA,KAAA,MAAYF,UAAU,qCAAoCC,SACvDuP,EAAOjK,MAAMoG,EAAGA,EAAI,GAAGrL,KAAIsH,IAC1B1H,EAAAA,EAAAA,KAAA,MAAeF,UAAU,wBAAuBC,UAC9CF,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CACHC,GAAE,IAAAR,OAAMuH,EAAK9D,cAAa,aAC1B9D,UAAU,kEACVU,MAAK,uBAAAL,OAAyBuH,EAAI,4BAA2B3H,SAAA,CAE5D2H,EAAK,gBANDA,MAFJ+D,IAeb,OAAOiE,CAAI,EA2EEC,aAOX3P,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACzCF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,2CAAwC,IAAIJ,MAAOyB,mBAAmB,QAAS,CAACG,IAAK,UAAWD,MAAO,OAAQD,KAAM,mBAEtH,C,qJCnIV,MA8EA,EA9EkBuO,KAChB,MAAQvI,MAAOwI,IAAeC,EAAAA,EAAAA,MACvBC,EAAcC,IAAmBtO,EAAAA,EAAAA,UAAS,KAC1CX,EAASkP,IAAcvO,EAAAA,EAAAA,WAAS,IAChCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,MAG7B2F,EAAQwI,EAAW3K,QAAQ,YAAa,IAiB9C,OAfA/C,EAAAA,EAAAA,YAAU,KACRyE,MAAM,uDAADzG,OAAwDkH,IAC1DR,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMkJ,GAAelJ,EAAK+I,cAAgB,IAAIvQ,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEyM,MAAQ,IAAIxM,KAAKF,EAAE0M,QAC3F6D,EAAgBE,GAChBD,GAAW,EAAM,IAElBpI,OAAMlG,IACLmG,QAAQnG,MAAM,gCAAiCA,GAC/CC,EAASD,GACTsO,GAAW,EAAM,GACjB,GACH,CAAC5I,IAEAtG,GAEAlB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DC,SAAA,EACvEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,qBAAmBsH,MACrFrH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAC,kBAK/B4B,GAEA9B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DC,SAAA,EACvEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,qBAAmBsH,MACrFxH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,CAAC,uBAAqB4B,EAAMwO,eAMzEtQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DC,SAAA,EACvEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAAC,qBAAmBsH,MACrFrH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,oCAAmCC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAIkD,MAAO,CAAEqG,gBAAiB,WAAYrJ,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,UACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,uBAGzDC,EAAAA,EAAAA,KAAA,SAAAD,SACGgQ,EAAapL,OAAS,EACrBoL,EAAa3P,KAAI,CAAC8L,EAAM5L,KACtBT,EAAAA,EAAAA,MAAA,MAEEC,UAAS,2BAAAK,OAA6BG,EAAQ,IAAM,EAAI,eAAiB,eAAc,uBAAsBP,SAAA,EAE7GC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6BAA4BC,SAAEmM,EAAKC,QACjDnM,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6BAA4BC,SACvCmM,EAAKkE,YAAW,SAAAjQ,OAAOyN,WAAW1B,EAAKkE,aAAajD,QAAQ,IAAO,UACjE,GAAAhN,OANG+L,EAAKC,KAAI,KAAAhM,OAAIG,OAUzBN,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAyC+N,QAAQ,IAAG9N,SAAC,iCAMzE,E,wBC1EH,MAAMsQ,EAAoBA,CAAChR,EAAcC,EAAeiL,KAE7D,MAAMiE,GAAsB,OAARjE,QAAQ,IAARA,OAAQ,EAARA,EAAU5F,QAAS,EAAI4F,EAAS,GAAG2B,KAAO,MACxDoE,EAA4B,QAAhB9B,GAAuC,GAAdA,GAAkBrB,QAAQ,GAAK,MAGpEoD,GAAgB,IAAI5Q,MAAOyB,mBAAmB,QAAS,CAC3DG,IAAK,UACLD,MAAO,OACPD,KAAM,YAOR,MAAO,CACL,WAAY,qBACZ,QAAS,UACT,WANemP,EAAgBnR,EAAcC,EAAekP,EAAa8B,EAAWC,GAM7DnQ,KAAIqQ,IAAG,CAC5B,QAAS,WACT,KAAQA,EAAIC,SACZ,eAAkB,CAChB,QAAS,SACT,KAAQD,EAAIE,YAGjB,EAIUH,EAAkBA,CAACnR,EAAcC,EAAekP,EAAa8B,EAAWC,IAuE5E,IAjCsBlR,EAAe,CAC1C,CACEqR,SAAS,+BAADvQ,OAAiCd,EAAY,KACrDsR,OAAO,uBAADxQ,OAAyBd,EAAY,MAAAc,OAAKb,GAAiB,GAAE,cAAAa,OAAQqO,EAAW,oBAAArO,OAAmBoQ,EAAa,OAExH,CACEG,SAAS,4CAADvQ,OAA8Cd,EAAY,WAClEsR,OAAO,oCAADxQ,OAAsCd,EAAY,oBAAAc,OAAcmQ,EAAS,YAAAnQ,OAAWoQ,EAAa,OAEzG,CACEG,SAAS,gCAADvQ,OAAkCd,EAAY,WACtDsR,OAAO,wBAADxQ,OAA0Bd,EAAY,oBAAAc,OAAcqO,EAAW,8GAEvE,CACEkC,SAAS,wBAADvQ,OAA0Bd,EAAY,iCAC9CsR,OAAO,iBAADxQ,OAAmBd,EAAY,kKAAAc,OAAiKd,EAAY,4DAElNC,EAAgB,CAClB,CACEoR,SAAS,mCAADvQ,OAAqCb,EAAa,KAC1DqR,OAAO,2BAADxQ,OAA6Bb,EAAa,6GAAAa,OAA4Gb,EAAa,wDAE3K,CACEoR,SAAS,wBAADvQ,OAA0Bb,EAAa,6BAC/CqR,OAAO,iBAADxQ,OAAmBb,EAAa,+MAExC,CACEoR,SAAS,iBAADvQ,OAAmBb,EAAa,+BACxCqR,OAAO,8BAADxQ,OAAgCb,EAAa,sGAAAa,OAAqGb,EAAa,6EAErK,GAjEF,CACEoR,SAAS,qCACTC,OAAO,mOAET,CACED,SAAS,+BACTC,OAAO,sOAET,CACED,SAAS,yCACTC,OAAO,4SAET,CACED,SAAS,0DACTC,OAAO,kRAET,CACED,SAAS,+BACTC,OAAO,8RAET,CACED,SAAS,4DACTC,OAAO,qRAET,CACED,SAAS,8CACTC,OAAO,sOAET,CACED,SAAS,8CACTC,OAAO,qSAqGb,EA5DYxR,IAAgD,IAA/C,aAAEE,EAAY,cAAEC,EAAa,SAAEiL,GAAUpL,EACpD,MAAOyR,EAASC,IAAcnP,EAAAA,EAAAA,UAAS,MACjC8M,EAAcjE,EAAS5F,OAAS,EAAI4F,EAAS,GAAG2B,KAAO,MACvDoE,EAA4B,QAAhB9B,GAAuC,GAAdA,GAAkBrB,QAAQ,GAAK,MAGpEoD,GAAgB,IAAI5Q,MAAOyB,mBAAmB,QAAS,CAC3DG,IAAK,UACLD,MAAO,OACPD,KAAM,YAGFyP,EAAUN,EAAgBnR,EAAcC,EAAekP,EAAa8B,EAAWC,GASrF,OACE1Q,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAiDqP,GAAG,cAAapP,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAC,gCAIlEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SACtC+Q,EAAQ1Q,KAAI,CAACqQ,EAAKnQ,KACjBT,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,OAAMC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,UACEC,UAAU,+HACVqI,QAASA,IAlBF7H,KAEfuQ,EADED,IAAYtQ,EACH,KAEAA,EACb,EAayByQ,CAAUzQ,GACzB,gBAAesQ,IAAYtQ,EAC3B,8BAAAH,OAA6BG,GAAQP,SAAA,EAErCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAE0Q,EAAIC,YAC5B1Q,EAAAA,EAAAA,KAAA,OACEF,UAAS,0CAAAK,OAA4CyQ,IAAYtQ,EAAQ,2BAA6B,iBACtGiM,KAAK,OACLyE,OAAO,eACPC,QAAQ,YACRC,MAAM,6BAA4BnR,UAElCC,EAAAA,EAAAA,KAAA,QAAMmR,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,yBAGzEtR,EAAAA,EAAAA,KAAA,OACEmP,GAAE,cAAAhP,OAAgBG,GAClBR,UAAS,uEAAAK,OAAyEyQ,IAAYtQ,EAAQ,uBAAyB,qBAAsBP,UAErJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,OAAMC,SAAE0Q,EAAIE,aAtBnBrQ,SA2BV,E,wBCrJV,MA0NA,EA1NiBiR,KACf,MAAQ7J,KAAM8J,EAAWnK,MAAOwI,IAAeC,EAAAA,EAAAA,KACzCvJ,GAAWC,EAAAA,EAAAA,MACXC,GAAWnC,EAAAA,EAAAA,OACV+K,EAAQoC,IAAa/P,EAAAA,EAAAA,UAAS,KAC9B4N,EAAQoC,IAAahQ,EAAAA,EAAAA,UAAS,KAC9BpC,EAAe4G,IAAoBxE,EAAAA,EAAAA,UAASmO,EAAaA,EAAW3K,QAAQ,YAAa,IAAM,KAC/F7F,EAAc4G,IAAmBvE,EAAAA,EAAAA,UAAS8P,EAAYA,EAAUtM,QAAQ,YAAa,IAAM,KAC3FqF,EAAUoH,IAAejQ,EAAAA,EAAAA,UAAS,KAIzCS,EAAAA,EAAAA,YAAU,KACRyE,MAAM,oCACHC,MAAK+K,GAAOA,EAAI7K,SAChBF,MAAKG,GAAQyK,EAAUzK,KACvBa,OAAMlG,GAASmG,QAAQnG,MAAM,yBAA0BA,IAAO,GAChE,KAGHQ,EAAAA,EAAAA,YAAU,KACJ7C,GACFsH,MAAM,0CAADzG,OAA2Cb,IAC7CuH,MAAK+K,GAAOA,EAAI7K,SAChBF,MAAKG,GAAQ0K,EAAU1K,KACvBa,OAAMlG,GAASmG,QAAQnG,MAAM,yBAA0BA,IAC5D,GACC,CAACrC,IAEJ,MAAMuS,GAAmBC,EAAAA,EAAAA,cAAY,KACnC,MAAMC,EAAW1S,GAAgBC,EAAa,qCAAAa,OACLd,EAAY,WAAAc,OAAUb,GAC3D,sCAEJsH,MAAMmL,GACHlL,MAAK+K,GAAOA,EAAI7K,SAChBF,MAAKG,IACJ,MAAMgL,EAAgBhL,EAAK5G,KAAIqF,IAAI0D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC9B1D,GAAI,IACPyG,KAAM0B,WAAWnI,EAAKyG,UAExByF,EAAYK,EAAc,IAE3BnK,OAAMlG,GAASmG,QAAQnG,MAAM,wBAAyBA,IAAO,GAC/D,CAACtC,EAAcC,KAGlB6C,EAAAA,EAAAA,YAAU,KACR0P,GAAkB,GACjB,CAACA,IAGJ,MAAMI,GAAaC,EAAAA,EAAAA,IACjB,CAAEpN,KAAM,iBACR2B,EAASlC,UAIL4N,GAAYL,EAAAA,EAAAA,cAAY,KAC5B,MAAM9M,EAAcyB,EAASlC,SAAS6N,SAAS,KAC3C3L,EAASlC,SAASc,MAAM,GAAI,GAC5BoB,EAASlC,SAEb,GAAIlF,IAAiB2F,EAAYzB,SAAS,aAAc,CACtD,MAAM8O,EAAO,IAAAlS,OAAOd,EAAauE,cAAa,aAC1CoB,IAAgBqN,GAClB9L,EAAS8L,EAAS,CAAEnN,SAAS,GAEjC,MAAO,GAAI5F,IAAkBD,IAAiB2F,EAAYzB,SAAS,aAAc,CAC/E,MAAM8O,EAAO,UAAAlS,OAAab,EAAcsE,cAAa,aACjDoB,IAAgBqN,GAClB9L,EAAS8L,EAAS,CAAEnN,SAAS,GAEjC,IACC,CAAC7F,EAAcC,EAAeiH,EAAUE,EAASlC,YAGpDpC,EAAAA,EAAAA,YAAU,KACR,MAAMmQ,EAAYrK,YAAW,KAC3BkK,GAAW,GACV,IAEH,MAAO,IAAMI,aAAaD,EAAU,GACnC,CAACH,KAGJhQ,EAAAA,EAAAA,YAAU,KACR,GAAI0N,EAAY,CACd,MAAM2C,EAAW3C,EAAW3K,QAAQ,YAAa,IAC7C5F,IAAkBkT,IACpBtM,EAAiBsM,GACjBvM,EAAgB,IAEpB,CACA,GAAIuL,EAAW,CACb,MAAMiB,EAAUjB,EAAUtM,QAAQ,YAAa,IAC3C7F,IAAiBoT,GACnBxM,EAAgBwM,EAEpB,CACK5C,GAAe2B,IAAclS,IAAiBD,IACjD4G,EAAgB,IAChBC,EAAiB,IACnB,GACC,CAAC2J,EAAY2B,EAAWlS,EAAeD,IAG1C,MAAMkR,GAAgB,IAAI5Q,MAAOyB,mBAAmB,QAAS,CAC3DG,IAAK,UACLD,MAAO,OACPD,KAAM,YAGFqR,EAAcA,IACdrT,EACI,eAANc,OAAsBd,EAAY,MAAAc,OAAKb,EAAa,YAAAa,OAAWoQ,EAAa,KAE1EjR,EACI,GAANa,OAAUb,EAAa,kCAAAa,OAAiCoQ,EAAa,KAEjE,2DAANpQ,OAAkEoQ,EAAa,KAG3EoC,EAAoBA,IACpBtT,EACI,6BAANc,OAAoCd,EAAY,MAAAc,OAAKb,EAAa,mFAEhEA,EACI,uBAANa,OAA8Bb,EAAa,+FAEtC,0JAGHsT,EAAiB,CACrB,WAAY,qBACZ,QAAS,UACT/N,KAAM,eACN3D,YAAayR,IACbE,OAAQ,CACN,QAAS,iBACTC,cAAe,MACfC,SAAUrH,KAAKsH,OAAOzI,EAASnK,KAAI8L,GAAQA,EAAKA,QAChD+G,UAAWvH,KAAKwH,OAAO3I,EAASnK,KAAI8L,GAAQA,EAAKA,QACjDiH,WAAY5I,EAAS5F,OACrByO,gBAAiB,IAAIzT,MAAK,IAAIA,MAAO0T,SAAQ,IAAI1T,MAAO2T,UAAY,IAAIC,gBAI5E,OACE1T,EAAAA,EAAAA,MAAA6F,EAAAA,SAAA,CAAA3F,SAAA,EACEF,EAAAA,EAAAA,MAACI,EAAAA,EAAM,CAAAF,SAAA,EACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAQ2S,OACR1S,EAAAA,EAAAA,KAAA,QAAM6E,KAAK,cAAc2O,QAASb,OAClC3S,EAAAA,EAAAA,KAAA,QAAMgG,IAAI,YAAYD,KAAI,4BAAA5F,OAA8BsG,EAASlC,aACjEvE,EAAAA,EAAAA,KAAA,UAAQE,KAAK,sBAAqBH,SAAE4F,KAAKC,UAAUgN,MACnD5S,EAAAA,EAAAA,KAAA,UAAQE,KAAK,sBAAqBH,SAC/B4F,KAAKC,UAAUyK,EAAkBhR,EAAcC,EAAeiL,OAEjEvK,EAAAA,EAAAA,KAAA,QAAMyT,SAAS,wBAAwBD,SAAS,IAAI7T,MAAO4T,iBAC3DvT,EAAAA,EAAAA,KAAA,QAAMyT,SAAS,WAAWD,QAASd,OACnC1S,EAAAA,EAAAA,KAAA,QAAMyT,SAAS,iBAAiBD,QAASb,OACzC3S,EAAAA,EAAAA,KAAA,QAAMyT,SAAS,SAASD,QAAO,4BAAArT,OAA8BsG,EAASlC,aACtEvE,EAAAA,EAAAA,KAAA,QAAMyT,SAAS,UAAUD,QAAQ,aACjCxT,EAAAA,EAAAA,KAAA,QAAMyT,SAAS,WAAWD,QAAQ,2CAClCxT,EAAAA,EAAAA,KAAA,QAAM6E,KAAK,eAAe2O,QAAQ,yBAClCxT,EAAAA,EAAAA,KAAA,QAAM6E,KAAK,gBAAgB2O,QAASd,OACpC1S,EAAAA,EAAAA,KAAA,QAAM6E,KAAK,sBAAsB2O,QAASb,OAC1C3S,EAAAA,EAAAA,KAAA,QAAM6E,KAAK,gBAAgB2O,QAAQ,8CAGrC3T,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAAC0T,EAAAA,EAAM,CACLpU,cAAeA,EACf4G,iBAAkBA,EAClBD,gBAAiBA,EACjB5G,aAAcA,EACdgQ,OAAQA,EACRC,OAAQA,KAGVzP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,KAACoE,EAAAA,EAAU,OAGbpE,EAAAA,EAAAA,KAAC2T,EAAAA,QAAW,CACVtU,aAAcA,EACdC,cAAeA,EACfiL,SAAUA,KAGZ1K,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,CAC/CkS,GACCjS,EAAAA,EAAAA,KAAC4P,EAAS,KAEV5P,EAAAA,EAAAA,KAAC4T,EAAAA,QAAa,CACZtJ,KAAMjL,EAAe,OAAS,UAC9BA,aAAcA,EACdC,cAAeA,EACfiL,SAAUA,KAIdvK,EAAAA,EAAAA,KAAC6T,EAAAA,QAAS,CAACxE,OAAQA,EAAQC,OAAQA,KAEnCtP,EAAAA,EAAAA,KAAC4T,EAAAA,QAAa,CAACtJ,KAAK,gBAGtBtK,EAAAA,EAAAA,KAAC8T,EAAAA,QAAQ,CAAC1U,MAAOA,EAAAA,EAAOC,aAAcA,EAAcC,cAAeA,KACnEU,EAAAA,EAAAA,KAAC+T,EAAG,CAAC1U,aAAcA,EAAcC,cAAeA,EAAeiL,SAAUA,QAG3EvK,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,SAER,C","sources":["components/blog/BlogList.js","components/common/OptimizedImage.js","components/layout/Breadcrumb.js","components/layout/Footer.js","components/layout/Navbar.js","components/rates/EggRatesTable.js","components/rates/MainContent.js","components/rates/StateList.js","components/rates/StatePage.js","components/common/FAQ.js","pages/MainPage.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nconst BlogList = ({ blogs, selectedCity, selectedState }) => {\n  // Sort blogs by upload date (newest first)\n  const sortedBlogs = [...blogs].sort((a, b) => \n    new Date(b.uploadDate) - new Date(a.uploadDate)\n  );\n\n  // Create keyword-rich heading based on the current page context\n  const getContextHeading = () => {\n    if (selectedCity) {\n      return `Egg Rate Articles & Insights for ${selectedCity}`;\n    } else if (selectedState) {\n      return `Egg Market Articles & Updates for ${selectedState}`;\n    } else {\n      return 'Latest Egg Rate Articles & Market Insights';\n    }\n  };\n\n  return (\n    <div className=\"mt-10 bg-white shadow-lg rounded-lg p-6\">\n      {/* Add schema.org structured data for blog listings */}\n      <Helmet>\n        <script type=\"application/ld+json\">{`\n          {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"ItemList\",\n            \"itemListElement\": [\n              ${sortedBlogs.map((blog, index) => `\n              {\n                \"@type\": \"ListItem\",\n                \"position\": ${index + 1},\n                \"url\": \"https://todayeggrates.com/blog/${blog.link}\",\n                \"name\": \"${blog.title}\"\n              }\n              `).join(',')}\n            ]\n          }\n        `}</script>\n      </Helmet>\n      \n      <h2 className=\"text-2xl font-bold mb-6 text-gray-800 text-center\">\n        {getContextHeading()}\n      </h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {sortedBlogs.map((blog, index) => (\n          <div key={index} className=\"bg-gray-50 rounded-lg overflow-hidden shadow transition-transform hover:scale-105\">\n            <Link to={`/blog/${blog.link}`} className=\"block\">\n              <img \n                src={blog.image} \n                alt={blog.title} \n                className=\"w-full h-48 object-cover\"                loading={index < 3 ? \"eager\" : \"lazy\"}\n                width={400}\n                height={300}\n              />\n              <div className=\"p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">{blog.title}</h3>\n                <p className=\"text-gray-600 text-sm mb-3\">{blog.description}</p>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-blue-600 font-medium text-sm\">Read more</span>\n                  <time dateTime={blog.uploadDate} className=\"text-gray-500 text-sm\">\n                    {new Date(blog.uploadDate).toLocaleDateString('en-US', {\n                      year: 'numeric',\n                      month: 'short',\n                      day: 'numeric'\n                    })}\n                  </time>\n                </div>\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n      \n      {/* Add contextual internal linking section */}\n      {(selectedCity || selectedState) && (\n        <div className=\"mt-8 p-4 bg-blue-50 rounded-lg\">\n          <h3 className=\"text-lg font-semibold text-blue-800 mb-2\">Related Egg Rate Resources</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <h4 className=\"font-medium text-blue-700 mb-1\">Popular Cities</h4>\n              <ul className=\"list-disc pl-5 text-blue-600\">\n                <li><Link to=\"/mumbai-egg-rate\" className=\"hover:underline\">Mumbai Egg Rate</Link></li>\n                <li><Link to=\"/delhi-egg-rate\" className=\"hover:underline\">Delhi Egg Rate</Link></li>\n                <li><Link to=\"/hyderabad-egg-rate\" className=\"hover:underline\">Hyderabad Egg Rate</Link></li>\n                <li><Link to=\"/barwala-egg-rate\" className=\"hover:underline\">Barwala Egg Rate</Link></li>\n                <li><Link to=\"/bengaluru-egg-rate\" className=\"hover:underline\">Bengaluru Egg Rate</Link></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-blue-700 mb-1\">Market Resources</h4>\n              <ul className=\"list-disc pl-5 text-blue-600\">\n                <li><Link to=\"/webstories\" className=\"hover:underline\">Egg Rate Web Stories</Link></li>\n                <li><Link to=\"/blog/egg-rate-barwala\" className=\"hover:underline\">Barwala Market Analysis</Link></li>\n                <li><Link to=\"/blog/blog-1\" className=\"hover:underline\">Understanding Today's Egg Rates</Link></li>\n                <li><Link to=\"/blog/blog-2\" className=\"hover:underline\">Egg Rate Trends in India</Link></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlogList;","import React, { useState, useEffect, useRef } from 'react';\n\nconst OptimizedImage = ({ src, alt, className = '', width, height }) => {\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const imgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ \n    width: width || 0, \n    height: height || 0 \n  });\n\n  // Early load image dimensions if not provided\n  useEffect(() => {\n    if (!width || !height) {\n      const img = new Image();\n      img.src = src;\n      \n      // Use native browser lazy loading hint\n      if ('loading' in HTMLImageElement.prototype) {\n        img.loading = 'lazy';\n      }\n      \n      img.onload = () => {\n        setDimensions({ \n          width: img.naturalWidth, \n          height: img.naturalHeight \n        });\n        setImageLoaded(true);\n        setLoaded(true);\n      };\n      \n      img.onerror = () => {\n        setError(true);\n      };\n    } else {\n      setDimensions({ width, height });\n      setImageLoaded(true);\n    }\n  }, [src, width, height]);\n\n  // Extract Tailwind dimensions\n  const hasTailwindDimensions = /w-\\d+|h-\\d+/.test(className);\n  const aspectRatio = imageLoaded ? (dimensions.height / dimensions.width) * 100 : 56.25;\n\n  // Calculate sizes attribute based on responsive classes\n  const getSizes = () => {\n    if (className.includes('w-full')) return '100vw';\n    if (className.match(/w-(\\d+)\\/(\\d+)/)) {\n      const [, num, den] = className.match(/w-(\\d+)\\/(\\d+)/);\n      return `${(num / den) * 100}vw`;\n    }\n    return '100vw';\n  };\n\n  return (\n    <div \n      className={`relative overflow-hidden ${hasTailwindDimensions ? '' : 'w-full'}`}\n      style={{ \n        width: width ? `${width}px` : '100%',\n        aspectRatio: dimensions.width && dimensions.height ? \n          `${dimensions.width}/${dimensions.height}` : '16/9',\n        contain: 'layout paint style'\n      }}\n    >\n      <div\n        style={{ \n          paddingTop: `${aspectRatio}%`,\n          contain: 'strict'\n        }}\n        className={`${error ? 'bg-gray-200' : 'bg-gray-100'}`}\n        aria-hidden=\"true\"\n      />\n      {!error && imageLoaded && (\n        <img\n          ref={imgRef}\n          src={src}\n          alt={alt}\n          width={dimensions.width || undefined}\n          height={dimensions.height || undefined}\n          className={`absolute top-0 left-0 w-full h-full object-cover ${className} ${\n            !loaded ? 'opacity-0' : 'opacity-100'\n          } transition-opacity duration-300 will-change-transform`}\n          loading=\"lazy\"\n          decoding=\"async\"\n          sizes={getSizes()}\n          fetchpriority={/hero|logo|banner/.test(className.toLowerCase()) ? 'high' : 'auto'}\n          onLoad={() => {\n            setLoaded(true);\n            // Force layout recalculation\n            if (imgRef.current) {\n              imgRef.current.style.transform = 'translateZ(0)';\n            }\n          }}\n          onError={(e) => {\n            setError(true);\n            e.target.onerror = null;\n            e.target.src = '/tee.webp';\n          }}\n          style={{\n            contain: 'layout paint style',\n            willChange: 'transform',\n            transform: 'translateZ(0)'\n          }}\n        />\n      )}\n      {error && (\n        <div className=\"absolute top-0 left-0 w-full h-full flex items-center justify-center text-gray-500\">\n          <span>Image not available</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OptimizedImage;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nconst Breadcrumb = () => {\n  const location = useLocation();\n  const pathSegments = location.pathname.split('/').filter(segment => segment !== '');\n  \n  // Skip rendering if we're on the homepage\n  if (pathSegments.length === 0) {\n    return null;\n  }\n  \n  // Generate breadcrumb items\n  const breadcrumbItems = [\n    {\n      name: 'Home',\n      path: '/',\n      position: 1\n    }\n  ];\n  \n  // Build the breadcrumb path segments\n  let currentPath = '';\n  pathSegments.forEach((segment, index) => {\n    currentPath += `/${segment}`;\n    \n    // Format the segment name to be more readable\n    let name = segment;\n    \n    // Handle special cases\n    if (segment.includes('-egg-rate')) {\n      name = segment.replace('-egg-rate', '');\n      name = name.charAt(0).toUpperCase() + name.slice(1) + ' Egg Rate';\n    } else if (segment === 'blog' && index === 0) {\n      name = 'Blog';\n    } else if (segment === 'state' && index === 0) {\n      name = 'States';\n    } else if (segment === 'webstories') {\n      name = 'Web Stories';\n    } else {\n      // Capitalize and replace hyphens with spaces for other segments\n      name = segment\n        .split('-')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n    }\n    \n    breadcrumbItems.push({\n      name,\n      path: currentPath,\n      position: index + 2\n    });\n  });\n  \n  // Create schema for breadcrumbs\n  const breadcrumbSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": breadcrumbItems.map(item => ({\n      \"@type\": \"ListItem\",\n      \"position\": item.position,\n      \"name\": item.name,\n      \"item\": `https://todayeggrates.com${item.path}`\n    }))\n  };\n  \n  return (\n    <>\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(breadcrumbSchema)}\n        </script>\n      </Helmet>\n      \n      <nav className=\"flex mb-5 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\n          {breadcrumbItems.map((item, index) => (\n            <li key={index} className=\"inline-flex items-center\">\n              {index > 0 && (\n                <span className=\"mx-2 text-gray-500\">/</span>\n              )}\n              \n              {index === breadcrumbItems.length - 1 ? (\n                <span className=\"text-gray-700 font-medium\" aria-current=\"page\">\n                  {item.name}\n                </span>\n              ) : (\n                <Link \n                  to={item.path} \n                  className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                >\n                  {item.name}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ol>\n      </nav>\n    </>\n  );\n};\n\nexport default Breadcrumb;","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"bg-[#422C18] text-white p-6 mt-8\">\n      <div className=\"container mx-auto flex flex-col md:flex-row justify-between items-center\">\n        <div className=\"mb-4 md:mb-0\">\n          <p className=\"text-center md:text-left\">\n            © {new Date().getFullYear()} todayEggRates. All Rights Reserved.\n          </p>\n        </div>\n        <div className=\"flex flex-col md:flex-row md:space-x-6\">\n        <a\n            href=\"/disclaimer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Disclaimer\n          </a>\n          <a\n            href=\"/privacy\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300 mb-2 md:mb-0\"\n          >\n            Privacy Policy\n          </a>\n          <a\n            href=\"/terms\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Terms of Service\n          </a>\n        </div>\n      </div>\n      <div className=\"mt-6 text-center\">\n        <p className=\"text-[#C4A484] text-sm\">\n          Follow us on{\" \"}\n          <a\n            href=\"https://www.facebook.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Facebook\n          </a>\n          ,{\" \"}\n          <a\n            href=\"https://www.twitter.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Twitter\n          </a>\n          ,{\" \"}\n          <a\n            href=\"https://www.instagram.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#C4A484] hover:text-white transition duration-300\"\n          >\n            Instagram\n          </a>\n          .\n        </p>\n        <br/>\n        <p>Made with &#10084; by <a href=\"https://www.instagram.com/being._owais/profilecard/?igsh=MWo5Nm45cjFuNzVobA==\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:underline\">Owais Khan</a></p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport Select from 'react-select';\nimport { FaBars, FaTimes } from 'react-icons/fa';\nimport OptimizedImage from '../common/OptimizedImage';\n\nconst Navbar = ({ setSelectedCity, setSelectedState, selectedCity, selectedState }) => {\n  const [options, setOptions] = useState([]);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Track navigation lock to prevent redundant navigations\n  const navigationLock = React.useRef(false);\n\n  useEffect(() => {\n    fetch('/php/api/location/get_states_and_cities.php')\n      .then(response => response.json())\n      .then(data => {\n        const combinedOptions = [];\n        const stateSet = new Set();\n        const citySet = new Set();\n        \n        for (const state in data) {\n          if (!stateSet.has(state)) {\n            combinedOptions.push({\n              value: state,\n              label: state,\n              type: 'state',\n            });\n            stateSet.add(state);\n          }\n          \n          data[state].forEach(city => {\n            // Standardize city names\n            let cityName = city;\n            // Case-insensitive check for bengaluru/bangalore variants\n            if (cityName.toLowerCase() === 'bangalore' || \n                cityName.toLowerCase() === 'bangalore (cc)' || \n                cityName.toLowerCase() === 'bengaluru (cc)' ||\n                cityName.toLowerCase() === 'bengaluru') {\n              cityName = 'Bengaluru'; // Always use this capitalization\n            }\n            \n            const cityLabel = `${cityName}, ${state}`;\n            if (!citySet.has(cityLabel)) {\n              combinedOptions.push({\n                value: cityName,\n                label: cityLabel,\n                type: 'city',\n              });\n              citySet.add(cityLabel);\n            }\n          });\n        }\n        setOptions(combinedOptions);\n      })\n      .catch(error => console.error('Error fetching states and cities:', error));\n  }, []);\n\n  const handleChange = (selectedOption) => {\n    if (!selectedOption || navigationLock.current) return;\n    \n    navigationLock.current = true;\n    const { type, label } = selectedOption;\n    \n    if (type === 'city') {\n      const [city, state] = label.split(', ');\n      let selectedCityName = city;\n      \n      // Case-insensitive check for bengaluru/bangalore variants\n      if (selectedCityName.toLowerCase() === 'bangalore' || \n          selectedCityName.toLowerCase() === 'bangalore (cc)' || \n          selectedCityName.toLowerCase() === 'bengaluru (cc)' ||\n          selectedCityName.toLowerCase() === 'bengaluru') {\n        selectedCityName = 'Bengaluru'; // Always use this capitalization\n      }\n      \n      // Update states first\n      setSelectedCity(selectedCityName);\n      setSelectedState(state);\n      \n      // Then navigate with a slight delay\n      setTimeout(() => {\n        const path = `/${selectedCityName.toLowerCase()}-egg-rate`;\n        \n        // Only navigate if we're not already on this path\n        if (location.pathname !== path) {\n          navigate(path, { replace: true });\n        }\n        \n        navigationLock.current = false;\n      }, 5);\n      \n    } else if (type === 'state') {\n      // Update states first\n      setSelectedCity('');\n      setSelectedState(label);\n      \n      // Then navigate with a slight delay\n      setTimeout(() => {\n        const path = `/state/${label.toLowerCase()}-egg-rate`;\n        \n        // Only navigate if we're not already on this path\n        if (location.pathname !== path) {\n          navigate(path, { replace: true });\n        }\n        \n        navigationLock.current = false;\n      }, 5);\n    }\n  };\n\n  const handleHomeClick = (e) => {\n    if (navigationLock.current) {\n      e.preventDefault();\n      return;\n    }\n    \n    navigationLock.current = true;\n    setSelectedCity('');\n    setSelectedState('');\n    \n    // Only navigate if we're not already on home\n    if (location.pathname !== '/') {\n      navigate('/');\n    }\n    \n    // Release lock after a short delay\n    setTimeout(() => {\n      navigationLock.current = false;\n    }, 5);\n  };\n\n  const handleCityClick = (city, e) => {\n    if (navigationLock.current) {\n      e?.preventDefault();\n      return;\n    }\n    \n    navigationLock.current = true;\n    // Update state first\n    setSelectedCity(city);\n    setSelectedState('');\n    \n    // Then navigate with a slight delay\n    setTimeout(() => {\n      const path = `/${city.toLowerCase()}-egg-rate`;\n      \n      // Only navigate if we're not already on this path\n      if (location.pathname !== path) {\n        navigate(path, { replace: true });\n      }\n      \n      navigationLock.current = false;\n    }, 5);\n  };\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  const handleLogoError = (e) => {\n    console.error('Error loading logo:', e.nativeEvent);\n    console.error('Error target:', e.target);\n    e.target.src = '/tee.avif'; // Fallback image\n  };\n\n  return (\n    <nav className=\"bg-white p-4 shadow-lg\">\n      <div className=\"container mx-auto flex flex-col md:flex-row justify-between items-center\">\n        <div className=\"flex justify-between items-center w-full md:w-auto\">          <Link to=\"/\" onClick={handleHomeClick} className=\"mb-4 md:mb-0\">\n            <OptimizedImage\n              src=\"/tee.webp\"\n              alt=\"Today Egg Rates Logo\"\n              className=\"h-10\"\n              width={200}\n              height={40}\n              onError={handleLogoError}\n            />\n          </Link>\n          <button\n            className=\"md:hidden text-gray-800 focus:outline-none\"\n            onClick={toggleMenu}\n          >\n            {menuOpen ? <FaTimes size={24} /> : <FaBars size={24} />}\n          </button>\n        </div>\n        <div\n          className={`${\n            menuOpen ? 'block' : 'hidden'\n          } md:flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-4 mb-4 md:mb-0 w-full md:w-auto`}\n        >\n          <div className=\"flex flex-col space-y-2 md:space-y-0 md:flex-row md:space-x-4\">\n            <Link\n              to=\"/\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={handleHomeClick}\n            >\n              Home\n            </Link>\n            <Link\n              to=\"/mumbai-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Mumbai', e)}\n            >\n              Mumbai\n            </Link>\n            <Link\n              to=\"/kolkata-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Kolkata', e)}\n            >\n              Kolkata\n            </Link>\n            <Link\n              to=\"/lucknow-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Lucknow', e)}\n            >\n              Lucknow\n            </Link>\n            <Link\n              to=\"/barwala-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Barwala', e)}\n            >\n              Barwala\n            </Link>\n            <Link\n              to=\"/hyderabad-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Hyderabad', e)}\n            >\n              Hyderabad\n            </Link>\n            <Link\n              to=\"/chennai-egg-rate\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n              onClick={(e) => handleCityClick('Chennai', e)}\n            >\n              Chennai\n            </Link>\n            <Link\n              to=\"/webstories\"\n              className=\"text-gray-800 hover:text-gray-600 transition duration-300\"\n            >\n              Web Stories\n            </Link>\n          </div>\n        </div>\n        <div className=\"w-full md:w-64\">\n          <Select\n            value={options.find(option => option.value === (selectedCity || selectedState))}\n            onChange={handleChange}\n            options={options}\n            className=\"w-full\"\n            styles={{\n              control: (base) => ({\n                ...base,\n                backgroundColor: 'white',\n                borderColor: 'transparent',\n                boxShadow: 'none',\n                '&:hover': {\n                  borderColor: 'transparent',\n                },\n                padding: '0.5rem', // Add padding for better touch target\n                borderRadius: '0.375rem', // Tailwind rounded\n              }),\n              menu: (base) => ({\n                ...base,\n                zIndex: 9999,\n              }),\n              placeholder: (base) => ({\n                ...base,\n                color: '#A0AEC0', // Placeholder color for better contrast\n              }),\n            }}\n            placeholder=\"Select City, State\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { registerables } from 'chart.js';\nimport { Bar, Line } from 'react-chartjs-2';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ...registerables);\n\nconst EggRatesTable = ({ mode = 'default', selectedCity, selectedState, eggRates = [], handleSort, setEggRate, handleDelete, handleEditRate }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({ key: 'city', direction: 'ascending' });\n  \n  const requestSort = (key) => {\n    setSortConfig({\n      key,\n      direction: sortConfig.key === key && sortConfig.direction === 'ascending' ? 'descending' : 'ascending',\n    });\n  };\n  const [editingRate, setEditingRate] = useState(null);\n  const [editedRate, setEditedRate] = useState({});\n  const [specialRates, setSpecialRates] = useState([]);\n  const itemsPerPage = 10;\n\n  useEffect(() => {\n    if (mode === 'special') {\n      fetch('/php/api/rates/get_special_rates.php')\n        .then(response => response.json())\n        .then(data => setSpecialRates(data))\n        .catch(error => console.error('Error fetching special rates:', error));\n    }\n  }, [mode]);\n\n  // Common table pagination logic\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(eggRates.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  const sortedEggRates = [...eggRates].sort((a, b) => {\n    if (!sortConfig.key) return 0;\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? -1 : 1;\n    }\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? 1 : -1;\n    }\n    return 0;\n  });\n\n  const currentItems = mode === 'special' ? specialRates : sortedEggRates.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Chart data preparation for rate view\n  const chartData = {\n    labels: currentItems.map(rate => rate.city || rate.date),\n    datasets: [\n      {\n        label: 'Egg Rates',\n        data: currentItems.map(rate => rate.rate),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n        tension: 0.3,\n        fill: mode === 'rate',\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: mode === 'rate' ? 'Rate Trends' : 'Egg Rates Comparison',\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => `₹${context.raw.toFixed(2)}`\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        ticks: {\n          callback: (value) => `₹${value.toFixed(2)}`\n        }\n      }\n    }\n  };\n\n  // Handle edit functionality for admin mode\n  const handleEditClick = (rate) => {\n    setEditingRate(rate);\n    setEditedRate(rate);\n  };\n\n  const handleSaveClick = () => {\n    handleEditRate(editedRate);\n    setEditingRate(null);\n  };\n\n  const handleChange = (e) => {\n    setEditedRate({\n      ...editedRate,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Render table based on mode\n  const renderTable = () => {\n    switch (mode) {\n      case 'special':\n        return (\n          <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg\">\n            <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Special Rates</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead style={{ backgroundColor: '#f9be0c' }}>\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Market</th>\n                    <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Piece</th>\n                    <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Tray</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {currentItems.length > 0 ? (\n                    currentItems.map((rate, index) => (\n                      <tr\n                        key={index}\n                        className={`transition duration-150 ease-in-out ${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n                      >\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">{rate.city}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">₹{parseFloat(rate.rate).toFixed(2)}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">₹{parseFloat((rate.rate) * 30).toFixed(2)}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan=\"3\" className=\"px-6 py-4 text-center text-sm text-gray-500\">No special rates available</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        );\n\n      case 'rate':\n        return (\n          <div className=\"mt-6\">\n            <div style={{ height: '400px' }}>\n              <Line data={chartData} options={chartOptions} />\n            </div>\n            <div className=\"mt-6 overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rate</th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tray Price</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {currentItems.map((rate, index) => (\n                    <tr key={index}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rate.date}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">₹{rate.rate.toFixed(2)}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">₹{(rate.rate * 30).toFixed(2)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        );\n\n      case 'admin':\n        return (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    <button onClick={() => requestSort('city')}>City</button>\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    <button onClick={() => handleSort('state')}>State</button>\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    <button onClick={() => handleSort('rate')}>Rate</button>\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {currentItems.map((rate, index) => (\n                  <tr key={index}>\n                    {editingRate === rate ? (\n                      <>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"text\"\n                            name=\"city\"\n                            value={editedRate.city}\n                            onChange={handleChange}\n                            className=\"border rounded px-2 py-1\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"text\"\n                            name=\"state\"\n                            value={editedRate.state}\n                            onChange={handleChange}\n                            className=\"border rounded px-2 py-1\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"number\"\n                            name=\"rate\"\n                            value={editedRate.rate}\n                            onChange={handleChange}\n                            className=\"border rounded px-2 py-1\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <button\n                            onClick={handleSaveClick}\n                            className=\"text-green-600 hover:text-green-900 mr-2\"\n                          >\n                            Save\n                          </button>\n                          <button\n                            onClick={() => setEditingRate(null)}\n                            className=\"text-gray-600 hover:text-gray-900\"\n                          >\n                            Cancel\n                          </button>\n                        </td>\n                      </>\n                    ) : (\n                      <>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rate.city}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rate.state}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">₹{rate.rate.toFixed(2)}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                          <button\n                            onClick={() => handleEditClick(rate)}\n                            className=\"text-indigo-600 hover:text-indigo-900 mr-2\"\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={() => handleDelete(rate)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            Delete\n                          </button>\n                        </td>\n                      </>\n                    )}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        );\n\n      default: // default table view\n        return (\n          <div>\n            <div style={{ height: '400px' }}>\n              <Bar data={chartData} options={chartOptions} />\n            </div>\n            <div className=\"mt-6 overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">City</th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">State</th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rate</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {currentItems.map((rate, index) => (\n                    <tr key={index}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rate.city}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rate.state}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">₹{rate.rate.toFixed(2)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      {renderTable()}\n      {mode !== 'special' && currentItems.length > itemsPerPage && (\n        <div className=\"flex justify-center mt-4 space-x-2\">\n          {pages.map((number) => (\n            <button\n              key={number}\n              onClick={() => setCurrentPage(number)}\n              className={`px-3 py-1 rounded ${\n                currentPage === number\n                  ? 'bg-blue-500 text-white'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              {number}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EggRatesTable;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MainContent = ({ selectedCity, selectedState, eggRates }) => {\n  const displayName = selectedCity ? selectedCity : selectedState ? selectedState : 'India';\n  const today = new Date().toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n  \n  const [featuredWebStories, setFeaturedWebStories] = useState([]);\n  const [showWebStories, setShowWebStories] = useState(false);\n  \n  // Stats calculations\n  const currentRate = eggRates.length > 0 ? eggRates[0].rate : 'N/A';\n  // We'll use this in the future for additional comparisons\n  // const rate7DaysAgo = eggRates.length > 7 ? eggRates[6].rate : 'N/A';\n  const weeklyChange = eggRates.length > 7 ? (eggRates[0].rate - eggRates[6].rate).toFixed(2) : 'N/A';\n  const weeklyChangePercent = eggRates.length > 7 ? ((eggRates[0].rate - eggRates[6].rate) / eggRates[6].rate * 100).toFixed(2) : 'N/A';\n  const averagePrice = eggRates.length > 0 ? (eggRates.reduce((sum, rate) => sum + rate.rate, 0) / eggRates.length).toFixed(2) : 'N/A';\n\n  useEffect(() => {\n    // Fetch web stories and randomly select 3\n    fetch('/php/get_web_stories.php')\n      .then(response => response.json())\n      .then(data => {\n        const shuffled = [...data].sort(() => 0.5 - Math.random());\n        setFeaturedWebStories(shuffled.slice(0, 3));\n      })\n      .catch(error => console.error('Error fetching web stories:', error));\n  }, []);\n\n  const getUniqueH1 = () => {\n    if (selectedCity) {\n      return `Egg Rate in ${selectedCity}, ${selectedState} (${today})`;\n    } else if (selectedState) {\n      return `Egg Rates in ${selectedState} (${today})`;\n    }\n    return `Today's Egg Rates in India (${today})`;\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto mb-8\">\n      {/* Hero Section */}\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-800 text-center mb-4\">\n          {getUniqueH1()}\n        </h1>\n        <p className=\"text-center text-lg font-semibold text-gray-700 mb-2\">\n          Current Rates for {displayName}\n        </p>\n        <p className=\"text-center text-gray-600 mb-4\">\n          {selectedCity \n            ? `Get the latest egg rates for ${selectedCity}. Updated daily with wholesale and retail prices.`\n            : selectedState\n              ? `Check current egg prices across ${selectedState}. Compare rates from different cities.`\n              : 'Track egg prices across India with our daily updated NECC rates from major cities.'\n          }\n        </p>\n\n        {/* Price Statistics */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-6\">\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold text-blue-800\">Today's Rate</h3>\n            <p className=\"text-2xl font-bold text-blue-600\">₹{currentRate}</p>\n          </div>\n          <div className=\"bg-green-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold text-green-800\">Weekly Change</h3>\n            <p className=\"text-2xl font-bold text-green-600\">{weeklyChange} ({weeklyChangePercent}%)</p>\n          </div>\n          <div className=\"bg-purple-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold text-purple-800\">Average Price</h3>\n            <p className=\"text-2xl font-bold text-purple-600\">₹{averagePrice}</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Web Stories Section */}\n      <div className=\"mt-6 text-center\">\n        <button\n          onClick={() => setShowWebStories(!showWebStories)}\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n        >\n          {showWebStories ? 'Hide Web Stories' : 'Show Web Stories'}\n        </button>\n      </div>\n\n      {showWebStories && featuredWebStories.length > 0 && (\n        <div className=\"mt-6\">\n          <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Latest Updates</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {featuredWebStories.map(story => (\n              <Link\n                key={story.id}\n                to={`/webstories/${story.slug}`}\n                className=\"block bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\"\n              >\n                <div className=\"aspect-w-9 aspect-h-16 mb-2\">\n                  <img \n                    src={story.thumbnail} \n                    alt={`Egg Rate in ${story.city}, ${story.state}`} \n                    className=\"object-cover w-full h-48 rounded-lg\"\n                    loading=\"lazy\"\n                  />\n                </div>\n                <h3 className=\"font-bold text-lg mb-1\">{story.title}</h3>\n                <p className=\"text-red-600 font-bold mb-1\">₹{story.rate} per egg</p>\n                <p className=\"text-gray-600 text-sm\">{story.date}</p>\n              </Link>\n            ))}\n          </div>          \n        </div>\n      )}\n\n      {/* Market Information */}\n      <div className=\"mt-8 bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Market Information</h2>\n        <div className=\"prose max-w-none\">\n          <p className=\"text-gray-700 mb-4\">\n            The National Egg Coordination Committee (NECC) plays a crucial role in determining egg prices in India. They consider factors like:\n          </p>\n          <ul className=\"list-disc pl-5 text-gray-700 mb-4\">\n            <li>Feed costs and availability</li>\n            <li>Transportation expenses</li>\n            <li>Market demand and supply</li>\n            <li>Seasonal variations</li>\n          </ul>\n        </div>\n      </div>\n\n      {/* Additional Market Info */}\n      <div className=\"mt-8 bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Price Analysis</h2>\n        <p className=\"text-gray-700 mb-4\">\n          {`Current price trends in ${displayName} show ${weeklyChange > 0 ? 'an increase' : 'a decrease'} compared to last week. \n          The average price over the monitored period is ₹${averagePrice}.`}\n        </p>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold text-gray-800 mb-2\">Weekly Comparison</h3>\n            <p className=\"text-gray-700\">\n              {`Price ${weeklyChange > 0 ? 'increased' : 'decreased'} by ₹${Math.abs(weeklyChange)} (${Math.abs(weeklyChangePercent)}%) over the past week.`}\n            </p>\n          </div>\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold text-gray-800 mb-2\">Market Insight</h3>\n            <p className=\"text-gray-700\">\n              {`Tray price (30 eggs): ₹${(currentRate * 30).toFixed(2)}`}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainContent;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst StateList = ({ states, cities }) => {\n  // Define popular city and state lists for SEO enhancements\n  const popularCities = ['Mumbai', 'Chennai', 'Bangalore', 'Kolkata', 'Barwala', 'Siliguri', 'Hyderabad', 'Durgapur'];\n  const popularStates = ['Maharashtra', 'Tamil Nadu', 'Karnataka', 'West Bengal', 'Haryana', 'Kerala', 'Punjab', 'Telangana'];\n  \n  const renderStateTableRows = () => {\n    const rows = [];\n    for (let i = 0; i < states.length; i += 3) {\n      rows.push(\n        <tr key={i} className=\"bg-white border-b hover:bg-gray-50\">\n          {states.slice(i, i + 3).map(state => (\n            <td key={state} className=\"px-6 py-4 text-center\">\n              <Link\n                to={`/state/${state.toLowerCase()}-egg-rate`}\n                className=\"text-green-600 font-bold hover:underline transition duration-200\"\n                title={`Today's Egg Rate in ${state} - NECC Egg Price`}\n              >\n                {state} Egg Rate\n              </Link>\n            </td>\n          ))}\n        </tr>\n      );\n    }\n    return rows;\n  };\n\n  const renderCityTableRows = () => {\n    const rows = [];\n    for (let i = 0; i < cities.length; i += 3) {\n      rows.push(\n        <tr key={i} className=\"bg-white border-b hover:bg-gray-50\">\n          {cities.slice(i, i + 3).map(city => (\n            <td key={city} className=\"px-6 py-4 text-center\">\n              <Link\n                to={`/${city.toLowerCase()}-egg-rate`}\n                className=\"text-blue-600 font-bold hover:underline transition duration-200\"\n                title={`Today's Egg Rate in ${city} - Latest NECC Egg Price`}\n              >\n                {city} Egg Rate\n              </Link>\n            </td>\n          ))}\n        </tr>\n      );\n    }\n    return rows;\n  };\n\n  // Render popular cities section for SEO benefit\n  const renderPopularCities = () => {\n    return (\n      <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n        <h3 className=\"text-lg font-semibold mb-3 text-gray-700\">Popular City Egg Rates</h3>\n        <div className=\"flex flex-wrap gap-2\">\n          {popularCities.map(city => (\n            <Link \n              key={city}\n              to={`/${city.toLowerCase()}-egg-rate`}\n              className=\"px-3 py-1 bg-white border border-blue-200 rounded-full text-sm text-blue-600 hover:bg-blue-100 transition duration-200\"\n              title={`Check today's egg rate in ${city}`}\n            >\n              {city} Egg Rate Today\n            </Link>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  // Render popular states section for SEO benefit\n  const renderPopularStates = () => {\n    return (\n      <div className=\"mt-4 p-4 bg-green-50 rounded-lg\">\n        <h3 className=\"text-lg font-semibold mb-3 text-gray-700\">Popular State Egg Rates</h3>\n        <div className=\"flex flex-wrap gap-2\">\n          {popularStates.map(state => (\n            <Link \n              key={state}\n              to={`/state/${state.toLowerCase()}-egg-rate`}\n              className=\"px-3 py-1 bg-white border border-green-200 rounded-full text-sm text-green-600 hover:bg-green-100 transition duration-200\"\n              title={`Check today's egg rates in ${state}`}\n            >\n              {state} Egg Rate\n            </Link>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"p-6 mt-6 bg-gray-100 rounded-lg shadow-lg max-w-4xl mx-auto\">\n      <h2 className=\"text-center bg-gray-200 rounded-lg w-full p-4 mt-4 text-xl font-semibold\">\n        Daily Egg Price in Mandi, National Wholesale Market Rate\n      </h2>\n      \n      {/* Popular Cities Section */}\n      {renderPopularCities()}\n      \n      {/* Popular States Section */}\n      {renderPopularStates()}\n      \n      <h2 className=\"text-2xl font-bold mb-4 mt-6 text-center\">State-wise Egg Rates</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {states.length > 0 ? renderStateTableRows() : (\n              <tr>\n                <td className=\"px-6 py-4 text-center\" colSpan=\"3\">Loading...</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      {cities.length > 0 && (\n        <>\n          <h2 className=\"text-2xl font-bold mt-8 mb-4 text-center\">City-wise Egg Rates</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {renderCityTableRows()}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n      \n      <div className=\"mt-6 text-sm text-gray-600\">\n        <p>Egg rates updated daily. Last updated: {new Date().toLocaleDateString('en-US', {day: 'numeric', month: 'long', year: 'numeric'})}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StateList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst StatePage = () => {\n  const { state: stateParam } = useParams();\n  const [averageRates, setAverageRates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Extract the state from the URL parameter\n  const state = stateParam.replace('-egg-rate', '');\n\n  useEffect(() => {\n    fetch(`/php/api/rates/get_average_rates_by_state.php?state=${state}`)\n      .then(response => response.json())\n      .then(data => {\n        const sortedRates = (data.averageRates || []).sort((a, b) => new Date(b.date) - new Date(a.date));\n        setAverageRates(sortedRates);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching average rates:', error);\n        setError(error);\n        setLoading(false);\n      });\n  }, [state]);\n\n  if (loading) {\n    return (\n      <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n        <div className=\"text-center\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n        <div className=\"text-center text-red-500\">Error loading data: {error.message}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full border border-gray-300\">\n          <thead>\n            <tr style={{ backgroundColor: '#F9BE0C' }}>\n              <th className=\"border border-gray-300 p-4 text-left\">Date</th>\n              <th className=\"border border-gray-300 p-4 text-left\">Average Rate</th>\n            </tr>\n          </thead>\n          <tbody>\n            {averageRates.length > 0 ? (\n              averageRates.map((rate, index) => (\n                <tr\n                  key={`${rate.date}-${index}`}\n                  className={`transition duration-150 ${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n                >\n                  <td className=\"border border-gray-300 p-4\">{rate.date}</td>\n                  <td className=\"border border-gray-300 p-4\">\n                    {rate.averageRate ? `₹${parseFloat(rate.averageRate).toFixed(2)}` : 'N/A'}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td className=\"border border-gray-300 p-4 text-center\" colSpan=\"2\">No data available</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default StatePage;","import React, { useState } from 'react';\n\n// Function to generate FAQ schema (separate from component rendering)\nexport const generateFaqSchema = (selectedCity, selectedState, eggRates) => {\n  // We only need currentRate and trayPrice for the FAQ schema\n  const currentRate = eggRates?.length > 0 ? eggRates[0].rate : 'N/A';\n  const trayPrice = currentRate !== 'N/A' ? (currentRate * 30).toFixed(2) : 'N/A';\n  \n  // Format date for display\n  const formattedDate = new Date().toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n  \n  // Generate FAQ items based on data\n  const faqItems = generateFaqList(selectedCity, selectedState, currentRate, trayPrice, formattedDate);\n  \n  // Return the structured data object\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": faqItems.map(faq => ({\n      \"@type\": \"Question\",\n      \"name\": faq.question,\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": faq.answer\n      }\n    }))\n  };\n};\n\n// Function to generate the FAQ list (used by both schema and component)\nexport const generateFaqList = (selectedCity, selectedState, currentRate, trayPrice, formattedDate) => {\n  // Default FAQs that appear on all pages\n  const defaultFAQs = [\n    {\n      question: `What is today's egg rate in India?`,\n      answer: `Today's egg rates in India vary by location. The national average egg rate today is updated daily from NECC (National Egg Coordination Committee) sources. Visit our homepage for the latest egg rates across all major cities.`\n    },\n    {\n      question: `What is NECC egg rate today?`,\n      answer: `The official NECC (National Egg Coordination Committee) egg rate today is updated on our website daily. NECC announces egg prices for different zones including Namakkal, Chennai, Delhi, Mumbai, Kolkata and other major markets.`\n    },\n    {\n      question: `How are egg rates determined in India?`,\n      answer: `Egg rates in India are determined by the National Egg Coordination Committee (NECC) based on factors like production costs, demand-supply dynamics, seasonal variations, and regional differences. These rates are announced daily and serve as a benchmark for wholesale egg prices across the country.`\n    },\n    {\n      question: `What is a peti of eggs and how much does it cost today?`,\n      answer: `A \"peti\" (box) of eggs typically contains 30 eggs (one tray). The price of 1 peti egg varies by location. Based on today's rates, a peti of eggs costs approximately ₹150-₹200 depending on your city. Check our city-specific pages for exact prices in your area.`\n    },\n    {\n      question: `Why do egg prices fluctuate?`,\n      answer: `Egg prices fluctuate due to factors like seasonal demand, feed costs, production levels, transportation costs, festivals, weather conditions, and disease outbreaks affecting poultry. The National Egg Coordination Committee (NECC) monitors these factors when setting daily egg rates.`\n    },\n    {\n      question: `What is the difference between farm eggs and market eggs?`,\n      answer: `Farm eggs come directly from producers without passing through the formal market system, while market eggs are distributed through the organized channels regulated by bodies like NECC. Market egg rates are standardized while farm egg prices may vary based on local factors.`\n    },\n    {\n      question: `How much does a tray of 30 eggs cost today?`,\n      answer: `The cost of a tray of 30 eggs (commonly referred to as 1 peti) varies by location. In major cities, the current price ranges from ₹150 to ₹200. Our website provides daily updated city-specific egg rates across India.`\n    },\n    {\n      question: `What are the factors that affect egg rates?`,\n      answer: `Egg rates are affected by multiple factors including: production costs (feed, labor, maintenance), seasonal demand fluctuations, transportation costs, regional supply-demand balance, weather conditions, disease outbreaks in poultry, and government policies regarding the poultry industry.`\n    }\n  ];\n\n  // Location-specific FAQs\n  const locationSpecificFAQs = selectedCity ? [\n    {\n      question: `What is today's egg rate in ${selectedCity}?`,\n      answer: `Today's egg rate in ${selectedCity}, ${selectedState || ''} is ₹${currentRate} per egg (as of ${formattedDate}).`\n    },\n    {\n      question: `What is the price of 30 eggs (1 tray) in ${selectedCity} today?`,\n      answer: `The price of 30 eggs (1 tray) in ${selectedCity} today is ₹${trayPrice} (as of ${formattedDate}).`\n    },\n    {\n      question: `What is the NECC egg rate in ${selectedCity} today?`,\n      answer: `The NECC egg rate in ${selectedCity} today is ₹${currentRate} per egg. NECC (National Egg Coordination Committee) updates egg prices daily based on market conditions.`\n    },\n    {\n      question: `How do egg prices in ${selectedCity} compare to national average?`,\n      answer: `Egg prices in ${selectedCity} may differ from the national average based on local factors like transportation costs, regional demand, and distribution network efficiency. You can compare ${selectedCity}'s egg rates with other cities on our main rates page.`\n    }\n  ] : selectedState ? [\n    {\n      question: `What is the average egg rate in ${selectedState}?`,\n      answer: `The average egg rate in ${selectedState} varies across different cities. We calculate the state average based on NECC rates from major cities in ${selectedState}. This information is updated daily on our website.`\n    },\n    {\n      question: `How do egg prices in ${selectedState} compare to other states?`,\n      answer: `Egg prices in ${selectedState} may be higher or lower than other states depending on factors like local production capacity, transportation networks, and consumer demand. You can compare rates across different states on our website.`\n    },\n    {\n      question: `Which city in ${selectedState} has the lowest egg prices?`,\n      answer: `Egg prices can vary within ${selectedState}. Cities closer to major production centers typically have lower prices. Check our state page for ${selectedState} to see a comparison of egg rates across different cities in the state.`\n    }\n  ] : [];\n\n  // Combine and return all FAQs\n  return [...locationSpecificFAQs, ...defaultFAQs];\n};\n\nconst FAQ = ({ selectedCity, selectedState, eggRates }) => {\n  const [openFAQ, setOpenFAQ] = useState(null);\n  const currentRate = eggRates.length > 0 ? eggRates[0].rate : 'N/A';\n  const trayPrice = currentRate !== 'N/A' ? (currentRate * 30).toFixed(2) : 'N/A';\n  \n  // Format date for display\n  const formattedDate = new Date().toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n  // Get the list of FAQs using the shared function\n  const faqList = generateFaqList(selectedCity, selectedState, currentRate, trayPrice, formattedDate);\n\n  const toggleFAQ = (index) => {\n    if (openFAQ === index) {\n      setOpenFAQ(null);\n    } else {\n      setOpenFAQ(index);\n    }\n  };\n  return (\n    <div className=\"p-6 mt-6 mx-auto bg-white shadow-lg rounded-lg\" id=\"faq-section\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Frequently Asked Questions</h2>\n      \n      {/* Note: FAQ Schema is now centralized and rendered only in MainPage.js */}\n      \n      <div className=\"divide-y divide-gray-200\">\n        {faqList.map((faq, index) => (\n          <div key={index} className=\"py-4\">\n            <button\n              className=\"flex justify-between items-center w-full text-left font-semibold text-gray-800 hover:text-blue-600 transition p-2 rounded-lg\"\n              onClick={() => toggleFAQ(index)}\n              aria-expanded={openFAQ === index}\n              aria-controls={`faq-answer-${index}`}\n            >\n              <span className=\"pr-8\">{faq.question}</span>\n              <svg\n                className={`w-5 h-5 transform transition-transform ${openFAQ === index ? \"rotate-180 text-blue-500\" : \"text-gray-500\"}`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n              </svg>\n            </button>\n            <div \n              id={`faq-answer-${index}`} \n              className={`mt-2 text-gray-700 px-2 overflow-hidden transition-all duration-300 ${openFAQ === index ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'}`}\n            >\n              <p className=\"pb-4\">{faq.answer}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FAQ;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, useLocation, matchPath } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport Navbar from '../components/layout/Navbar';\nimport EggRatesTable from '../components/rates/EggRatesTable';\nimport Footer from '../components/layout/Footer';\nimport MainContent from '../components/rates/MainContent';\nimport StatePage from '../components/rates/StatePage';\nimport StateList from '../components/rates/StateList';\nimport BlogList from '../components/blog/BlogList';\nimport FAQ, { generateFaqSchema } from '../components/common/FAQ';\nimport Breadcrumb from '../components/layout/Breadcrumb';\nimport blogs from '../data/blogs';\n\nconst MainPage = () => {\n  const { city: cityParam, state: stateParam } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedState, setSelectedState] = useState(stateParam ? stateParam.replace('-egg-rate', '') : '');\n  const [selectedCity, setSelectedCity] = useState(cityParam ? cityParam.replace('-egg-rate', '') : '');\n  const [eggRates, setEggRates] = useState([]);  /* eslint-disable-next-line no-unused-vars */\n  const displayName = selectedCity ? selectedCity : selectedState ? selectedState : 'India';\n\n  // Fetch states on mount\n  useEffect(() => {\n    fetch('/php/api/location/get_states.php')\n      .then(res => res.json())\n      .then(data => setStates(data))\n      .catch(error => console.error('Error fetching states:', error));\n  }, []);\n\n  // Fetch cities when state is selected\n  useEffect(() => {\n    if (selectedState) {\n      fetch(`/php/api/location/get_cities.php?state=${selectedState}`)\n        .then(res => res.json())\n        .then(data => setCities(data))\n        .catch(error => console.error('Error fetching cities:', error));\n    }\n  }, [selectedState]);\n\n  const handleFetchRates = useCallback(() => {\n    const endpoint = selectedCity && selectedState \n      ? `/php/api/rates/get_rates.php?city=${selectedCity}&state=${selectedState}`\n      : '/php/api/rates/get_latest_rates.php';\n\n    fetch(endpoint)\n      .then(res => res.json())\n      .then(data => {\n        const convertedData = data.map(item => ({\n          ...item,\n          rate: parseFloat(item.rate),\n        }));\n        setEggRates(convertedData);\n      })\n      .catch(error => console.error('Error fetching rates:', error));\n  }, [selectedCity, selectedState]);\n\n  // Fetch rates when component mounts or when city/state changes\n  useEffect(() => {\n    handleFetchRates();\n  }, [handleFetchRates]);\n\n  // Check if the current URL matches /state/:state\n  const stateMatch = matchPath(\n    { path: '/state/:state' },\n    location.pathname\n  );\n\n  // URL update logic with debouncing\n  const updateURL = useCallback(() => {\n    const currentPath = location.pathname.endsWith('/') \n      ? location.pathname.slice(0, -1) \n      : location.pathname;\n    \n    if (selectedCity && !currentPath.includes(`-egg-rate`)) {\n      const newPath = `/${selectedCity.toLowerCase()}-egg-rate`;\n      if (currentPath !== newPath) {\n        navigate(newPath, { replace: true });\n      }\n    } else if (selectedState && !selectedCity && !currentPath.includes(`-egg-rate`)) {\n      const newPath = `/state/${selectedState.toLowerCase()}-egg-rate`;\n      if (currentPath !== newPath) {\n        navigate(newPath, { replace: true });\n      }\n    }\n  }, [selectedCity, selectedState, navigate, location.pathname]);\n\n  // URL update effect with debouncing\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      updateURL();\n    }, 50);\n    \n    return () => clearTimeout(timeoutId);\n  }, [updateURL]);\n\n  // Update selected state and city when URL parameters change\n  useEffect(() => {\n    if (stateParam) {\n      const newState = stateParam.replace('-egg-rate', '');\n      if (selectedState !== newState) {\n        setSelectedState(newState);\n        setSelectedCity('');\n      }\n    }\n    if (cityParam) {\n      const newCity = cityParam.replace('-egg-rate', '');\n      if (selectedCity !== newCity) {\n        setSelectedCity(newCity);\n      }\n    }\n    if (!stateParam && !cityParam && (selectedState || selectedCity)) {\n      setSelectedCity('');\n      setSelectedState('');\n    }\n  }, [stateParam, cityParam, selectedState, selectedCity]);\n\n  // SEO metadata\n  const formattedDate = new Date().toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n\n  const getSeoTitle = () => {\n    if (selectedCity) {\n      return `Egg Rate in ${selectedCity}, ${selectedState} Today (${formattedDate})`;\n    }\n    if (selectedState) {\n      return `${selectedState} Egg Rate Today - NECC Price (${formattedDate})`;\n    }\n    return `Egg Rate Today - Check Today's NECC Egg Price in India (${formattedDate})`;\n  };\n\n  const getSeoDescription = () => {\n    if (selectedCity) {\n      return `Check today's egg rate in ${selectedCity}, ${selectedState}. Get latest NECC egg prices, market trends, and wholesale rates updated daily.`;\n    }\n    if (selectedState) {\n      return `Today's egg rate in ${selectedState}. Compare NECC egg prices across cities, check market rates, and track daily price changes.`;\n    }\n    return \"Get today's egg rates across India. Check NECC egg prices, compare city rates, and track market trends. Updated daily with wholesale and retail prices.\";\n  };\n\n  const structuredData = {\n    '@context': 'https://schema.org',\n    '@type': 'Product',\n    name: 'Chicken Eggs',\n    description: getSeoDescription(),\n    offers: {\n      '@type': 'AggregateOffer',\n      priceCurrency: 'INR',\n      lowPrice: Math.min(...eggRates.map(rate => rate.rate)),\n      highPrice: Math.max(...eggRates.map(rate => rate.rate)),\n      offerCount: eggRates.length,\n      priceValidUntil: new Date(new Date().setDate(new Date().getDate() + 1)).toISOString()\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{getSeoTitle()}</title>\n        <meta name=\"description\" content={getSeoDescription()} />\n        <link rel=\"canonical\" href={`https://todayeggrates.com${location.pathname}`} />\n        <script type=\"application/ld+json\">{JSON.stringify(structuredData)}</script>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(generateFaqSchema(selectedCity, selectedState, eggRates))}\n        </script>\n        <meta property=\"article:modified_time\" content={new Date().toISOString()} />\n        <meta property=\"og:title\" content={getSeoTitle()} />\n        <meta property=\"og:description\" content={getSeoDescription()} />\n        <meta property=\"og:url\" content={`https://todayeggrates.com${location.pathname}`} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:image\" content=\"https://todayeggrates.com/eggpic.webp\" />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={getSeoTitle()} />\n        <meta name=\"twitter:description\" content={getSeoDescription()} />\n        <meta name=\"twitter:image\" content=\"https://todayeggrates.com/eggpic.webp\" />\n      </Helmet>\n\n      <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n        <Navbar\n          selectedState={selectedState}\n          setSelectedState={setSelectedState}\n          setSelectedCity={setSelectedCity}\n          selectedCity={selectedCity}\n          states={states}\n          cities={cities}\n        />\n\n        <div className=\"flex-grow p-4 md:p-8 lg:p-12\">\n          <div className=\"max-w-4xl mx-auto mb-4\">\n            <Breadcrumb />\n          </div>\n\n          <MainContent \n            selectedCity={selectedCity} \n            selectedState={selectedState}\n            eggRates={eggRates}\n          />\n\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            {stateMatch ? (\n              <StatePage />\n            ) : (\n              <EggRatesTable \n                mode={selectedCity ? 'rate' : 'default'}\n                selectedCity={selectedCity}\n                selectedState={selectedState}\n                eggRates={eggRates}\n              />\n            )}\n            \n            <StateList states={states} cities={cities} />\n            \n            <EggRatesTable mode=\"special\" />\n          </div>\n\n          <BlogList blogs={blogs} selectedCity={selectedCity} selectedState={selectedState} />\n          <FAQ selectedCity={selectedCity} selectedState={selectedState} eggRates={eggRates} />\n        </div>\n\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;"],"names":["_ref","blogs","selectedCity","selectedState","sortedBlogs","sort","a","b","Date","uploadDate","_jsxs","className","children","_jsx","Helmet","type","concat","map","blog","index","link","title","join","Link","to","src","image","alt","loading","width","height","description","dateTime","toLocaleDateString","year","month","day","loaded","setLoaded","useState","error","setError","imageLoaded","setImageLoaded","imgRef","useRef","dimensions","setDimensions","useEffect","img","Image","HTMLImageElement","prototype","onload","naturalWidth","naturalHeight","onerror","hasTailwindDimensions","test","aspectRatio","style","contain","paddingTop","ref","undefined","decoding","sizes","getSizes","includes","match","num","den","fetchpriority","toLowerCase","onLoad","current","transform","onError","e","target","willChange","Breadcrumb","pathSegments","useLocation","pathname","split","filter","segment","length","breadcrumbItems","name","path","position","currentPath","forEach","replace","charAt","toUpperCase","slice","word","push","breadcrumbSchema","item","_Fragment","JSON","stringify","Footer","getFullYear","href","rel","setSelectedCity","setSelectedState","options","setOptions","menuOpen","setMenuOpen","navigate","useNavigate","location","navigationLock","React","fetch","then","response","json","data","combinedOptions","stateSet","Set","citySet","state","has","value","label","add","city","cityName","cityLabel","catch","console","handleHomeClick","preventDefault","setTimeout","handleCityClick","onClick","OptimizedImage","nativeEvent","toggleMenu","FaTimes","size","FaBars","Select","find","option","onChange","selectedOption","selectedCityName","styles","control","base","_objectSpread","backgroundColor","borderColor","boxShadow","padding","borderRadius","menu","zIndex","placeholder","color","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","registerables","mode","eggRates","handleSort","setEggRate","handleDelete","handleEditRate","currentPage","setCurrentPage","sortConfig","setSortConfig","key","direction","editingRate","setEditingRate","editedRate","setEditedRate","specialRates","setSpecialRates","pages","i","Math","ceil","indexOfLastItem","indexOfFirstItem","sortedEggRates","currentItems","chartData","labels","rate","date","datasets","borderWidth","tension","fill","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","text","tooltip","callbacks","context","raw","toFixed","scales","y","beginAtZero","ticks","callback","handleSaveClick","handleChange","renderTable","parseFloat","colSpan","Line","handleEditClick","Bar","number","displayName","today","featuredWebStories","setFeaturedWebStories","showWebStories","setShowWebStories","currentRate","weeklyChange","weeklyChangePercent","averagePrice","reduce","sum","shuffled","random","story","slug","thumbnail","id","abs","states","cities","popularCities","popularStates","renderStateTableRows","rows","renderCityTableRows","StatePage","stateParam","useParams","averageRates","setAverageRates","setLoading","sortedRates","message","averageRate","generateFaqSchema","trayPrice","formattedDate","generateFaqList","faq","question","answer","openFAQ","setOpenFAQ","faqList","toggleFAQ","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","MainPage","cityParam","setStates","setCities","setEggRates","res","handleFetchRates","useCallback","endpoint","convertedData","stateMatch","matchPath","updateURL","endsWith","newPath","timeoutId","clearTimeout","newState","newCity","getSeoTitle","getSeoDescription","structuredData","offers","priceCurrency","lowPrice","min","highPrice","max","offerCount","priceValidUntil","setDate","getDate","toISOString","content","property","Navbar","MainContent","EggRatesTable","StateList","BlogList","FAQ"],"sourceRoot":""}