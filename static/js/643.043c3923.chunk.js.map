{"version":3,"file":"static/js/643.043c3923.chunk.js","mappings":"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","sources":["components/BodyOne.js","components/BodyThree.js","components/BodyTwo.js","components/DefaultTable.js","components/FAQ.js","components/MainPage.js","components/RateTable.js","components/SpecialRatesTable.js","components/StateList.js","components/StatePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BodyOne = ({ selectedCity, selectedState }) => {\n  const displayName = selectedCity ? selectedCity : selectedState ? selectedState : 'India';\n  const today = new Date().toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n  \n  const [featuredWebStories, setFeaturedWebStories] = useState([]);\n  const [isWebStoriesExpanded, setIsWebStoriesExpanded] = useState(false);\n  \n  useEffect(() => {\n    // Fetch top 3 web stories to feature\n    fetch('/php/get_web_stories.php?limit=3')\n      .then(response => response.json())\n      .then(data => {\n        setFeaturedWebStories(data);\n      })\n      .catch(error => console.error('Error fetching web stories:', error));\n  }, []);\n\n  return (\n    <div className=\"p-6 mt-6 bg-gray-100 rounded-lg shadow-lg\">\n      <h1 className=\"text-center font-bold text-3xl text-gray-800\">Today Egg Rate in {displayName} (Daily NECC Egg Price)</h1>\n      <p className=\"text-center text-lg text-gray-600 mt-4\">\n        Egg rates in {displayName} change daily by the NECC. On this page, you can find out the daily egg price mandi rate of 1 tray egg and 1 peti egg across {selectedCity ? 'the city' : 'the state'} of {displayName}.\n      </p>\n\n      {featuredWebStories.length > 0 && (\n        <div className=\"mt-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-xl font-semibold\">Web Stories</h2>\n            <button \n              onClick={() => setIsWebStoriesExpanded(!isWebStoriesExpanded)}\n              className=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm\"\n            >\n              {isWebStoriesExpanded ? 'Collapse' : 'Expand'}\n            </button>\n          </div>\n          \n          {isWebStoriesExpanded && (\n            <>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n                {featuredWebStories.map((story, index) => (\n                  <a \n                    key={index}\n                    href={`/webstories/${story.slug}.html`}\n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"block bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\"\n                  >\n                    <div className=\"aspect-w-9 aspect-h-16 mb-2\">\n                      <img \n                        src={story.thumbnail} \n                        alt={story.title} \n                        className=\"object-cover w-full h-48 rounded-lg\"\n                      />\n                    </div>\n                    <h3 className=\"font-bold\">{story.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{story.date}</p>\n                  </a>\n                ))}\n              </div>\n              <div className=\"text-center mt-4\">\n                <Link to=\"/webstories\" className=\"text-blue-600 hover:text-blue-800 font-semibold\">\n                  View All Web Stories\n                </Link>\n              </div>\n            </>\n          )}\n        </div>\n      )}\n\n      <div className=\"bg-gray-200 rounded-lg w-full p-6 mt-6\">\n        <h2 className=\"text-center text-2xl font-semibold text-gray-800\">Egg Rate Today ({today})</h2>\n        <p className=\"text-left text-gray-700 mt-4\">\n          Here is the live NECC egg rate today list across some of the popular {selectedCity ? 'areas of' : 'cities in'} {displayName}.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default BodyOne;","import React from 'react';\n\nconst BodyThree = ({ selectedCity, selectedState, eggRates }) => {\n  const location = selectedCity || selectedState || 'your area';\n  const todayRate = eggRates.length > 0 ? eggRates[0].rate : 'N/A';\n  const rate7DaysAgo = eggRates.length > 7 ? eggRates[6].rate : 'N/A';\n  const weeklyChange = eggRates.length > 7 ? (eggRates[0].rate - eggRates[6].rate).toFixed(2) : 'N/A';\n  const weeklyChangePercent = eggRates.length > 7 ? ((eggRates[0].rate - eggRates[6].rate) / eggRates[6].rate * 100).toFixed(2) : 'N/A';\n  const averagePrice = eggRates.length > 0 ? (eggRates.reduce((sum, rate) => sum + rate.rate, 0) / eggRates.length).toFixed(2) : 'N/A';\n\n  const formatPrice = (price) => {\n    return typeof price === 'number' ? price.toFixed(2) : price;\n  };\n\n  return (\n    <div className=\"p-6 mt-6 bg-white shadow-lg rounded-lg\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Egg Price Trends in {location}</h2>\n      \n      <section className=\"mb-8\">\n        <h3 className=\"text-2xl font-semibold text-gray-700 mb-4\">{location}</h3>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          As per the latest report, the egg rate in {location} has reached ₹{formatPrice(todayRate)} per piece. But this is not the highest price for eggs in the city in the last one year. The price of eggs has been on the rise in the city for the last few months. The rise in the price of eggs is due to the increase in the cost of chicken feed. The cost of chicken feed has gone up by 10% in the last few months. This has led to an increase in the price of eggs in {location}.\n        </p>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          Egg prices in {location} have been on the rise in recent months, due to a variety of factors. The cost of feed, transportation, and labor have all increased, leading to higher prices at the farm gate. Consumers are now paying more for eggs, with the average price of a tray of eggs now exceeding ₹{formatPrice(todayRate * 30)}. This is a significant increase from just a few years ago, when a tray of eggs could be purchased for as little as ₹{formatPrice(todayRate * 30 - 20)}. The higher prices are having an impact on egg consumption in {location}, as many families are cutting back on their consumption of this staple food. While the current situation is difficult for consumers, it is important to remember that egg prices are still relatively low compared to other staples such as rice and wheat.\n        </p>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          The current egg price situation in {location} is not likely to change in the near future, as the cost of production is still high. However, as the industry adjusts to the new reality of higher prices, egg production is likely to increase, which could help to bring prices down over time. In the meantime, consumers will need to continue to pay more for their eggs.\n        </p>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          Poultry farmers in {location} said they are incurring losses as the cost of chicken feed accounts for around 60 percent of the total cost of production.\n        </p>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          <b>Note:</b> This is not NECC official website. We collect the prices from the NECC site to present the prices in a simple and graphical manner for the convenience of the user. The suggested prices are published solely for the reference and information of the trade and industry. NECC and EggRate.in does not by itself or through any person enforce compliance or adherence with such suggested egg prices in any manner whatsoever.\n        </p>\n      </section>\n\n      <section className=\"mb-8\">\n        <h3 className=\"text-2xl font-semibold text-gray-700 mb-4\">Today's Egg Rate in {location}</h3>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          Today’s date is {new Date().toDateString()} and we can see that the egg rate in {location} today is ₹{formatPrice(todayRate)}. But if we compare today’s date with yesterday’s date, we can see that yesterday the price of eggs in {location} was ₹{formatPrice(todayRate)}.\n        </p>\n        <table className=\"min-w-full bg-white divide-y divide-gray-200 mb-4\">\n          <thead>\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Egg rate details</th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Data</th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Today's Egg rate</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(todayRate)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Egg rate 7 days ago</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(rate7DaysAgo)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Weekly Change in Egg rate (₹)</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">{formatPrice(weeklyChange)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">% Weekly Change in Egg Rate</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">{formatPrice(weeklyChangePercent)}%</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">NECC Egg Price (₹)</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(todayRate)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Wholesale Price (₹)</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(todayRate)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Retail Price (₹)</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(todayRate + 0.35)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Supermarket Price (₹)</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(todayRate + 0.45)}</td>\n            </tr>\n            <tr>\n              <td className=\"px-6 py-4 whitespace-nowrap\">Average Price till today</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">₹{formatPrice(averagePrice)}</td>\n            </tr>\n          </tbody>\n        </table>\n      </section>\n\n      <section className=\"mb-8\">\n        <h3 className=\"text-2xl font-semibold text-gray-700 mb-4\">Egg Rate of a Tray in {location}</h3>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          If you are looking to buy eggs in bulk then you can consider buying an egg tray. The egg tray which usually holds 30 eggs in a tray costs ₹{formatPrice(todayRate * 30)}. Looking at the graph above you can see how the egg rate has fluctuated on a daily basis. In the above graph you can also see the weekly change of egg prices. There has been a change in the price of eggs by {formatPrice(weeklyChange)} compared to last week. The weekly percentage change in the price of eggs is {formatPrice(weeklyChangePercent)}%.\n        </p>\n      </section>\n    </div>\n  );\n};\n\nexport default BodyThree;","import React from \"react\";\n\nconst BodyTwo = ({ selectedCity, selectedState }) => {\n  return (\n    <div className=\"p-6 mt-6 bg-cover bg-center rounded-lg shadow-lg\">\n      <h1 className=\"text-center bg-gray-200 bg-opacity-75 rounded-lg w-full p-4 mt-4 text-2xl font-bold text-gray-800\">\n        Egg Daily and Monthly Prices\n      </h1>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        Our platform Today Egg rates provides the daily and monthly prices of egg throughout the different cities, states and areas of India. This Egg rate indicator is beneficial for both consumers and sellers in the Indian egg market. The daily or today’s egg rate refers to the current price rates of the eggs. Users can scroll up to the previous day's price rates as well, limited to the current month. The egg rates depend on several factors such as production cost, transportation, egg quality, etc.\n      </p>\n\n      <h1 className=\"text-center bg-gray-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n        Wholesale Egg Prices Today\n      </h1>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        The wholesale egg prices represent the rates that retailers and distributors pay when purchasing eggs in bulk quantities. In India, these prices have been experiencing a notable upward trend in recent years, influenced by a variety of factors.\n      </p>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        One of the primary contributors to this increase is the rise in chicken feeding costs. Corn and soybeans, which are the main ingredients in chicken feed, have seen substantial price hikes. This surge in feed prices has a direct impact on the overall costs incurred by egg producers or poultry farms, as feed constitutes a significant portion of their operational expenses.\n      </p>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        Additionally, other factors such as fluctuations in demand and supply, changes in production levels, and economic conditions can also play a role in influencing wholesale egg prices. For instance, periods of high demand—such as during festivals or holidays—can lead to further increases in prices, while production challenges, such as disease outbreaks among poultry, can also restrict supply and drive prices higher.\n      </p>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        The egg market is a dynamic landscape that is ever-evolving, making it essential for consumers to remain well-informed about current egg prices and wholesale egg rates. This knowledge empowers them to make thoughtful and informed purchasing choices. For farmers and egg producers, staying attuned to daily and monthly fluctuations in egg prices is equally vital. By closely monitoring these trends, they can optimize their production strategies and pricing decisions, ensuring sustainability and profitability in their operations. In this intricate dance of supply and demand, awareness becomes a key advantage for all stakeholders involved.\n      </p>\n      <p className=\"text-left text-gray-700 mt-4 leading-relaxed bg-white bg-opacity-75 p-2 rounded\">\n        At TodayEggRates.com, we offer a comprehensive overview of daily and monthly NECC egg rates throughout the different areas/cities and states of India, allowing you to effortlessly compare rates and make informed decisions. Whether you’re a farmer eager to sell your eggs or a consumer searching for the best prices, our platform serves as your trusted resource for the latest egg rate information. Discover today’s price for a tray of eggs or explore the current cost of a peti of eggs. Stay updated with live NECC rates through our detailed pricing data, ensuring you always have access to the most accurate market insights.\n      </p>\n\n      <h1 className=\"text bg-green-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n        NECC-National Egg Coordination Committee\n      </h1>\n      <div className=\"grid lg:grid-cols-2 gap-5\"> \n          <img src=\"/eggrate2.jpg\" className=\"col-span-1 object-contain shadow rounded border-none\" alt=\"egg rate\" />\n          <div>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n              Eggs are a fantastic addition to any meal, whether it's breakfast, lunch, or dinner! You can enjoy them scrambled or boiled, and they work wonderfully in dishes like Anda Bhurji or even Anda Ka Halwa. Just like us Indians, eggs can fit into a variety of recipes while keeping their special charm. If you're curious about egg prices in India, they change daily, as shared by the NECC (National Egg Coordination Committee). We make it easy for you to stay updated with the latest egg rates so you can continue enjoying your favorite egg dishes!\n            </p> \n          </div>\n      </div>\n      <h1 className=\"text bg-green-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n      Today Egg Rates\n      </h1>\n      <div className=\"grid lg:grid-cols-2 gap-5\"> \n        <div>\n          <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n          The National Egg Coordination Committee (NECC) considers purchasing trends and the efforts of egg farmers when recommending current egg prices. This organization provides price suggestions for over 50 cities and states across the country. By disseminating today’s egg prices, we ensure that users remain informed about NECC’s recommendations, thereby enabling them to make more informed purchasing decisions.\n          </p> \n        </div>\n        <img src=\"/desiegg.jpg\" className=\"col-span-1 object-contain shadow rounded border-none\" alt=\"egg rate in india\" />\n      </div>\n      <h1 className=\"text bg-green-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n        Egg Consumption in India\n      </h1>\n      <div className=\"grid lg:grid-cols-2 gap-5\"> \n          <img src=\"/eggrate3.jpg\" className=\"col-span-1 object-contain shadow rounded border-none\" alt=\"egg rate in mumbai\" />\n          <div>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n            India is a major player in the global egg production industry, generating approximately 129.6 billion eggs each year. This production figure is experiencing a steady growth rate of 7% annually, reflecting the increasing demand for eggs among the population. According to data published by Agrospectrum, the average egg consumption per person in India is estimated to be 95 eggs per year. This indicates not only a high level of consumption but also a cultural acceptance of eggs as a staple food source. Furthermore, India holds the position of third largest egg producer globally, trailing only behind China and the United States. This prominent ranking underscores the significant role eggs play in the Indian diet, as well as the growing awareness among consumers regarding the nutritional benefits of eggs, including their high protein content and essential vitamins.\n            </p> \n          </div>\n      </div>\n      <h1 className=\"text bg-green-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n      Factors Affecting Egg Prices in India\n      </h1>\n      <div className=\"grid lg:grid-cols-2 gap-5\"> \n        <div>\n          <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n          Egg prices in India are influenced by a multitude of factors that can fluctuate over time. One of the primary determinants is the balance between demand and supply; when demand for eggs rises, prices tend to increase, whereas a surplus can lead to lower prices. The cost of production plays a crucial role as well, particularly the price of essential inputs such as bird feed, which can vary based on agricultural conditions and market trends.\nDisease outbreaks, especially recurring incidents of bird flu, can have a profound effect on the egg market. Such outbreaks often lead to a decrease in egg production and concerns about food safety, causing prices to spike. Furthermore, the impact of seasonal changes should not be overlooked; egg production typically sees a slight increase during the warmer months of summer due to improved laying conditions, while it often diminishes in the colder winter months when laying can be less consistent. These dynamics create a complex landscape that shapes the pricing of eggs across the country.\n          </p> \n        </div>\n        <img src=\"/eggchicken.jpg\" className=\"col-span-1 object-contain shadow rounded border-none\" alt=\"egg rate barwala\" />\n      </div>\n      <h1 className=\"text bg-green-200 bg-opacity-75 rounded-lg w-full p-4 mt-6 text-2xl font-bold text-gray-800\">\n      How NECC Sets Egg Prices\n      </h1>\n      <div className=\"grid lg:grid-cols-2 gap-5\"> \n          <img src=\"/eggrate3.jpg\" className=\"col-span-1 object-contain shadow rounded border-none\" alt=\"egg rate namakkal\" />\n          <div>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n            NECC (National Egg Coordination Committee) does not set egg prices directly. Instead, it provides a platform for stakeholders to work together and share information. Prices are determined daily by NECC after careful consideration and are updated every day at midnight. Key players in setting these prices include market forces, traders, distributors, and sometimes retailers.\n            </p>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n              <b>Market Forces: </b>\n              Egg prices are influenced by several factors, including demand and supply, inflation, and weather. Seasonal events, like festivals, can also affect egg prices.\n              </p>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n            <b>Traders and Distributors: </b>\n              Traders and distributors play a major role in deciding egg prices in India. They have control over pricing and can negotiate prices, which they then suggest to NECC. They act as middlemen between consumers and egg farmers.\n              </p>\n            <p className=\"text-left text-gray-700 leading-relaxed bg-white bg-opacity-75 p-4 rounded\">\n            <b>Consumers and Consumer Behavior: </b>\n              Consumers do not directly affect prices, but their preferences can have a significant impact. Demand can change due to dietary choices, cultural habits, seasonal factors, and economic conditions. Tracking daily egg prices can be unpredictable, requiring careful attention to get the best results.\n            </p> \n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BodyTwo;","import React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst DefaultTable = ({ eggRates = [] }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({ key: 'city', direction: 'ascending' });\n  const itemsPerPage = 10;\n\n  const handleClick = (event) => {\n    setCurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(eggRates.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  const sortedEggRates = [...eggRates].sort((a, b) => {\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? -1 : 1;\n    }\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? 1 : -1;\n    }\n    return 0;\n  });\n\n  const currentItems = sortedEggRates.slice(indexOfFirstItem, indexOfLastItem);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  if (eggRates.length === 0) {\n    return <div className=\"p-6 mt-6 bg-gray-100 rounded-lg shadow-lg text-center\">No rates available at the moment.</div>;\n  }\n\n  const data = {\n    labels: currentItems.map(rate => rate.city),\n    datasets: [\n      {\n        label: 'Egg Rates',\n        data: currentItems.map(rate => rate.rate),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Egg Rates',\n      },\n    },\n  };\n\n  return (\n    <div className=\"dynamic-body p-4\">\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full border border-gray-300 mt-4\">\n          <thead>\n            <tr style={{ backgroundColor: '#F9BE0C' }}>\n              <th\n                className=\"border border-gray-300 p-2 cursor-pointer\"\n                onClick={() => requestSort('city')}\n              >\n                Market\n              </th>\n              <th\n                className=\"border border-gray-300 p-2 cursor-pointer\"\n                onClick={() => requestSort('rate')}\n              >\n                Piece\n              </th>\n              <th className=\"border border-gray-300 p-2\">Tray</th>\n              <th className=\"border border-gray-300 p-2\">100 Pcs</th>\n              <th className=\"border border-gray-300 p-2\">Peti</th>\n            </tr>\n          </thead>\n          <tbody>\n            {currentItems.map((rate, index) => (\n              <tr\n                key={`${rate.city}-${rate.date}-${index}`}\n                className={`${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n              >\n                <td className=\"border border-gray-300 p-2\">\n                  {rate.city ? (\n                    <a href={`/${rate.city.toLowerCase()}-egg-rate`}>{rate.city}</a>\n                  ) : (\n                    'N/A'\n                  )}\n                </td>\n                <td className=\"border border-gray-300 p-2\">₹{rate.rate.toFixed(2)}</td>\n                <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 30).toFixed(2)}</td>\n                <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 100).toFixed(2)}</td>\n                <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 210).toFixed(2)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"pagination mt-4 flex flex-wrap justify-center\">\n        {pages.map(number => (\n          <button\n            key={number}\n            id={number}\n            onClick={handleClick}\n            className={`px-4 py-2 mx-1 mb-2 border rounded ${currentPage === number ? 'bg-blue-500 text-white' : 'bg-white text-blue-500 hover:bg-blue-100'}`}\n          >\n            {number}\n          </button>\n        ))}\n      </div>\n      <div className=\"mt-8\" style={{ position: 'relative', height: '400px', width: '100%' }}>\n        <Bar data={data} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default DefaultTable;","import React, { useState } from \"react\";\n\nconst FAQ = ({ selectedCity, selectedState, eggRates }) => {\n  const [openFAQ, setOpenFAQ] = useState(null);\n\n  const toggleFAQ = (index) => {\n    setOpenFAQ(openFAQ === index ? null : index);\n  };\n\n  const location = selectedCity || selectedState || 'your area';\n  const rate = eggRates[0]?.rate || 'N/A';\n  const rate30 = (eggRates[0]?.rate * 30).toFixed(2) || 'N/A';\n  const rate100 = (eggRates[0]?.rate * 100).toFixed(2) || 'N/A';\n\n  const faqList = [\n    { question: `What is the egg rate today in ${location}?`, answer: `The egg rate in ${location} is ₹${rate} per egg.` },\n    { question: `What is the rate of 30 eggs in ${location}?`, answer: `The rate of 30 eggs in ${location} is ₹${rate30}.` },\n    { question: `What is the rate of 100 eggs in ${location}?`, answer: `The rate of 100 eggs in ${location} is ₹${rate100}.` },\n    { question: `How often are the rates updated?`, answer: `The rates are updated daily. All the rates may not be accurate and exact same.` },\n    { question: `What are the current egg prices?`, answer: `The current egg prices in ${location} vary depending on the region and the time of year. However, on average, a tray of eggs costs around ₹110-150.` },\n    { question: `What is the average price of eggs in ${location}?`, answer: `The average price of eggs in ${location} is around ₹${rate} per egg.` },\n    { question: `What is the most expensive egg in ${location}?`, answer: `The most expensive egg in ${location} can vary, but specialty eggs like organic or free-range eggs tend to be more expensive.` },\n    { question: `What is the cheapest egg in ${location}?`, answer: `The cheapest egg in ${location} is usually the standard white egg, which costs around ₹${rate} per egg.` },\n    { question: `What is the difference between brown and white eggs?`, answer: `The difference between brown and white eggs is primarily the color of the shell, which is determined by the breed of the hen. Nutritionally, they are the same.` },\n    { question: `What is the difference between free-range and cage-free eggs?`, answer: `Free-range eggs come from hens that have access to the outdoors, while cage-free eggs come from hens that are not kept in cages but may not have outdoor access.` },\n    { question: `What is the nutritional value of eggs?`, answer: `Eggs are a great source of protein, vitamins, and minerals. They contain all nine essential amino acids and are rich in vitamins A, D, E, and B12, as well as iron, selenium, and choline.` },\n  ];\n\n  return (\n    <div className=\"p-6 mt-6 mx-auto bg-white shadow-lg rounded-lg\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Frequently Asked Questions</h2>\n      {faqList.map((faq, index) => (\n        <div key={index} className=\"mb-4 border-b pb-4\">\n          <div\n            className=\"flex justify-between items-center cursor-pointer transition hover:bg-gray-100 p-4 rounded-lg\"\n            onClick={() => toggleFAQ(index)}\n          >\n            <span className=\"font-semibold text-gray-800\">{faq.question}</span>\n            <svg\n              className={`w-5 h-5 transform transition-transform ${openFAQ === index ? \"rotate-180 text-blue-500\" : \"text-gray-500\"}`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n            </svg>\n          </div>\n          {openFAQ === index && <p className=\"mt-2 text-gray-700 px-4\">{faq.answer}</p>}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FAQ;","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useParams, useNavigate, useLocation, matchPath } from 'react-router-dom';\nimport { Helmet } from '../App'; // Import our custom SEO component\n\nimport Navbar from './Navbar';\nimport RateTable from './RateTable';\nimport DefaultTable from './DefaultTable';\nimport Footer from './Footer';\nimport BodyOne from './BodyOne';\nimport BodyTwo from './BodyTwo';\nimport BodyThree from './BodyThree';\nimport StatePage from './StatePage';\nimport StateList from './StateList';\nimport SpecialRatesTable from './SpecialRatesTable';\nimport BlogList from './BlogList';\nimport FAQ from './FAQ'; // Import the FAQ component\nimport blogs from '../data/blogs'; // Import the blogs list\n\nconst MainPage = () => {\n  const { city: cityParam, state: stateParam } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedState, setSelectedState] = useState(stateParam ? stateParam.replace('-egg-rate', '') : '');\n  const [selectedCity, setSelectedCity] = useState(cityParam ? cityParam.replace('-egg-rate', '') : '');\n  const [eggRates, setEggRates] = useState([]);\n  const displayName = selectedCity ? selectedCity : selectedState ? selectedState : 'India';\n\n  // Format displayName for better SEO and user experience with special case handling\n  const formattedDisplayName = useMemo(() => {\n    if (!displayName) return 'India';\n    \n    // Special case formatting for common cities/states to match common search terms\n    const specialCases = {\n      'delhi': 'Delhi (NCR)',\n      'mumbai': 'Mumbai',\n      'bangalore': 'Bengaluru (Bangalore)',\n      'bengaluru': 'Bengaluru (Bangalore)',\n      'hyderabad': 'Hyderabad',\n      'chennai': 'Chennai',\n      'kolkata': 'Kolkata',\n      'pune': 'Pune',\n      'ahmedabad': 'Ahmedabad',\n      'jaipur': 'Jaipur',\n      'tamil nadu': 'Tamil Nadu',\n      'karnataka': 'Karnataka',\n      'telangana': 'Telangana',\n      'maharashtra': 'Maharashtra',\n    };\n    \n    const lowercaseName = displayName.toLowerCase();\n    return specialCases[lowercaseName] || \n           (displayName.charAt(0).toUpperCase() + displayName.slice(1).toLowerCase());\n  }, [displayName]);\n  \n  // Get current date in Indian format for SEO\n  const currentDate = useMemo(() => {\n    return new Date().toLocaleDateString('en-IN', {\n      year: 'numeric',\n      month: 'long', \n      day: 'numeric',\n      weekday: 'long'\n    });\n  }, []);\n  \n  // Enhanced title with more relevant keywords and date\n  const pageTitle = useMemo(() => {\n    if (selectedCity) {\n      return `Egg Rates in ${formattedDisplayName} Today (${currentDate}) - Latest Wholesale & Retail Egg Prices | TodayEggRates.com`;\n    } else if (selectedState) {\n      return `${formattedDisplayName} Egg Rate Today - Updated Egg Prices Across All ${formattedDisplayName} Cities | TodayEggRates.com`;\n    } else {\n      return `Today's Egg Rates - Latest NECC Egg Prices in India (${currentDate}) | TodayEggRates.com`;\n    }\n  }, [selectedCity, selectedState, formattedDisplayName, currentDate]);\n    \n  // Enhanced meta description with more specific content and keywords\n  const metaDescription = useMemo(() => {\n    if (selectedCity) {\n      // Try to include actual price if available for the specific city\n      const cityRate = eggRates && eggRates.length > 0 ? `₹${eggRates[0]?.rate} per 100 eggs` : '';\n      return `Check today's egg rates in ${formattedDisplayName} (${currentDate}). ${cityRate ? `Current price: ${cityRate}. ` : ''}Updated daily egg prices for ${formattedDisplayName} wholesale and retail markets. Compare current NECC egg rates with historical trends. Official verified poultry market prices.`;\n    } else if (selectedState) {\n      return `Find latest egg rates across all cities in ${formattedDisplayName} state. Daily updated egg prices for ${formattedDisplayName} with city-wise price list, historical data, price comparisons and market trends. Official NECC egg rates from poultry farms.`;\n    } else {\n      return `Today's Egg Rates in India - Get the latest egg prices across all cities and states. Updated daily (${currentDate}) NECC egg rates for wholesale and retail markets. Track egg price fluctuations, find lowest egg prices near you, and follow poultry market trends.`;\n    }\n  }, [selectedCity, selectedState, formattedDisplayName, currentDate, eggRates]);\n\n  // Generate canonical URL with trailing slash for consistency\n  const canonicalUrl = useMemo(() => {\n    if (selectedCity) {\n      return `https://todayeggrates.com/${selectedCity.toLowerCase().replace(/\\s+/g, '-')}-egg-rate/`;\n    } else if (selectedState) {\n      return `https://todayeggrates.com/state/${selectedState.toLowerCase().replace(/\\s+/g, '-')}-egg-rate/`;\n    } else {\n      return 'https://todayeggrates.com/';\n    }\n  }, [selectedCity, selectedState]);\n\n  // Enhanced structured data schema for rich search results with more details\n  const generateSchema = () => {\n    const today = new Date().toISOString().split('T')[0];\n    const tomorrow = new Date(new Date().setDate(new Date().getDate() + 1)).toISOString().split('T')[0];\n    const lastUpdated = new Date().toISOString();\n    \n    if (selectedCity && eggRates && eggRates.length > 0) {\n      const cityRate = eggRates[0]?.rate || \"0.00\";\n      // Enhanced product schema with more details\n      return {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"Product\",\n        \"name\": `Eggs in ${formattedDisplayName}`,\n        \"description\": `Current egg rates and prices in ${formattedDisplayName}, updated on ${today}. Check wholesale and retail prices with daily updates.`,\n        \"category\": \"Food & Groceries > Dairy & Eggs > Eggs\",\n        \"sku\": `EGG-${formattedDisplayName.toUpperCase().replace(/\\s+/g, '-')}-${today}`,\n        \"image\": [\n          \"https://todayeggrates.com/eggpic.png\",\n          \"https://todayeggrates.com/egg-tray.jpg\"\n        ],\n        \"brand\": {\n          \"@type\": \"Brand\",\n          \"name\": \"Farm Fresh Eggs\"\n        },\n        \"offers\": {\n          \"@type\": \"AggregateOffer\",\n          \"lowPrice\": (cityRate * 0.9).toFixed(2), // Estimate wholesale rate\n          \"highPrice\": (cityRate * 1.1).toFixed(2), // Estimate retail rate\n          \"priceCurrency\": \"INR\",\n          \"priceValidUntil\": tomorrow,\n          \"availability\": \"https://schema.org/InStock\",\n          \"url\": canonicalUrl,\n          \"itemCondition\": \"https://schema.org/NewCondition\",\n          \"offerCount\": \"20+\",\n          \"seller\": {\n            \"@type\": \"Organization\",\n            \"name\": \"Today Egg Rates\"\n          }\n        },\n        \"aggregateRating\": {\n          \"@type\": \"AggregateRating\",\n          \"ratingValue\": \"4.7\",\n          \"reviewCount\": \"125\",\n          \"bestRating\": \"5\",\n          \"worstRating\": \"1\"\n        },\n        \"review\": [\n          {\n            \"@type\": \"Review\",\n            \"reviewRating\": {\n              \"@type\": \"Rating\",\n              \"ratingValue\": \"4.8\",\n              \"bestRating\": \"5\"\n            },\n            \"author\": {\n              \"@type\": \"Person\",\n              \"name\": \"Egg Market Analyst\"\n            },\n            \"datePublished\": today,\n            \"reviewBody\": `Egg prices in ${formattedDisplayName} show healthy market conditions with good quality products available at competitive rates.`\n          },\n          {\n            \"@type\": \"Review\",\n            \"reviewRating\": {\n              \"@type\": \"Rating\",\n              \"ratingValue\": \"4.6\",\n              \"bestRating\": \"5\"\n            },\n            \"author\": {\n              \"@type\": \"Person\",\n              \"name\": \"Poultry Farm Association\"\n            },\n            \"datePublished\": today,\n            \"reviewBody\": `${formattedDisplayName} egg market shows stable prices with good quality eggs available from local farms.`\n          }\n        ],\n        \"additionalProperty\": [\n          {\n            \"@type\": \"PropertyValue\",\n            \"name\": \"Origin\",\n            \"value\": \"India\"\n          },\n          {\n            \"@type\": \"PropertyValue\",\n            \"name\": \"Size\",\n            \"value\": \"Medium to Large\"\n          },\n          {\n            \"@type\": \"PropertyValue\",\n            \"name\": \"PriceType\",\n            \"value\": \"Per 100 eggs\"\n          }\n        ]\n      };\n    } else if (selectedState) {\n      // Enhanced ItemList schema with more details\n      return {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"ItemList\",\n        \"name\": `Egg Rates in ${formattedDisplayName} State`,\n        \"description\": `Complete list of all cities egg rates in ${formattedDisplayName} state, updated on ${today}. Find the cheapest egg prices in your city.`,\n        \"url\": canonicalUrl,\n        \"numberOfItems\": cities.length,\n        \"dateModified\": lastUpdated,\n        \"itemListElement\": cities.slice(0, Math.min(cities.length, 25)).map((city, index) => ({\n          \"@type\": \"ListItem\",\n          \"position\": index + 1,\n          \"item\": {\n            \"@type\": \"Product\",\n            \"name\": `Eggs in ${city}`,\n            \"description\": `Daily updated egg prices in ${city}, ${formattedDisplayName}`,\n            \"url\": `https://todayeggrates.com/${city.toLowerCase().replace(/\\s+/g, '-')}-egg-rate/`,\n            \"category\": \"Food & Groceries > Eggs\"\n          }\n        }))\n      };\n    } else {\n      // Enhanced Dataset schema with more detailed information\n      return {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"Dataset\",\n        \"name\": \"India Egg Rates Dataset\",\n        \"description\": `Daily updated egg rates across all states and cities in India. Last updated: ${today}. Comprehensive collection of egg prices from all major markets.`,\n        \"url\": \"https://todayeggrates.com\",\n        \"keywords\": [\"egg rates\", \"egg prices\", \"India\", \"poultry\", \"wholesale egg\", \"retail egg\", \"NECC rates\", \"egg market data\", \"farm fresh eggs\"],\n        \"isAccessibleForFree\": true,\n        \"creator\": {\n          \"@type\": \"Organization\",\n          \"name\": \"TodayEggRates.com\",\n          \"url\": \"https://todayeggrates.com\"\n        },\n        \"dateModified\": lastUpdated,\n        \"datePublished\": today,\n        \"version\": today.replace(/-/g, ''),\n        \"temporalCoverage\": `${new Date().getFullYear() - 1}/${new Date().getFullYear()}`,\n        \"spatialCoverage\": {\n          \"@type\": \"Place\",\n          \"geo\": {\n            \"@type\": \"GeoShape\",\n            \"name\": \"India\",\n            \"box\": \"8.4 68.7 37.6 97.25\"\n          }\n        },\n        \"variableMeasured\": [\n          \"Egg Price (INR)\",\n          \"Daily Price Change\",\n          \"Weekly Price Trend\",\n          \"Monthly Price Comparison\"\n        ],\n        \"includedInDataCatalog\": {\n          \"@type\": \"DataCatalog\",\n          \"name\": \"India Agricultural Price Database\"\n        }\n      };\n    }\n  };\n\n  // Fetch states on mount\n  useEffect(() => {\n    fetch('/php/get_states.php')\n      .then(res => res.json())\n      .then(data => setStates(data))\n      .catch(error => console.error('Error fetching states:', error));\n  }, []);\n\n  // Fetch cities when a state is selected or when the URL changes\n  useEffect(() => {\n    if (selectedState) {\n      fetch(`/php/get_cities.php?state=${selectedState}`)\n        .then(res => res.json())\n        .then(data => setCities(data))\n        .catch(error => console.error('Error fetching cities:', error));\n    }\n  }, [selectedState]);\n\n  // Fetch state for the city from the URL\n  useEffect(() => {\n    if (cityParam) {\n      // Normalize city name for display (e.g., convert 'bengaluru' to 'Bengaluru')\n      const normalizedCity = cityParam.replace('-egg-rate', '');\n      let displayCity = normalizedCity.charAt(0).toUpperCase() + normalizedCity.slice(1);\n      \n      // Special handling for Bengaluru\n      if (displayCity.toLowerCase() === 'bengaluru') {\n        displayCity = 'Bengaluru';\n      }\n      \n      setSelectedCity(displayCity);\n      \n      fetch(`/php/get_state_for_city.php?city=${displayCity}`)\n        .then(res => res.json())\n        .then(data => {\n          if (data.state) {\n            setSelectedState(data.state);\n          }\n        })\n        .catch(error => console.error('Error fetching state for city:', error));\n    }\n  }, [cityParam]);\n\n  // Define handleFetchRates function\n  const handleFetchRates = useCallback(() => {\n    if (selectedCity && selectedState) {\n      // Fetch rates for selected city and state\n      fetch(`/php/get_rates.php?city=${selectedCity}&state=${selectedState}`)\n        .then(res => res.json())\n        .then(data => {\n          const convertedData = data.map(item => ({\n            ...item,\n            rate: parseFloat(item.rate), // Convert rate to a number\n          }));\n          setEggRates(convertedData);\n        })\n        .catch(error => console.error('Error fetching rates:', error));\n    } else {\n      // Fetch latest rates when no city/state is selected\n      fetch(`/php/get_latest_rates.php`)\n        .then(res => res.json())\n        .then(data => {\n          const convertedData = data.map(item => ({\n            ...item,\n            rate: parseFloat(item.rate), // Convert rate to a number\n          }));\n          setEggRates(convertedData);\n        })\n        .catch(error => console.error('Error fetching latest rates:', error));\n    }\n  }, [selectedCity, selectedState]);\n\n  // Fetch rates automatically when state or city changes\n  useEffect(() => {\n    handleFetchRates();\n  }, [selectedState, selectedCity, handleFetchRates]); // Run effect whenever selectedState or selectedCity changes\n\n  // Check if the current URL matches /state/:state\n  const stateMatch = matchPath('/state/:state-egg-rate', location.pathname);\n\n  // Update URL when selectedCity or selectedState changes\n  useEffect(() => {\n    if (selectedCity && !location.pathname.includes(`-egg-rate`)) {\n      // Update the URL format to /city-egg-rate (for frontend)\n      navigate(`/${selectedCity.toLowerCase()}-egg-rate/`);\n    } else if (selectedState && !selectedCity && !location.pathname.includes(`-egg-rate`)) {\n      // Update the URL format to /state/state-egg-rate (for frontend)\n      navigate(`/state/${selectedState.toLowerCase()}-egg-rate`);\n    }\n  }, [selectedCity, selectedState, navigate, location.pathname]);\n\n  // Update selectedState and selectedCity when URL parameters change\n  useEffect(() => {\n    if (stateParam) {\n      setSelectedState(stateParam.replace('-egg-rate', ''));\n      setSelectedCity('');\n    }\n    if (cityParam) {\n      setSelectedCity(cityParam.replace('-egg-rate', ''));\n      setSelectedState('');\n    }\n  }, [stateParam, cityParam]);\n\n  return (\n    <>\n      <Helmet \n        title={pageTitle} \n        description={metaDescription} \n        canonicalUrl={canonicalUrl}\n        schema={generateSchema()}\n      />\n      <div className=\"bg-gray-50 min-h-screen flex flex-col\" itemScope itemType=\"https://schema.org/WebPage\">\n        <Navbar\n          selectedState={selectedState}\n          setSelectedState={setSelectedState}\n          setSelectedCity={setSelectedCity}\n          selectedCity={selectedCity}\n          states={states}\n          cities={cities}\n        />\n        \n        <main className=\"flex-grow p-4 md:p-8 lg:p-12\">\n          <article itemScope itemType=\"https://schema.org/Article\">\n            <meta itemProp=\"datePublished\" content={new Date().toISOString()} />\n            <meta itemProp=\"dateModified\" content={new Date().toISOString()} />\n            <meta itemProp=\"author\" content=\"TodayEggRates.com\" />\n            <meta itemProp=\"publisher\" content=\"TodayEggRates.com\" />\n            <meta itemProp=\"headline\" content={pageTitle} />\n            <meta itemProp=\"image\" content=\"https://todayeggrates.com/eggpic.png\" />\n            <meta itemProp=\"articleSection\" content=\"Egg Rates\" />\n            <meta itemProp=\"keywords\" content={`egg rates, ${formattedDisplayName.toLowerCase()}, egg prices, NECC rates`} />\n            \n            <header>\n              <h1 className=\"text-3xl font-bold mb-6 text-center text-gray-800\" itemProp=\"headline\">\n                {selectedCity \n                  ? `Egg Rates in ${formattedDisplayName} Today (${currentDate})` \n                  : selectedState \n                  ? `Egg Rates in ${formattedDisplayName} State - Updated Daily` \n                  : \"Today's Egg Rates Across India - Latest NECC Prices\"}\n              </h1>\n              \n              <div className=\"max-w-4xl mx-auto egg-rates-summary\" itemProp=\"description\">\n                <p className=\"text-sm text-gray-500 text-center mb-4\">\n                  Last Updated: {new Date().toLocaleString('en-IN', {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    day: 'numeric',\n                    month: 'short',\n                    year: 'numeric',\n                    hour12: true\n                  })}\n                </p>\n                <BodyOne selectedCity={selectedCity} selectedState={selectedState} />\n              </div>\n            </header>\n\n            <section className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\n              {stateMatch ? (\n                <StatePage />\n              ) : (\n                <>\n                  <h2 className=\"text-2xl font-semibold mb-4 text-gray-700 speakable\">\n                    {selectedCity \n                      ? `${formattedDisplayName} Egg Price Table (${currentDate})` \n                      : 'India Egg Price Table - Today\\'s Rates'}\n                  </h2>\n                  {selectedCity && selectedState ? (\n                    <div>\n                      <div className=\"mb-4\">\n                        <p className=\"text-md text-gray-700 font-medium\">\n                          <span className=\"font-bold\">NECC Official Prices</span> for {formattedDisplayName} - \n                          {currentDate}\n                        </p>\n                      </div>\n                      <RateTable\n                        key={`${selectedCity}-${selectedState}`}\n                        selectedCity={selectedCity}\n                        selectedState={selectedState}\n                        eggRates={eggRates}\n                      />\n                    </div>\n                  ) : (\n                    <div>\n                      <div className=\"mb-4\">\n                        <p className=\"text-md text-gray-700 font-medium\">\n                          <span className=\"font-bold\">Latest National Egg Prices</span> - \n                          {currentDate}\n                        </p>\n                      </div>\n                      <DefaultTable key=\"default-table\" eggRates={eggRates} />\n                    </div>\n                  )}\n                </>\n              )}\n            </section>\n\n            <section className=\"mb-8\" aria-labelledby=\"states-cities-heading\">\n              <h2 id=\"states-cities-heading\" className=\"text-2xl font-semibold mb-4 text-gray-700 speakable\">Egg Rates By States and Cities in India</h2>\n              <p className=\"mb-4 text-gray-600\">Find current egg prices for all major cities and states across India. Click on any location to view detailed egg rates and price trends.</p>\n              <StateList states={states} cities={cities} />\n            </section>\n\n            <section className=\"mb-8\" aria-labelledby=\"special-rates-heading\">\n              <h2 id=\"special-rates-heading\" className=\"text-2xl font-semibold mb-4 text-gray-700 speakable\">Special Egg Rates & Market Trends</h2>\n              <p className=\"mb-4 text-gray-600\">Track egg price trends and special rates in major production centers. Compare wholesale and retail prices across different markets.</p>\n              <SpecialRatesTable />\n            </section>\n\n            <section className=\"mb-8\">\n              <BodyTwo selectedCity={selectedCity} selectedState={selectedState} />\n            </section>\n\n            <section className=\"mb-8\" aria-labelledby=\"news-updates-heading\">\n              <h2 id=\"news-updates-heading\" className=\"text-2xl font-semibold mb-4 text-gray-700 speakable\">Latest Egg Rate News & Updates</h2>\n              <p className=\"mb-4 text-gray-600\">Read the latest news and updates about egg prices, poultry market trends, and factors affecting egg rates in India.</p>\n              <BlogList blogs={blogs} />\n            </section>\n\n            <section className=\"mb-8\">\n              <BodyThree selectedCity={selectedCity} selectedState={selectedState} eggRates={eggRates} />\n            </section>\n\n            <section className=\"bg-white rounded-lg shadow-md p-6 mb-8\" aria-labelledby=\"faq-heading\">\n              <h2 id=\"faq-heading\" className=\"text-2xl font-semibold mb-4 text-gray-700 speakable\">Frequently Asked Questions About Egg Rates</h2>\n              <p className=\"mb-4 text-gray-600\">Find answers to common questions about egg prices, rates, and trends in the Indian poultry market.</p>\n              <FAQ selectedCity={selectedCity} selectedState={selectedState} eggRates={eggRates} />\n            </section>\n            \n            <section className=\"bg-gray-100 rounded-lg p-6 mb-8\">\n              <h2 className=\"text-xl font-semibold mb-3 text-gray-700\">Today's Popular Egg Rate Searches</h2>\n              <div className=\"flex flex-wrap gap-2\">\n                {['Delhi', 'Mumbai', 'Bangalore', 'Hyderabad', 'Chennai', 'Kolkata', \n                  'Pune', 'Ahmedabad', 'Namakkal', 'Barwala'].map(city => (\n                  <a key={city} href={`/${city.toLowerCase()}-egg-rate/`}\n                    className=\"bg-white px-3 py-1 rounded-full text-sm text-blue-700 hover:bg-blue-50 transition\">\n                    {city} Egg Rate\n                  </a>\n                ))}\n              </div>\n            </section>\n          </article>\n        </main>\n        \n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst RateTable = ({ eggRates, selectedCity, selectedState }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'descending' }); // Default to descending order\n  const itemsPerPage = 10;\n\n  const handleClick = (event) => {\n    setCurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(eggRates.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  const sortedEggRates = [...eggRates].sort((a, b) => {\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? -1 : 1;\n    }\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? 1 : -1;\n    }\n    return 0;\n  });\n\n  const currentItems = sortedEggRates.slice(indexOfFirstItem, indexOfLastItem);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  if (eggRates.length === 0) {\n    return <div>No rates available for {selectedCity}, {selectedState}.</div>;\n  }\n\n  const data = {\n    labels: currentItems.map(rate => rate.date),\n    datasets: [\n      {\n        label: 'Egg Rates',\n        data: currentItems.map(rate => rate.rate),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: `Egg Rates in ${selectedCity}, ${selectedState}`,\n      },\n    },\n    scales: {\n      x: {\n        ticks: {\n          maxRotation: 90,\n          minRotation: 45,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"dynamic-body p-4\">\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full border border-gray-300 mt-4\">\n          <thead>\n            <tr style={{ backgroundColor: '#F9BE0C' }}>\n              <th className=\"border border-gray-300 p-2 cursor-pointer\" onClick={() => requestSort('date')}>Date</th>\n              <th className=\"border border-gray-300 p-2 cursor-pointer\" onClick={() => requestSort('rate')}>Piece</th>\n              <th className=\"border border-gray-300 p-2\">Tray</th>\n              <th className=\"border border-gray-300 p-2\">100 Pcs</th>\n              <th className=\"border border-gray-300 p-2\">Peti</th>\n            </tr>\n          </thead>\n          <tbody>\n            {currentItems.map((rate, index) => (\n              <tr\n                key={`${rate.date}-${rate.rate}-${index}`}\n                className={`${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n              >\n                <td className=\"border border-gray-300 p-2\">{rate.date}</td>\n                <td className=\"border border-gray-300 p-2\">₹{rate.rate.toFixed(2)}</td>\n                <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 30).toFixed(2)}</td>\n                <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 100).toFixed(2)}</td>\n                <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 210).toFixed(2)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"pagination mt-4 flex justify-center\">\n        {pages.map(number => (\n          <button\n            key={number}\n            id={number}\n            onClick={handleClick}\n            className={`px-4 py-2 mx-1 border rounded ${currentPage === number ? 'bg-blue-500 text-white' : 'bg-white text-blue-500 hover:bg-blue-100'}`}\n          >\n            {number}\n          </button>\n        ))}\n      </div>\n      <div className=\"mt-8\" style={{ position: 'relative', height: '400px', width: '100%' }}>\n        <Bar data={data} options={options} />\n      </div>\n    </div>\n  );\n};\n\nRateTable.propTypes = {\n  eggRates: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string.isRequired,\n      rate: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  selectedCity: PropTypes.string.isRequired,\n  selectedState: PropTypes.string.isRequired,\n};\n\nexport default RateTable;","import React, { useEffect, useState } from 'react';\n\nconst SpecialRatesTable = () => {\n  const [specialRates, setSpecialRates] = useState([]);\n\n  useEffect(() => {\n    fetch('/php/get_special_rates.php')\n      .then(response => response.json())\n      .then(data => {\n        setSpecialRates(data);\n      })\n      .catch(error => console.error('Error fetching special rates:', error));\n  }, []);\n\n  return (\n    <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Special Rates</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead style={{ backgroundColor: '#f9be0c' }}>\n            <tr>\n              <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Market</th>\n              <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Piece</th>\n              <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Tray</th>\n            </tr>\n          </thead>\n          <tbody>\n            {specialRates.length > 0 ? (\n              specialRates.map((rate, index) => (\n                <tr\n                  key={index}\n                  className={`transition duration-150 ease-in-out ${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n                >\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">{rate.city}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">₹{parseFloat(rate.rate).toFixed(2)}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">₹{parseFloat((rate.rate) * 30).toFixed(2)}</td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"3\" className=\"px-6 py-4 text-center text-sm text-gray-500\">No special rates available</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default SpecialRatesTable;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst StateList = ({ states, cities }) => {\n  const navigate = useNavigate();\n\n  const handleStateClick = (state) => {\n    navigate(`/state/${state.toLowerCase()}-egg-rate`);\n  };\n\n  const handleCityClick = (city) => {\n    navigate(`/${city.toLowerCase()}-egg-rate`);\n  };\n\n  const renderStateTableRows = () => {\n    const rows = [];\n    for (let i = 0; i < states.length; i += 3) {\n      rows.push(\n        <tr key={i} className=\"bg-white border-b hover:bg-gray-50\">\n          {states.slice(i, i + 3).map(state => (\n            <td key={state} className=\"px-6 py-4 text-center\">\n              <button\n                onClick={() => handleStateClick(state)}\n                className=\"text-green-600 font-bold hover:underline transition duration-200\"\n              >\n                {state}\n              </button>\n            </td>\n          ))}\n        </tr>\n      );\n    }\n    return rows;\n  };\n\n  const renderCityTableRows = () => {\n    const rows = [];\n    for (let i = 0; i < cities.length; i += 3) {\n      rows.push(\n        <tr key={i} className=\"bg-white border-b hover:bg-gray-50\">\n          {cities.slice(i, i + 3).map(city => (\n            <td key={city} className=\"px-6 py-4 text-center\">\n              <button\n                onClick={() => handleCityClick(city)}\n                className=\"text-blue-600 font-bold hover:underline transition duration-200\"\n              >\n                {city}\n              </button>\n            </td>\n          ))}\n        </tr>\n      );\n    }\n    return rows;\n  };\n\n  return (\n    <div className=\"p-6 mt-6 bg-gray-100 rounded-lg shadow-lg max-w-4xl mx-auto\">\n      <h1 className=\"text-center bg-gray-200 rounded-lg w-full p-4 mt-4 text-xl font-semibold\">\n        Daily Egg Price in Mandi, National Wholesale Market Rate\n      </h1>\n      <h2 className=\"text-2xl font-bold mb-4 text-center\">Select a State</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {states.length > 0 ? renderStateTableRows() : (\n              <tr>\n                <td className=\"px-6 py-4 text-center\" colSpan=\"3\">Loading...</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      {cities.length > 0 && (\n        <>\n          <h2 className=\"text-2xl font-bold mt-8 mb-4 text-center\">Select a City</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {renderCityTableRows()}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default StateList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst StatePage = () => {\n  const { state: stateParam } = useParams();\n  const [averageRates, setAverageRates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Extract the state from the URL parameter\n  const state = stateParam.replace('-egg-rate', '');\n\n  useEffect(() => {\n    fetch(`/php/get_average_rates.php?state=${state}`)\n      .then(response => response.json())\n      .then(data => {\n        const sortedRates = (data.averageRates || []).sort((a, b) => new Date(b.date) - new Date(a.date));\n        setAverageRates(sortedRates);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching average rates:', error);\n        setError(error);\n        setLoading(false);\n      });\n  }, [state]);\n\n  if (loading) {\n    return (\n      <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n        <div className=\"text-center\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n        <div className=\"text-center text-red-500\">Error loading data: {error.message}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 mt-6 bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">Average Rates for {state}</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full border border-gray-300\">\n          <thead>\n            <tr style={{ backgroundColor: '#F9BE0C' }}>\n              <th className=\"border border-gray-300 p-4 text-left\">Date</th>\n              <th className=\"border border-gray-300 p-4 text-left\">Average Rate</th>\n            </tr>\n          </thead>\n          <tbody>\n            {averageRates.length > 0 ? (\n              averageRates.map((rate, index) => (\n                <tr\n                  key={`${rate.date}-${index}`}\n                  className={`transition duration-150 ${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n                >\n                  <td className=\"border border-gray-300 p-4\">{rate.date}</td>\n                  <td className=\"border border-gray-300 p-4\">\n                    {rate.averageRate ? `₹${parseFloat(rate.averageRate).toFixed(2)}` : 'N/A'}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td className=\"border border-gray-300 p-4 text-center\" colSpan=\"2\">No data available</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default StatePage;"],"names":["_ref","selectedCity","selectedState","displayName","today","Date","toLocaleDateString","day","month","year","featuredWebStories","setFeaturedWebStories","useState","isWebStoriesExpanded","setIsWebStoriesExpanded","useEffect","fetch","then","response","json","data","catch","error","console","_jsxs","className","children","length","_jsx","onClick","_Fragment","map","story","index","href","concat","slug","target","rel","src","thumbnail","alt","title","date","Link","to","eggRates","location","todayRate","rate","rate7DaysAgo","weeklyChange","toFixed","weeklyChangePercent","averagePrice","reduce","sum","formatPrice","price","toDateString","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","currentPage","setCurrentPage","sortConfig","setSortConfig","key","direction","handleClick","event","Number","id","pages","i","Math","ceil","push","indexOfLastItem","indexOfFirstItem","currentItems","sort","a","b","slice","requestSort","labels","city","datasets","label","backgroundColor","borderColor","borderWidth","style","toLowerCase","number","position","height","width","Bar","options","responsive","maintainAspectRatio","plugins","legend","display","text","_eggRates$","_eggRates$2","_eggRates$3","openFAQ","setOpenFAQ","rate30","rate100","faqList","question","answer","faq","toggleFAQ","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","MainPage","cityParam","state","stateParam","useParams","navigate","useNavigate","useLocation","states","setStates","cities","setCities","setSelectedState","replace","setSelectedCity","setEggRates","formattedDisplayName","useMemo","charAt","toUpperCase","currentDate","weekday","pageTitle","metaDescription","cityRate","canonicalUrl","res","normalizedCity","displayCity","handleFetchRates","useCallback","convertedData","item","_objectSpread","parseFloat","stateMatch","matchPath","pathname","includes","Helmet","description","schema","generateSchema","toISOString","split","tomorrow","setDate","getDate","lastUpdated","min","getFullYear","itemScope","itemType","Navbar","itemProp","content","toLocaleString","hour","minute","hour12","BodyOne","StatePage","RateTable","DefaultTable","StateList","SpecialRatesTable","BodyTwo","BlogList","blogs","BodyThree","FAQ","Footer","scales","x","ticks","maxRotation","minRotation","specialRates","setSpecialRates","colSpan","handleStateClick","handleCityClick","renderStateTableRows","rows","renderCityTableRows","averageRates","setAverageRates","loading","setLoading","setError","sortedRates","message","averageRate"],"sourceRoot":""}