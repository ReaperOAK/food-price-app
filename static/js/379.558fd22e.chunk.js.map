{"version":3,"file":"static/js/379.558fd22e.chunk.js","mappings":"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","sources":["components/layout/Breadcrumb.js","components/blog/TableOfContents.js","pages/BlogPage.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nconst Breadcrumb = () => {\n  const location = useLocation();\n  const pathSegments = location.pathname.split('/').filter(segment => segment !== '');\n  \n  // Skip rendering if we're on the homepage\n  if (pathSegments.length === 0) {\n    return null;\n  }\n  \n  // Generate breadcrumb items\n  const breadcrumbItems = [\n    {\n      name: 'Home',\n      path: '/',\n      position: 1\n    }\n  ];\n  \n  // Build the breadcrumb path segments\n  let currentPath = '';\n  pathSegments.forEach((segment, index) => {\n    currentPath += `/${segment}`;\n    \n    // Format the segment name to be more readable\n    let name = segment;\n    \n    // Handle special cases\n    if (segment.includes('-egg-rate')) {\n      name = segment.replace('-egg-rate', '');\n      name = name.charAt(0).toUpperCase() + name.slice(1) + ' Egg Rate';\n    } else if (segment === 'blog' && index === 0) {\n      name = 'Blog';\n    } else if (segment === 'state' && index === 0) {\n      name = 'States';\n    } else if (segment === 'webstories') {\n      name = 'Web Stories';\n    } else {\n      // Capitalize and replace hyphens with spaces for other segments\n      name = segment\n        .split('-')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n    }\n    \n    breadcrumbItems.push({\n      name,\n      path: currentPath,\n      position: index + 2\n    });\n  });\n  \n  // Create schema for breadcrumbs\n  const breadcrumbSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": breadcrumbItems.map(item => ({\n      \"@type\": \"ListItem\",\n      \"position\": item.position,\n      \"name\": item.name,\n      \"item\": `https://todayeggrates.com${item.path}`\n    }))\n  };\n  \n  return (\n    <>\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(breadcrumbSchema)}\n        </script>\n      </Helmet>\n      \n      <nav className=\"flex mb-5 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\n          {breadcrumbItems.map((item, index) => (\n            <li key={index} className=\"inline-flex items-center\">\n              {index > 0 && (\n                <span className=\"mx-2 text-gray-500\">/</span>\n              )}\n              \n              {index === breadcrumbItems.length - 1 ? (\n                <span className=\"text-gray-700 font-medium\" aria-current=\"page\">\n                  {item.name}\n                </span>\n              ) : (\n                <Link \n                  to={item.path} \n                  className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                >\n                  {item.name}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ol>\n      </nav>\n    </>\n  );\n};\n\nexport default Breadcrumb;","import React, { useEffect, useState, useRef } from 'react';\n\nconst TableOfContents = ({ contentId, blogId, isSticky = false }) => {\n  const [headings, setHeadings] = useState([]);\n  const [activeId, setActiveId] = useState('');\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const observerRef = useRef(null);\n  const mutationObserverRef = useRef(null);\n\n  useEffect(() => {\n    // Function to extract headings from content\n    const extractHeadings = () => {\n      const contentElement = document.getElementById(contentId);\n      if (!contentElement) return;\n      \n      // Get all h2 and h3 elements from the content\n      const elements = contentElement.querySelectorAll('h2, h3');\n      \n      // Add ids to elements that don't have them based on blogId and text\n      elements.forEach((element, index) => {\n        if (!element.id) {\n          const slugifiedText = element.innerText\n            .toLowerCase()\n            .replace(/[^\\w ]+/g, '')\n            .replace(/ +/g, '-');\n          element.id = `${blogId}-heading-${slugifiedText}`;\n        }\n      });\n      \n      const headingElements = Array.from(elements).map(element => ({\n        id: element.id,\n        text: element.innerText,\n        level: element.tagName === 'H2' ? 2 : 3\n      }));\n      \n      setHeadings(headingElements);\n      \n      // Clean up any previous intersection observer\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n      \n      // Set up new IntersectionObserver to track active heading\n      observerRef.current = new IntersectionObserver(\n        entries => {\n          entries.forEach(entry => {\n            if (entry.isIntersecting) {\n              setActiveId(entry.target.id);\n            }\n          });\n        },\n        { rootMargin: '0px 0px -80% 0px' }\n      );\n      \n      // Observe all heading elements\n      elements.forEach(element => observerRef.current.observe(element));\n    };\n\n    // Initial extraction of headings\n    extractHeadings();\n    \n    // Set up a MutationObserver to detect when content changes (like when blog content loads)\n    if (mutationObserverRef.current) {\n      mutationObserverRef.current.disconnect();\n    }\n    \n    const contentElement = document.getElementById(contentId);\n    if (contentElement) {\n      mutationObserverRef.current = new MutationObserver((mutations) => {\n        // If significant changes to content, re-extract headings\n        const shouldUpdate = mutations.some(mutation => \n          mutation.type === 'childList' && \n          (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0)\n        );\n        \n        if (shouldUpdate) {\n          // Small timeout to ensure DOM is fully updated\n          setTimeout(extractHeadings, 100);\n        }\n      });\n      \n      // Start observing content changes\n      mutationObserverRef.current.observe(contentElement, {\n        childList: true,\n        subtree: true\n      });\n    }\n    \n    return () => {\n      // Clean up observers when component unmounts or contentId/blogId changes\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n      if (mutationObserverRef.current) {\n        mutationObserverRef.current.disconnect();\n      }\n    };\n  }, [contentId, blogId]);\n\n  const scrollToHeading = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      window.scrollTo({\n        top: element.offsetTop - 100,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  const toggleCollapse = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  if (headings.length === 0) return null;\n\n  return (\n    <div className={`toc-container bg-white p-4 rounded-lg shadow-md mb-6 ${isSticky ? 'sticky top-24' : ''}`}>\n      <div className=\"flex justify-between items-center cursor-pointer\" onClick={toggleCollapse}>\n        <h2 className=\"text-xl font-bold text-gray-800\">Table of Contents</h2>\n        <button \n          aria-label={isCollapsed ? \"Expand\" : \"Collapse\"} \n          className=\"text-gray-600 hover:text-blue-600 focus:outline-none\"\n        >\n          <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            className={`h-5 w-5 transform transition-transform ${isCollapsed ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            viewBox=\"0 0 24 24\" \n            stroke=\"currentColor\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={isCollapsed ? \"M19 9l-7 7-7-7\" : \"M5 15l7-7 7 7\"} />\n          </svg>\n        </button>\n      </div>\n      \n      {!isCollapsed && (\n        <ul className=\"space-y-2 mt-3\">\n          {headings.map((heading) => (\n            <li \n              key={heading.id}\n              className={`toc-item ${heading.level === 3 ? 'ml-4' : ''}`}\n            >\n              <a\n                href={`#${heading.id}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  scrollToHeading(heading.id);\n                }}\n                className={`block text-${heading.level === 2 ? 'md' : 'sm'} ${\n                  activeId === heading.id\n                    ? 'text-blue-600 font-semibold'\n                    : 'text-gray-700 hover:text-blue-600'\n                } transition-colors duration-200`}\n              >\n                {heading.text}\n              </a>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default TableOfContents;","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport Navbar from '../components/layout/Navbar';\nimport Footer from '../components/layout/Footer';\nimport blogs from '../data/blogs'; \nimport BlogList from '../components/blog/BlogList';\nimport Breadcrumb from '../components/layout/Breadcrumb';\nimport TableOfContents from '../components/blog/TableOfContents';\nimport OptimizedImage from '../components/common/OptimizedImage';\n\n// Pre-define the import mapping for webpack to analyze\nconst blogComponentMap = {\n  'egg-rate-barwala': () => import('../pages/blogs/egg-rate-barwala'),\n  'blog-1': () => import('../pages/blogs/blog-1'),\n  'blog-2': () => import('../pages/blogs/blog-2'),\n  // Add any future blog links here\n};\n\nconst BlogPage = () => {\n  const { link } = useParams();\n  const blog = blogs.find((b) => b.link === link);\n  const [ContentComponent, setContentComponent] = useState(null);\n  \n  // Format the date for schema\n  const formattedDate = blog ? new Date(blog.uploadDate).toISOString() : new Date().toISOString();\n  \n  // Generate related articles links based on current blog tags\n  const relatedBlogs = blog ? blogs.filter(b => \n    b.link !== link && \n    b.tags && blog.tags && \n    b.tags.some(tag => blog.tags.includes(tag))\n  ).slice(0, 3) : [];\n\n  useEffect(() => {\n    if (blog && blogComponentMap[blog.link]) {\n      blogComponentMap[blog.link]()\n        .then((module) => {\n          setContentComponent(() => module.default);\n        })\n        .catch((error) => {\n          console.error(\"Error loading content component:\", error);\n        });\n    }\n  }, [blog]);\n\n  if (!blog) {\n    return <div>Blog not found</div>;\n  }\n\n  // Filter out the current blog from the list of blogs\n  const otherBlogs = blogs.filter((b) => b.link !== link);\n  \n  // Create article schema\n  const articleSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BlogPosting\",\n    \"mainEntityOfPage\": {\n      \"@type\": \"WebPage\",\n      \"@id\": `https://todayeggrates.com/blog/${blog.link}`\n    },\n    \"headline\": blog.title,\n    \"description\": blog.description,\n    \"image\": blog.image,\n    \"author\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Today Egg Rates\",\n      \"url\": \"https://todayeggrates.com\"\n    },\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Today Egg Rates\",\n      \"logo\": {\n        \"@type\": \"ImageObject\",\n        \"url\": \"https://todayeggrates.com/eggpic.webp\"\n      }\n    },\n    \"datePublished\": formattedDate,\n    \"dateModified\": formattedDate\n  };\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n      <Helmet>\n        <title>{blog.title} - Today Egg Rates</title>\n        <meta name=\"description\" content={blog.description} />\n        <meta name=\"keywords\" content={blog.tags ? blog.tags.join(', ') : 'egg rate, egg price, NECC egg rate'} />\n        <link rel=\"canonical\" href={`https://todayeggrates.com/blog/${blog.link}`} />\n        \n        {/* Article Schema */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(articleSchema)}\n        </script>\n        \n        {/* Open Graph Tags */}\n        <meta property=\"og:title\" content={blog.title} />\n        <meta property=\"og:description\" content={blog.description} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:url\" content={`https://todayeggrates.com/blog/${blog.link}`} />\n        <meta property=\"og:image\" content={blog.image} />\n        <meta property=\"article:published_time\" content={formattedDate} />\n        <meta property=\"article:modified_time\" content={formattedDate} />\n        \n        {/* Twitter Card */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={blog.title} />\n        <meta name=\"twitter:description\" content={blog.description} />\n        <meta name=\"twitter:image\" content={blog.image} />\n      </Helmet>\n      \n      <Navbar />\n      \n      <div className=\"flex-grow p-4 md:p-8 lg:p-12\">\n        {/* Breadcrumb */}\n        <div className=\"max-w-4xl mx-auto mb-4\">\n          <Breadcrumb />\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n          {/* Blog Header */}\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-800 mb-4\">{blog.title}</h1>\n            <div className=\"flex items-center text-sm text-gray-600 mb-6\">\n              <time dateTime={blog.uploadDate}>\n                {new Date(blog.uploadDate).toLocaleDateString('en-US', {\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </time>\n              <span className=\"mx-2\">•</span>\n              <span>Today Egg Rates</span>\n            </div>            <OptimizedImage \n              src={blog.image} \n              alt={blog.title} \n              className=\"w-full h-auto rounded-lg mb-6 object-cover\"\n              width={800}\n              height={400}\n            />\n          </div>\n          \n          {/* Table of Contents - only show for longer posts */}\n          {ContentComponent && <TableOfContents \n            key={blog.link} \n            contentId=\"blog-content\" \n            blogId={blog.link} \n            isSticky={false} \n          />}\n          \n          {/* Blog Content */}\n          <div id=\"blog-content\">\n            {ContentComponent ? <ContentComponent /> : <p>Loading content...</p>}\n          </div>\n          \n          {/* Tags */}\n          {blog.tags && blog.tags.length > 0 && (\n            <div className=\"mt-8 pt-4 border-t border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Tags</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {blog.tags.map(tag => (\n                  <span \n                    key={tag}\n                    className=\"px-3 py-1 bg-gray-100 rounded-full text-sm text-gray-600\"\n                  >\n                    {tag}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {/* Related Articles */}\n          {relatedBlogs.length > 0 && (\n            <div className=\"mt-8 pt-4 border-t border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">Related Articles</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {relatedBlogs.map(relatedBlog => (\n                  <Link \n                    key={relatedBlog.link} \n                    to={`/blog/${relatedBlog.link}`}\n                    className=\"block p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition\"\n                  >\n                    <h4 className=\"font-medium text-blue-700\">{relatedBlog.title}</h4>\n                    <p className=\"text-sm text-gray-600 mt-1 line-clamp-2\">{relatedBlog.description}</p>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <BlogList blogs={otherBlogs} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default BlogPage;"],"names":["Breadcrumb","pathSegments","useLocation","pathname","split","filter","segment","length","breadcrumbItems","name","path","position","currentPath","forEach","index","concat","includes","replace","charAt","toUpperCase","slice","map","word","join","push","breadcrumbSchema","item","_jsxs","_Fragment","children","_jsx","Helmet","type","JSON","stringify","className","Link","to","_ref","contentId","blogId","isSticky","headings","setHeadings","useState","activeId","setActiveId","isCollapsed","setIsCollapsed","observerRef","useRef","mutationObserverRef","useEffect","extractHeadings","contentElement","document","getElementById","elements","querySelectorAll","element","id","slugifiedText","innerText","toLowerCase","headingElements","Array","from","text","level","tagName","current","disconnect","IntersectionObserver","entries","entry","isIntersecting","target","rootMargin","observe","MutationObserver","mutations","some","mutation","addedNodes","removedNodes","setTimeout","childList","subtree","onClick","toggleCollapse","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","heading","href","e","preventDefault","window","scrollTo","top","offsetTop","behavior","scrollToHeading","blogComponentMap","egg-rate-barwala","blog-1","blog-2","BlogPage","link","useParams","blog","blogs","find","b","ContentComponent","setContentComponent","formattedDate","Date","uploadDate","toISOString","relatedBlogs","tags","tag","then","module","default","catch","error","otherBlogs","articleSchema","title","description","image","content","rel","property","Navbar","dateTime","toLocaleDateString","year","month","day","OptimizedImage","src","alt","width","height","TableOfContents","relatedBlog","BlogList","Footer"],"sourceRoot":""}