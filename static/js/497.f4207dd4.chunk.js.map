{"version":3,"file":"static/js/497.f4207dd4.chunk.js","mappings":"iMAKA,MAwGA,EAxGuBA,KACrB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,KAC5CO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,IAqBjD,OAnBAS,EAAAA,EAAAA,YAAU,KACRC,MAAM,4BACHC,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,MAAM,IAEvBJ,MAAKK,IACJjB,EAAciB,GACdd,GAAW,EAAM,IAElBe,OAAMd,IACLe,QAAQf,MAAM,8BAA+BA,GAC7CC,EAASD,EAAMgB,YACfjB,GAAW,EAAM,GACjB,GACH,IAECD,GAEAmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAACC,EAAAA,QAAM,CACLnB,cAAeA,EACfC,iBAAkBA,EAClBE,gBAAiBA,EACjBD,aAAcA,KAEhBgB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mEAAkEC,UAC/EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iFAEjBE,EAAAA,EAAAA,KAACE,EAAAA,QAAM,OAKTtB,GAEAiB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAACC,EAAAA,QAAM,CACLnB,cAAeA,EACfC,iBAAkBA,EAClBE,gBAAiBA,EACjBD,aAAcA,KAEhBgB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,UAC9CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kEAAiEC,UAC9EF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,8BAA4BnB,UAGnCoB,EAAAA,EAAAA,KAACE,EAAAA,QAAM,QAMXL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAACC,EAAAA,QAAM,CACLnB,cAAeA,EACfC,iBAAkBA,EAClBE,gBAAiBA,EACjBD,aAAcA,KAEhBa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAC,0BAEpDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sEAAqEC,SACjFxB,EAAW4B,KAAI,CAACC,EAAOC,KACtBR,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CACHC,GAAE,aAAAC,OAAeJ,EAAMK,MAEvBX,UAAU,+FAA8FC,SAAA,EAExGC,EAAAA,EAAAA,KAAA,OACEF,UAAU,0BACVY,MAAO,CAAEC,gBAAgB,OAADH,OAASJ,EAAMQ,UAAS,SAElDf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAAEK,EAAMS,SAC9Cb,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAEK,EAAMU,QACpCjB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,8BAA6BC,SAAA,CAAC,SAAEK,EAAMW,KAAK,mBAVrDV,OAgBY,IAAtB9B,EAAWyC,SACVhB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAC,kDAInCC,EAAAA,EAAAA,KAACE,EAAAA,QAAM,MACH,C","sources":["components/WebStoriesList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\n\nconst WebStoriesList = () => {\n  const [webStories, setWebStories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n\n  useEffect(() => {\n    fetch('/php/get_web_stories.php')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setWebStories(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching web stories:', error);\n        setError(error.toString());\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n        <Navbar\n          selectedState={selectedState}\n          setSelectedState={setSelectedState}\n          setSelectedCity={setSelectedCity}\n          selectedCity={selectedCity}\n        />\n        <div className=\"container mx-auto p-6 flex-grow flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-blue-500\"></div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n        <Navbar\n          selectedState={selectedState}\n          setSelectedState={setSelectedState}\n          setSelectedCity={setSelectedCity}\n          selectedCity={selectedCity}\n        />\n        <div className=\"container mx-auto p-6 flex-grow\">\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n            <p>Error loading web stories: {error}</p>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen flex flex-col\">\n      <Navbar\n        selectedState={selectedState}\n        setSelectedState={setSelectedState}\n        setSelectedCity={setSelectedCity}\n        selectedCity={selectedCity}\n      />\n      <div className=\"container mx-auto p-6 flex-grow\">\n        <h1 className=\"text-3xl font-bold text-center mb-8\">Egg Rate Web Stories</h1>\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n          {webStories.map((story, index) => (\n            <Link \n              to={`/webstory/${story.slug}`} \n              key={index}\n              className=\"bg-white rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300\"\n            >\n              <div \n                className=\"h-48 bg-cover bg-center\" \n                style={{ backgroundImage: `url(${story.thumbnail})` }}\n              ></div>\n              <div className=\"p-4\">\n                <h2 className=\"font-bold text-xl mb-2\">{story.title}</h2>\n                <p className=\"text-gray-600\">{story.date}</p>\n                <p className=\"text-red-600 font-bold mt-2\">â‚¹{story.rate} per egg</p>\n              </div>\n            </Link>\n          ))}\n        </div>\n        \n        {webStories.length === 0 && (\n          <div className=\"text-center py-10\">\n            <p className=\"text-gray-600\">No web stories available at the moment.</p>\n          </div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default WebStoriesList;\n"],"names":["WebStoriesList","webStories","setWebStories","useState","loading","setLoading","error","setError","selectedState","setSelectedState","selectedCity","setSelectedCity","useEffect","fetch","then","response","ok","Error","json","data","catch","console","toString","_jsxs","className","children","_jsx","Navbar","Footer","map","story","index","Link","to","concat","slug","style","backgroundImage","thumbnail","title","date","rate","length"],"sourceRoot":""}