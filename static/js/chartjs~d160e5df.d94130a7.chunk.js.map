{"version":3,"file":"static/js/chartjs~d160e5df.d94130a7.chunk.js","mappings":"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","sources":["../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.colors.ts","../node_modules/chart.js/src/plugins/plugin.decimation.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/chart.js/src/index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","arguments","length","Date","now","remaining","running","items","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","isNumberFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","concat","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","iAxisKey","vAxisKey","adata","Array","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","_arrayUnique","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","v","setInflateAmount","_ref","ratio","inflateAmount","_defineProperty","BarController","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","currentParsed","iScaleValue","skipNull","find","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","rotation","_getCircumference","circumference","_getRotationExtents","TAU","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","e","legendItem","toggleDataVisibility","LineController","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","interaction","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","callback","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","d","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","_isDomSupported","getElementById","instances","getChart","c","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","drawPoint","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","_ref7","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","tickValue","generateTicks$1","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","_ref8","minExp","exp","startExp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","logarithmic","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}