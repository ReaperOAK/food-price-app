{"version":3,"file":"static/js/main.a1a622c1.js","mappings":"uIAAA,MAYA,EAZwBA,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EAAY,GAExB,E,aCHF,MAAMS,EAAkBA,KACtBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2DAA0DC,UACvEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,KAAA,OACEI,IAAI,aACJC,IAAI,aACJJ,UAAU,+BACVK,cAAc,YAGlBN,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4DAA2DC,SAAC,kCAG1EF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAiCM,MAAO,CAAEC,eAAgB,SAAUN,SAAC,0DAgElFO,GAAMC,EAAAA,EAAAA,OAAK,IAAM,6DAAgBlB,MAAKmB,IAxDRC,WAElC,MAAMC,EAA0B,yBAA0BC,OACpDC,EAAkB,wBAAyBD,OAG5CD,SACG,kCAEHE,SACG,iCAIR,MAAMC,EAAgBA,KACG,CAAC,eAAgB,cACzBC,SAAQb,KACT,IAAIc,OACZd,IAAMA,CAAG,GACb,EAIEe,EAAgBA,KAEhB,wBAAyBL,QACV,IAAIM,qBAAqBC,IACxCA,EAAKC,aAAaL,SAAQM,IACA,cAApBA,EAAMC,WACRC,EAAgB,CACdC,KAAMH,EAAMG,KACZC,MAAOJ,EAAMI,MACbC,MAAOL,EAAMK,OAEjB,GACA,IAEKC,QAAQ,CAAEC,WAAY,CAAC,YAAa,eAAgB,6BAC/D,EAIE,wBAAyBhB,OAC3BiB,qBAAoB,KAClBf,IACAG,GAAe,IAGjBa,YAAW,KACThB,IACAG,GAAe,GACd,EACL,EAKAc,GACOtB,OAITuB,EAAAA,WAAoBC,SAASC,eAAe,SAASC,QACnDrC,EAAAA,EAAAA,KAACsC,EAAAA,SAAQ,CAACC,UAAUvC,EAAAA,EAAAA,KAACD,EAAe,IAAIG,UACtCF,EAAAA,EAAAA,KAACS,EAAG,OAKRgB,GAAgBe,IAO+B1B,OAAO2B,MAClD3B,OAAO2B,KAAK,QAAS,aAAc,CACjCC,YAAaF,EAAOd,KACpBiB,aAAcC,KAAKC,MAAML,EAAOb,OAChCmB,aAAcF,KAAKC,MAAML,EAAOZ,OAAS,GACzCmB,cAAeP,EAAOQ,QAE1B,G","sources":["reportWebVitals.js","index.js"],"sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense, lazy } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n// Enhanced loading component\nconst LoadingFallback = () => (\n  <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n    <div className=\"text-center animate-fade-in\">\n      <div className=\"w-16 h-16 mb-4 mx-auto\">\n        <img \n          src=\"/logo.webp\"\n          alt=\"Loading...\"\n          className=\"w-full h-full object-contain\"\n          fetchpriority=\"high\"\n        />\n      </div>\n      <h2 className=\"text-xl font-semibold text-blue-600 mb-2 animate-slide-up\">\n        Loading Today's Egg Rates...\n      </h2>\n      <p className=\"text-gray-600 animate-slide-up\" style={{ animationDelay: '100ms' }}>\n        Please wait while we fetch the latest egg prices\n      </p>\n    </div>\n  </div>\n);\n\n// Progressive enhancement setup\nconst setupProgressiveEnhancement = async () => {\n  // Detect browser capabilities\n  const hasIntersectionObserver = 'IntersectionObserver' in window;\n  const hasIdleCallback = 'requestIdleCallback' in window;\n  \n  // Load polyfills if needed\n  if (!hasIntersectionObserver) {\n    await import('intersection-observer');\n  }\n  if (!hasIdleCallback) {\n    await import('requestidlecallback-polyfill');\n  }\n\n  // Preload critical assets\n  const preloadAssets = () => {\n    const criticalImages = ['/eggpic.webp', '/logo.webp'];\n    criticalImages.forEach(src => {\n      const img = new Image();\n      img.src = src;\n    });\n  };\n\n  // Initialize after preloading\n  const initializeApp = () => {\n    // Setup performance monitoring\n    if ('PerformanceObserver' in window) {\n      const observer = new PerformanceObserver((list) => {\n        list.getEntries().forEach(entry => {\n          if (entry.entryType === 'web-vital') {\n            reportWebVitals({\n              name: entry.name,\n              value: entry.value,\n              delta: entry.delta\n            });\n          }\n        });\n      });\n      observer.observe({ entryTypes: ['web-vital', 'layout-shift', 'largest-contentful-paint'] });\n    }\n  };\n\n  // Execute initialization\n  if ('requestIdleCallback' in window) {\n    requestIdleCallback(() => {\n      preloadAssets();\n      initializeApp();\n    });\n  } else {\n    setTimeout(() => {\n      preloadAssets();\n      initializeApp();\n    }, 1);\n  }\n};\n\n// Load App with optimizations\nconst App = lazy(() => import('./App').then(module => {\n  setupProgressiveEnhancement();\n  return module;\n}));\n\n// Create root and render\nReactDOM.createRoot(document.getElementById('root')).render(\n  <Suspense fallback={<LoadingFallback />}>\n    <App />\n  </Suspense>\n);\n\n// Monitor and report vitals\nreportWebVitals(metric => {\n  // Log to console in development\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`${metric.name}:`, metric.value);\n  }\n  \n  // Report to analytics in production\n  if (process.env.NODE_ENV === 'production' && window.gtag) {\n    window.gtag('event', 'web_vitals', {\n      metric_name: metric.name,\n      metric_value: Math.round(metric.value),\n      metric_delta: Math.round(metric.delta || 0),\n      metric_rating: metric.rating\n    });\n  }\n});\n"],"names":["onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","LoadingFallback","_jsx","className","children","_jsxs","src","alt","fetchpriority","style","animationDelay","App","lazy","module","async","hasIntersectionObserver","window","hasIdleCallback","preloadAssets","forEach","Image","initializeApp","PerformanceObserver","list","getEntries","entry","entryType","reportWebVitals","name","value","delta","observe","entryTypes","requestIdleCallback","setTimeout","setupProgressiveEnhancement","ReactDOM","document","getElementById","render","Suspense","fallback","metric","gtag","metric_name","metric_value","Math","round","metric_delta","metric_rating","rating"],"sourceRoot":""}