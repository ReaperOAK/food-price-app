{"version":3,"file":"static/js/135.e2708d05.chunk.js","mappings":"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","sources":["components/RateTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst RateTable = ({ eggRates, selectedCity, selectedState }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'descending' }); // Default to descending order\n  const itemsPerPage = 10;\n\n  const handleClick = (event) => {\n    setCurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(eggRates.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  const sortedEggRates = [...eggRates].sort((a, b) => {\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? -1 : 1;\n    }\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? 1 : -1;\n    }\n    return 0;\n  });\n\n  const currentItems = sortedEggRates.slice(indexOfFirstItem, indexOfLastItem);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  if (eggRates.length === 0) {\n    return <div>No rates available for {selectedCity}, {selectedState}.</div>;\n  }\n\n  const data = {\n    labels: currentItems.map(rate => rate.date),\n    datasets: [\n      {\n        label: 'Egg Rates',\n        data: currentItems.map(rate => rate.rate),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: `Egg Rates in ${selectedCity}, ${selectedState}`,\n      },\n    },\n    scales: {\n      x: {\n        ticks: {\n          maxRotation: 90,\n          minRotation: 45,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"dynamic-body p-4\">\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full border border-gray-300 mt-4\">\n          <thead>\n            <tr style={{ backgroundColor: '#F9BE0C' }}>\n              <th className=\"border border-gray-300 p-2 cursor-pointer\" onClick={() => requestSort('date')}>Date</th>\n              <th className=\"border border-gray-300 p-2 cursor-pointer\" onClick={() => requestSort('rate')}>Piece</th>\n              <th className=\"border border-gray-300 p-2\">Tray</th>\n              <th className=\"border border-gray-300 p-2\">100 Pcs</th>\n              <th className=\"border border-gray-300 p-2\">Peti</th>\n            </tr>\n          </thead>\n          <tbody>\n            {currentItems.map((rate, index) => (\n              <tr\n                key={`${rate.date}-${rate.rate}-${index}`}\n                className={`${index % 2 === 0 ? 'bg-[#fffcdf]' : 'bg-[#fff1c8]'} hover:bg-[#ddfafe]`}\n              >\n                <td className=\"border border-gray-300 p-2\">{rate.date}</td>\n                <td className=\"border border-gray-300 p-2\">₹{rate.rate.toFixed(2)}</td>\n                <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 30).toFixed(2)}</td>\n                <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 100).toFixed(2)}</td>\n                <td className=\"border border-gray-300 p-2\">₹{(rate.rate * 210).toFixed(2)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"pagination mt-4 flex justify-center\">\n        {pages.map(number => (\n          <button\n            key={number}\n            id={number}\n            onClick={handleClick}\n            className={`px-4 py-2 mx-1 border rounded ${currentPage === number ? 'bg-blue-500 text-white' : 'bg-white text-blue-500 hover:bg-blue-100'}`}\n          >\n            {number}\n          </button>\n        ))}\n      </div>\n      <div className=\"mt-8\" style={{ position: 'relative', height: '400px', width: '100%' }}>\n        <Bar data={data} options={options} />\n      </div>\n    </div>\n  );\n};\n\nRateTable.propTypes = {\n  eggRates: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string.isRequired,\n      rate: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  selectedCity: PropTypes.string.isRequired,\n  selectedState: PropTypes.string.isRequired,\n};\n\nexport default RateTable;"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","_ref","eggRates","selectedCity","selectedState","currentPage","setCurrentPage","useState","sortConfig","setSortConfig","key","direction","handleClick","event","Number","target","id","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","sort","a","b","slice","requestSort","_jsxs","children","data","labels","map","rate","date","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","concat","scales","x","ticks","maxRotation","minRotation","className","_jsx","style","onClick","index","toFixed","number","height","width","Bar"],"sourceRoot":""}